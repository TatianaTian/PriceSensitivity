{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar MongoClient = require('mongodb').MongoClient;\n\nvar uri = \"mongodb+srv://tatiana:wmyzyqyouANDme824@cluster0-cigjb.mongodb.net/test?retryWrites=true&w=majority\";\nvar client = new MongoClient(uri, {\n  useNewUrlParser: true\n});\n\nfunction insertDoc(quote_number) {\n  var MongoClient = require('mongodb').MongoClient;\n\n  var uri = \"mongodb+srv://tatiana:wmyzyqyouANDme824@cluster0-cigjb.mongodb.net/test?retryWrites=true&w=majority\";\n  var client = new MongoClient(uri, {\n    useNewUrlParser: true\n  });\n  client.connect(function (err) {\n    var quotes = client.db(\"test\").collection(\"quote\");\n    quotes.insertOne({\n      id: 'test_user',\n      //quote: '1.85'\n      quote: quote_number\n    });\n    client.close();\n  });\n}\n\nfunction findDoc() {\n  var res, client, db, collection, query;\n  return _regeneratorRuntime.async(function findDoc$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(MongoClient.connect(uri, {\n            useNewUrlParser: true\n          })[\"catch\"](function (err) {\n            console.log(err);\n          }));\n\n        case 2:\n          client = _context.sent;\n\n          if (client) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 5:\n          _context.prev = 5;\n          db = client.db(\"test\");\n          collection = db.collection('quote');\n          query = {\n            id: 'test_user'\n          };\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(collection.findOne(query));\n\n        case 11:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.quote);\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](5);\n          console.log(_context.t0); //return null;\n\n        case 18:\n          _context.prev = 18;\n          client.close(); // return null;\n\n          return _context.finish(18);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[5, 15, 18, 21]], Promise);\n} //insertDoc('2.33');\n//findDoc2();\n\n\nexports.insertDoc = insertDoc;\nexports.findDoc = findDoc;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_app/trade/trades/mongotest.js"],"names":["MongoClient","require","uri","client","useNewUrlParser","insertDoc","quote_number","connect","err","quotes","db","collection","insertOne","id","quote","close","findDoc","console","log","query","findOne","res","exports"],"mappings":";;AACA,IAAMA,WAAW,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,WAAvC;;AACA,IAAME,GAAG,GAAG,qGAAZ;AACA,IAAMC,MAAM,GAAG,IAAIH,WAAJ,CAAgBE,GAAhB,EAAqB;AAAEE,EAAAA,eAAe,EAAE;AAAnB,CAArB,CAAf;;AAEA,SAASC,SAAT,CAAmBC,YAAnB,EAAgC;AAC9B,MAAMN,WAAW,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,WAAvC;;AACA,MAAME,GAAG,GAAG,qGAAZ;AACA,MAAMC,MAAM,GAAG,IAAIH,WAAJ,CAAgBE,GAAhB,EAAqB;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAArB,CAAf;AACAD,EAAAA,MAAM,CAACI,OAAP,CAAe,UAAAC,GAAG,EAAI;AACpB,QAAMC,MAAM,GAAGN,MAAM,CAACO,EAAP,CAAU,MAAV,EAAkBC,UAAlB,CAA6B,OAA7B,CAAf;AACAF,IAAAA,MAAM,CAACG,SAAP,CAAiB;AACfC,MAAAA,EAAE,EAAE,WADW;AAEf;AACAC,MAAAA,KAAK,EAAER;AAHQ,KAAjB;AAKAH,IAAAA,MAAM,CAACY,KAAP;AACD,GARD;AASD;;AAGD,SAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEuBhB,WAAW,CAACO,OAAZ,CAAoBL,GAApB,EAAyB;AAAEE,YAAAA,eAAe,EAAE;AAAnB,WAAzB,WACV,UAAAI,GAAG,EAAI;AAAES,YAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AAAmB,WADlB,CAFvB;;AAAA;AAEQL,UAAAA,MAFR;;AAAA,cAIOA,MAJP;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAQYO,UAAAA,EARZ,GAQiBP,MAAM,CAACO,EAAP,CAAU,MAAV,CARjB;AASUC,UAAAA,UATV,GASuBD,EAAE,CAACC,UAAH,CAAc,OAAd,CATvB;AAUUQ,UAAAA,KAVV,GAUkB;AAAEN,YAAAA,EAAE,EAAE;AAAN,WAVlB;AAAA;AAAA,2CAWkBF,UAAU,CAACS,OAAX,CAAmBD,KAAnB,CAXlB;;AAAA;AAWME,UAAAA,GAXN;AAAA,2CAYaA,GAAG,CAACP,KAZjB;;AAAA;AAAA;AAAA;AAeMG,UAAAA,OAAO,CAACC,GAAR,cAfN,CAgBM;;AAhBN;AAAA;AAkBMf,UAAAA,MAAM,CAACY,KAAP,GAlBN,CAmBK;;AAnBL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA4BA;AACA;;;AACAO,OAAO,CAACjB,SAAR,GAAoBA,SAApB;AACAiB,OAAO,CAACN,OAAR,GAAkBA,OAAlB","sourcesContent":["\nconst MongoClient = require('mongodb').MongoClient;\nconst uri = \"mongodb+srv://tatiana:wmyzyqyouANDme824@cluster0-cigjb.mongodb.net/test?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri, { useNewUrlParser: true });\n\nfunction insertDoc(quote_number){\n  const MongoClient = require('mongodb').MongoClient;\n  const uri = \"mongodb+srv://tatiana:wmyzyqyouANDme824@cluster0-cigjb.mongodb.net/test?retryWrites=true&w=majority\";\n  const client = new MongoClient(uri, { useNewUrlParser: true });\n  client.connect(err => {\n    const quotes = client.db(\"test\").collection(\"quote\");\n    quotes.insertOne({\n      id: 'test_user',\n      //quote: '1.85'\n      quote: quote_number\n    })\n    client.close();\n  });\n}\n\n\nasync function findDoc() {\n  var res;\n  const client = await MongoClient.connect(uri, { useNewUrlParser: true })\n      .catch(err => { console.log(err); });\n  if (!client) {\n      return;\n  }\n  try {\n      const db = client.db(\"test\");\n      let collection = db.collection('quote');\n      let query = { id: 'test_user' }\n      res = await collection.findOne(query);\n      return res.quote;\n      //console.log(res);\n  } catch (err) {\n      console.log(err);\n      //return null;\n  } finally {\n      client.close();\n     // return null;\n  }\n  //console.log('1 is ', res.quote)\n  //return await res.quote;\n  //return res.quote;\n}\n\n\n\n//insertDoc('2.33');\n//findDoc2();\nexports.insertDoc = insertDoc;\nexports.findDoc = findDoc;\n\n"]},"metadata":{},"sourceType":"script"}