{"ast":null,"code":"const linear_regression = require('./linear_regression');\n\nconst price_elasticity = require('./price_elasticity');\n\nconst price_sensitive_market = (tabs, maps) => {\n  //let myMap = new Map();\n  try {\n    var elasticity_list = [];\n    console.log(\"tabs.length is \", tabs.length);\n\n    for (var i = 1; i < tabs.length; i++) {\n      const selected_currency = tabs[i]['id'];\n      console.log(\"selected_currency is \", selected_currency);\n      const selected_data_all_products = maps.get(selected_currency);\n      const selected_data = selected_data_all_products.get('all');\n      var product_price_list = selected_data[2].map(function (element) {\n        return Math.round(element * product_price * 100) / 100;\n      });\n      const slope = linear_regression(selected_data[1], product_price_list)[3];\n      console.log(\"slope is \", slope);\n      const elasticity = price_elasticity(selected_data[1], product_price_list, Math.abs(slope));\n      console.log(\"elasticity is \", elasticity);\n\n      if (myMap.has(elasticity)) {\n        var value = myMap.get(elasticity);\n        value.push(selected_currency);\n        myMap.set(elasticity, value);\n      } else {\n        myMap.set(elasticity, [selected_currency]);\n      }\n\n      elasticity_list.push(elasticity);\n    }\n\n    elasticity_list.sort(function (a, b) {\n      return b - a;\n    });\n    console.log(\"elasticity_list is \", elasticity_list);\n    var currency_rank = [];\n\n    for (var j = 1; j < tabs.length; j++) {\n      var currency = elasticity_list[j];\n\n      if (!currency_rank.includes(currency[0])) {\n        currency_rank.push(currency);\n      }\n    }\n\n    console.log(\"currency_rank is \", currency_rank); //localStorage.setItem('currency_elasticity_rank', currency_rank);\n\n    return currency_rank;\n  } catch (error) {\n    console.log(\"error in price sensitive market\");\n  }\n};\n\nmodule.exports = price_sensitive_market;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/price_sensitive_market.js"],"names":["linear_regression","require","price_elasticity","price_sensitive_market","tabs","maps","elasticity_list","console","log","length","i","selected_currency","selected_data_all_products","get","selected_data","product_price_list","map","element","Math","round","product_price","slope","elasticity","abs","myMap","has","value","push","set","sort","a","b","currency_rank","j","currency","includes","error","module","exports"],"mappings":"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","sourcesContent":["const linear_regression = require('./linear_regression')\nconst price_elasticity = require('./price_elasticity')\n\nconst price_sensitive_market = (tabs, maps) => {\n    //let myMap = new Map();\n    try{\n    var elasticity_list = []\n    console.log(\"tabs.length is \", tabs.length)\n\n\n    for (var i=1;i<tabs.length;i++){\n        const selected_currency = tabs[i]['id']\n        console.log(\"selected_currency is \", selected_currency)\n\n        const selected_data_all_products = maps.get(selected_currency)\n        const selected_data = selected_data_all_products.get('all')\n        var product_price_list = selected_data[2].map(function(element) {\n            return Math.round(element*product_price*100)/100;\n        });\n\n        const slope = linear_regression(selected_data[1],product_price_list)[3]\n\n        console.log(\"slope is \", slope)\n\n        const elasticity = price_elasticity(selected_data[1], product_price_list, Math.abs(slope))\n\n        console.log(\"elasticity is \", elasticity)\n        \n        if (myMap.has(elasticity)){\n            var value = myMap.get(elasticity)\n            value.push(selected_currency)\n            myMap.set(elasticity, value)\n        }else{\n            myMap.set(elasticity, [selected_currency])\n        }\n        elasticity_list.push(elasticity)\n    }\n\n    elasticity_list.sort(function(a, b){return b-a});\n\n    console.log(\"elasticity_list is \", elasticity_list)\n\n    var currency_rank = []\n\n    for (var j=1;j<tabs.length;j++){\n        var currency = elasticity_list[j]\n        if (!currency_rank.includes(currency[0])){\n            currency_rank.push(currency)\n        }\n    }\n\n    console.log(\"currency_rank is \", currency_rank)\n\n    //localStorage.setItem('currency_elasticity_rank', currency_rank);\n    return currency_rank\n } catch (error){\n    console.log(\"error in price sensitive market\")\n    }\n}\n\nmodule.exports = price_sensitive_market; "]},"metadata":{},"sourceType":"script"}