{"ast":null,"code":"\"use strict\";\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst change_format2 = (allList, selected) => {\n  let myMap = new Map(); //console.log(\"all list is \", alllist)\n\n  const list = allList[1]; // try{\n\n  console.log(\"list in format is \", list);\n\n  for (var i = 0; i < list.length; i++) {\n    console.log(\"i is \", i);\n    const currency = list[i][0];\n    const detail = list[i][3];\n    const current_level = list[i][2];\n    console.log(\"currency is \", currency);\n\n    for (var j = 0; j < detail.length; j++) {\n      console.log(\"j is \", j);\n      var date_list = [];\n      var revenue_list = [];\n      var fx_list = [];\n\n      if (list[i][3][j][0] == 'all') {\n        //console.log('llist[i][3][j] is ', list[i][3][j])\n        for (var k = 0; k < list[i][3][j][1].length; k++) {\n          date_list.push(list[i][3][j][1][k][0]);\n          revenue_list.push(list[i][3][j][1][k][1][0]);\n          fx_list.push(list[i][3][j][1][k][1][1]);\n        }\n      } //console.log(\"arrived here, currency is \", currency)\n\n\n      myMap.set(currency, [date_list, revenue_list, fx_list, current_level]); //console.log(\"myMap is \", myMap)\n    } //myMap.set(list[i][0],\n\n  }\n\n  console.log(\"myMap is \", myMap);\n  const tabs = allList[0];\n\n  try {\n    if (selected !== 0) {\n      const selected_currency = tabs[selected]['id'];\n      console.log(\"selected currency is \", selected_currency);\n      const selected_data = myMap.get(selected_currency);\n      console.log(\"selected data is \", selected_data);\n\n      _storeJs.default.set('date', selected_data[0]);\n\n      _storeJs.default.set('price', selected_data[1]);\n\n      _storeJs.default.set('exchange_rate', selected_data[2]);\n    }\n  } catch (err) {\n    console.log(\"no id\");\n  }\n  /*\n  */\n\n  /*\n  console.log(\"date is \", selected_data[0])\n  console.log(\"price is \", selected_data[1])\n  console.log(\"exchange_rate is \", selected_data[2])\n   store.set('date', selected_data[0])\n  store.set('price', selected_data[1])\n  store.set('exchange_rate', selected_data[2])*/\n\n  /*}\n  catch(err) {\n      console.log(\"error\")\n  }*/\n\n\n  return null;\n};\n\nmodule.exports = change_format2;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/change_format2.js"],"names":["change_format2","allList","selected","myMap","Map","list","console","log","i","length","currency","detail","current_level","j","date_list","revenue_list","fx_list","k","push","set","tabs","selected_currency","selected_data","get","store","err","module","exports"],"mappings":"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","sourcesContent":["import store from 'store-js';\n\nconst change_format2 = (allList, selected) => {\n    let myMap = new Map();\n    //console.log(\"all list is \", alllist)\n    \n    const list = allList[1]\n   // try{\n        console.log(\"list in format is \", list)\n        for (var i=0; i<list.length; i++){\n            console.log(\"i is \", i)\n            const currency = list[i][0]\n            const detail = list[i][3]\n            const current_level = list[i][2]\n            console.log(\"currency is \", currency)\n\n            for (var j=0; j<detail.length; j++){\n                console.log(\"j is \", j)\n                var date_list = []\n                var revenue_list = []\n                var fx_list = []\n                if(list[i][3][j][0]=='all'){\n                    //console.log('llist[i][3][j] is ', list[i][3][j])\n                    for (var k=0; k<list[i][3][j][1].length; k++){\n                        \n                        date_list.push(list[i][3][j][1][k][0])\n                        revenue_list.push(list[i][3][j][1][k][1][0])\n                        fx_list.push(list[i][3][j][1][k][1][1])\n                    }\n                }\n                //console.log(\"arrived here, currency is \", currency)\n                myMap.set(currency, [date_list, revenue_list, fx_list, current_level])\n                //console.log(\"myMap is \", myMap)\n            }\n            \n            //myMap.set(list[i][0],\n        }\n        console.log(\"myMap is \", myMap)\n        \n        const tabs = allList[0]\n        try{\n            if (selected !== 0){\n                const selected_currency = tabs[selected]['id']\n                console.log(\"selected currency is \", selected_currency)\n    \n    \n                const selected_data = myMap.get(selected_currency)\n        \n                console.log(\"selected data is \", selected_data)\n    \n                store.set('date', selected_data[0])\n                store.set('price', selected_data[1])\n                store.set('exchange_rate', selected_data[2])\n            }\n\n\n        } catch(err){\n            console.log(\"no id\")\n        }\n        \n        /*\n*/\n\n        /*\n        console.log(\"date is \", selected_data[0])\n        console.log(\"price is \", selected_data[1])\n        console.log(\"exchange_rate is \", selected_data[2])\n\n        store.set('date', selected_data[0])\n        store.set('price', selected_data[1])\n        store.set('exchange_rate', selected_data[2])*/\n/*}\ncatch(err) {\n    console.log(\"error\")\n}*/\n    \n    return null\n}\n\nmodule.exports = change_format2; "]},"metadata":{},"sourceType":"script"}