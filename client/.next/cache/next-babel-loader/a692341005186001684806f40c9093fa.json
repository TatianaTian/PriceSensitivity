{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts(props) {\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function () {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/tabs').then(function (res) {\n        return res.json();\n      }).then(function (list) {\n        return _this.setState({\n          list: list\n        });\n      });\n      console.log(\"3\");\n    });\n\n    _this.state = {\n      list: [],\n      open_currency: false\n    };\n    console.log(\"1\");\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n      console.log(\"2\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          list = _this$state.list,\n          open_currency = _this$state.open_currency;\n      console.log(\"List is \", list);\n      var app = this.context;\n      var twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString(); //console.log('ids are ',store.get('ids') )\n\n      return __jsx(Tabs, {\n        tabs: tabs,\n        selected: selected,\n        onSelect: handleTabChange,\n        fitted: false\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/detect_transactions.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","ResourceListWithProducts","props","fetch","then","res","json","list","setState","console","log","state","open_currency","getList","app","context","twoWeeksFromNow","Date","now","toDateString","tabs","selected","handleTabChange","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;IAGMC,wB;;;;;AACJ,oCAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,8DAeR,YAAM;AACd;AACA;AACAC,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,eAAI,MAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAJA;AAAF,SAAd,CAAJ;AAAA,OAFV;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KAtBiB;;AAEhB,UAAKC,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,EADK;AAEXK,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAIAH,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AANgB;AAOjB;;;;wCAGmB;AAClB,WAAKG,OAAL;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;;6BAWQ;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACCJ,IADD,eACCA,IADD;AAAA,UACOK,aADP,eACOA,aADP;AAEPH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,IAAxB;AACA,UAAMO,GAAG,GAAG,KAAKC,OAAjB;AACA,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB,CAJO,CAKP;;AACA,aACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEC,IAAZ;AAAkB,QAAA,QAAQ,EAAEC,QAA5B;AAAsC,QAAA,QAAQ,EAAEC,eAAhD;AAAiE,QAAA,MAAM,EAAE;AAAzE,QADF;AAKD;;;;EApCoCC,KAAK,CAACC,S;;gBAAvCvB,wB,iBASiBD,O;;AA8BtB,eAAeC,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail, \n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      list: [],\n      open_currency: false,\n    }\n    console.log(\"1\")\n  }\n  static contextType = Context;\n\n  componentDidMount() {\n    this.getList();\n    console.log(\"2\")\n  }\n\n  getList = () => {\n    //fetch('/api/getList')\n    //fetch('https://ebb450c1.ngrok.io')\n    fetch('http://localhost:5000/api/tabs')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n    console.log(\"3\")\n  }\n\n  render() {\n    const { list, open_currency } = this.state;\n    console.log(\"List is \", list)\n    const app = this.context;\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    //console.log('ids are ',store.get('ids') )\n    return (\n      <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange} fitted={false}>\n      \n      </Tabs>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}