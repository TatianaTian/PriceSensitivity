{"ast":null,"code":"\"use strict\";\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nvar _polaris = require(\"@shopify/polaris\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getPearsonCorrelation = require('./calc_correlation');\n\nconst fetch_from_map = (selected, tabs, maps) => {\n  try {\n    if (selected !== 0) {\n      // fetch data for graphs\n      const selected_currency = tabs[selected]['id'];\n      console.log(\"selected currency is \", selected_currency);\n      const selected_data = maps.get(selected_currency);\n      console.log(\"selected data is \", selected_data);\n      localStorage.setItem('date', selected_data[0]);\n      localStorage.setItem('price', selected_data[1]);\n      localStorage.setItem('exchange_rate', selected_data[2]);\n      localStorage.setItem('current_level', selected_data[3]);\n      localStorage.setItem('correlation', getPearsonCorrelation(selected_data[1], selected_data[2]));\n      console.log(\"done storing\");\n      console.log(\"localStorage.getItem('date') is\", localStorage.getItem('date'));\n      console.log(\"localStorage.getItem('price') is\", localStorage.getItem('price'));\n      console.log(\"localStorage.getItem('exchange_rate') is\", localStorage.getItem('exchange_rate')); // filter options\n\n      var num_dates = 0;\n      var options = [];\n\n      for (let [key, value] of selected_data) {\n        num_dates = value[0].length;\n\n        if (num_dates > 1) {\n          options.push({\n            lable: key,\n            value: key\n          });\n        }\n\n        console.log(key + ' = ' + value);\n      }\n    }\n  } catch (err) {\n    console.log(\"no id\");\n  }\n\n  return options;\n};\n\nmodule.exports = fetch_from_map;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/fetch_from_map.js"],"names":["getPearsonCorrelation","require","fetch_from_map","selected","tabs","maps","selected_currency","console","log","selected_data","get","localStorage","setItem","getItem","num_dates","options","key","value","length","push","lable","err","module","exports"],"mappings":";;AAAA;;AACA;;;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,oBAAD,CAArC;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,IAAjB,KAA0B;AAG7C,MAAG;AAEC,QAAIF,QAAQ,KAAK,CAAjB,EAAmB;AACf;AACA,YAAMG,iBAAiB,GAAGF,IAAI,CAACD,QAAD,CAAJ,CAAe,IAAf,CAA1B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,iBAArC;AAGA,YAAMG,aAAa,GAAGJ,IAAI,CAACK,GAAL,CAASJ,iBAAT,CAAtB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,aAAjC;AAEAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,aAAa,CAAC,CAAD,CAA1C;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,aAAa,CAAC,CAAD,CAA3C;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCH,aAAa,CAAC,CAAD,CAAnD;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCH,aAAa,CAAC,CAAD,CAAnD;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCZ,qBAAqB,CAACS,aAAa,CAAC,CAAD,CAAd,EAAkBA,aAAa,CAAC,CAAD,CAA/B,CAAzD;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEAD,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA8CG,YAAY,CAACE,OAAb,CAAqB,MAArB,CAA9C;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CG,YAAY,CAACE,OAAb,CAAqB,OAArB,CAA/C;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAuDG,YAAY,CAACE,OAAb,CAAqB,eAArB,CAAvD,EApBe,CAuBf;;AAEA,UAAIC,SAAS,GAAG,CAAhB;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAI,CAACC,GAAD,EAAMC,KAAN,CAAT,IAAyBR,aAAzB,EAAwC;AACpCK,QAAAA,SAAS,GAAGG,KAAK,CAAC,CAAD,CAAL,CAASC,MAArB;;AACA,YAAIJ,SAAS,GAAC,CAAd,EAAgB;AACZC,UAAAA,OAAO,CAACI,IAAR,CACI;AACIC,YAAAA,KAAK,EAACJ,GADV;AACeC,YAAAA,KAAK,EAAED;AADtB,WADJ;AAKH;;AAEDT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,GAAG,KAAN,GAAcC,KAA1B;AACD;AAGN;AAMJ,GAjDD,CAiDE,OAAMI,GAAN,EAAU;AACRd,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAED,SAAOO,OAAP;AACH,CAzDD;;AA2DAO,MAAM,CAACC,OAAP,GAAiBrB,cAAjB","sourcesContent":["import store from 'store-js';\nimport { KeypressListener } from '@shopify/polaris';\n\nconst getPearsonCorrelation = require('./calc_correlation')\n\nconst fetch_from_map = (selected, tabs, maps) => {\n\n\n    try{\n        \n        if (selected !== 0){\n            // fetch data for graphs\n            const selected_currency = tabs[selected]['id']\n            console.log(\"selected currency is \", selected_currency)\n\n\n            const selected_data = maps.get(selected_currency)\n    \n            console.log(\"selected data is \", selected_data)\n\n            localStorage.setItem('date', selected_data[0]);\n            localStorage.setItem('price', selected_data[1]);\n            localStorage.setItem('exchange_rate', selected_data[2]);\n            localStorage.setItem('current_level', selected_data[3]);\n            localStorage.setItem('correlation', getPearsonCorrelation(selected_data[1],selected_data[2]));\n\n            console.log(\"done storing\")\n\n            console.log(\"localStorage.getItem('date') is\",localStorage.getItem('date'))\n            console.log(\"localStorage.getItem('price') is\",localStorage.getItem('price'))\n            console.log(\"localStorage.getItem('exchange_rate') is\",localStorage.getItem('exchange_rate'))\n\n\n            // filter options\n            \n            var num_dates = 0\n            var options = []\n            for (let [key, value] of selected_data) {\n                num_dates = value[0].length\n                if (num_dates>1){\n                    options.push(\n                        {\n                            lable:key, value: key\n                        }\n                    )\n                }\n\n                console.log(key + ' = ' + value)\n              }\n\n\n        }\n\n        \n\n\n\n    } catch(err){\n        console.log(\"no id\")\n    }\n    \n    return options\n}\n\nmodule.exports = fetch_from_map; \n\n"]},"metadata":{},"sourceType":"script"}