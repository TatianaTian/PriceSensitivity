{"ast":null,"code":"//import React from 'react';\n//import {Card, Layout} from '@shopify/polaris';\n//import {HorizontalBar, Doughnut, Bar} from 'react-chartjs-2';\n// Retrieves the list of items from the Express app\ngetList = () => {\n  //fetch('/api/getList')\n  //fetch('https://ebb450c1.ngrok.io')\n  fetch('http://localhost:5000/api/Country_data').then(res => res.json()).then(list => this.setState({\n    list\n  }));\n  console.log(res);\n};\n\nthis.getList();\n/*\nconst doughnutChartData = {\n  labels: ['USD/CNH will trend lower', 'USD/CNH will trend higher'],\n  datasets: [\n    {\n      backgroundColor: [\"#FF6D2D\",\"#45853C\"],\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderWidth: 2,\n      data: [28, 72],\n\n    }\n  ],\n};\n  \nconst doughnutChartOptions = {\n  maintainAspectRatio: true,\n  cutoutPercentage:70,\n  tooltips:{\n    enabled:false,\n  },\n  legend: {\n            display: false,\n          },\n  pieceLabel: {\n    render: 'value' + '%',\n    fontColor: \"white\",\n  }\n  };\n\nvar lineChartData = {\n  labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n  datasets: [{\n    type: \"bar\",\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [1, 2, 3, 4, 3, 2, 4, 3, 1],\n    spanGaps: false,\n    },\n    {\n      type: \"line\",\n      label: \"real\",\n      fill: false,\n      lineTension: 0,\n      backgroundColor: \"rgb(1, 2, 58)\",\n      borderColor: \"rgb(1, 2, 58)\",\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: \"rgb(1, 2, 58)\",\n      pointBackgroundColor: \"rgb(1, 2, 58)\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10,\n      // notice the gap in the data and the spanGaps: false\n      data: [7, 7.1005, 7.0906, 7.0879, 7.1372, 7.1542, 7.1257, 7.1673, 7.1562],\n      spanGaps: false,\n      }\n\n  ]\n  };\n\nvar lineChartOptions = {\n  maintainAspectRatio: true,\n  tooltips:{\n    enabled:true,\n  },\n  legend: {\n    display: false,\n  },\n  scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:false\n                },\n                scaleLabel: {\n                      display: false,\n                      labelString: 'USD/CNH',\n                      fontSize: 20 \n                  }\n            }],\n            xAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n            }\n            },],            \n        },\n        layout: {\n          padding: {\n              left: 0,\n              right: 50,\n              top: 0,\n              bottom: 0\n          }\n      }   \n};\n\n\nconst barChartData = {\n  labels: ['China - Monthly CPI', 'US - Monthly CPI', 'China - Quarterly GDP',\n            'US - Aaa Corporate Bonds', 'US - S&P 500'],\n  datasets: [\n    {\n      backgroundColor: [\"#ffa41b\", '#005082','#ff5733','#708160','#00a8cc'],\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderWidth: 2,\n      data: [0.65, 0.50, 0.47, 0.39, 0.37]\n    }\n  ],\n};\n\nconst barChartOptions = {\n\n  legend: {\n            display: false,\n          },\n\n  scales: {\n            xAxes: [{\n              ticks: {\n                min: 0,\n                max: 1,\n                callback: function(value) {\n                    return value\n                }\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Correlation Coefficient (Absolute Value)\"\n              }\n            },],\n            yAxes: [{\n              barPercentage: 0.3,\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n            }\n            },],\n          },\n};\n\n\nexport default function Country_data() {  \n    this.getList()\n    return (\n      <Card>\n            <Layout>\n            <Layout.Section oneHalf>\n                <Bar \n                  height=\"170vh\"\n                  data={lineChartData}\n                  options={lineChartOptions}\n                />\n                <Doughnut\n                    height=\"100vh\"\n                    data={doughnutChartData}\n                    options={doughnutChartOptions}\n                />\n  \n            </Layout.Section>\n            <Layout.Section oneHalf>\n                <HorizontalBar \n                    height=\"170vh\"\n                    data={barChartData}\n                    options={barChartOptions}\n                  />\n                <Doughnut\n                    height=\"100vh\"\n                    data={doughnutChartData}\n                    options={doughnutChartOptions}\n                />\n            </Layout.Section>\n          </Layout>\n      </Card>\n    );\n  }\n\n*/","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/components/Country_data.js"],"names":["getList","fetch","then","res","json","list","setState","console","log"],"mappings":"AAAA;AACA;AACA;AAGA;AACAA,OAAO,GAAG,MAAM;AACZ;AACA;AACAC,EAAAA,KAAK,CAAC,wCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAED,IAAAA;AAAF,GAAd,CAFd;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACC,CAPL;;AASA,KAAKH,OAAL;AAEA","sourcesContent":["//import React from 'react';\n//import {Card, Layout} from '@shopify/polaris';\n//import {HorizontalBar, Doughnut, Bar} from 'react-chartjs-2';\n\n\n// Retrieves the list of items from the Express app\ngetList = () => {\n    //fetch('/api/getList')\n    //fetch('https://ebb450c1.ngrok.io')\n    fetch('http://localhost:5000/api/Country_data')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n    console.log(res)\n    }  \n\nthis.getList()\n\n/*\nconst doughnutChartData = {\n  labels: ['USD/CNH will trend lower', 'USD/CNH will trend higher'],\n  datasets: [\n    {\n      backgroundColor: [\"#FF6D2D\",\"#45853C\"],\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderWidth: 2,\n      data: [28, 72],\n\n    }\n  ],\n};\n  \nconst doughnutChartOptions = {\n  maintainAspectRatio: true,\n  cutoutPercentage:70,\n  tooltips:{\n    enabled:false,\n  },\n  legend: {\n            display: false,\n          },\n  pieceLabel: {\n    render: 'value' + '%',\n    fontColor: \"white\",\n  }\n  };\n\nvar lineChartData = {\n  labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n  datasets: [{\n    type: \"bar\",\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [1, 2, 3, 4, 3, 2, 4, 3, 1],\n    spanGaps: false,\n    },\n    {\n      type: \"line\",\n      label: \"real\",\n      fill: false,\n      lineTension: 0,\n      backgroundColor: \"rgb(1, 2, 58)\",\n      borderColor: \"rgb(1, 2, 58)\",\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: \"rgb(1, 2, 58)\",\n      pointBackgroundColor: \"rgb(1, 2, 58)\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10,\n      // notice the gap in the data and the spanGaps: false\n      data: [7, 7.1005, 7.0906, 7.0879, 7.1372, 7.1542, 7.1257, 7.1673, 7.1562],\n      spanGaps: false,\n      }\n\n  ]\n  };\n\nvar lineChartOptions = {\n  maintainAspectRatio: true,\n  tooltips:{\n    enabled:true,\n  },\n  legend: {\n    display: false,\n  },\n  scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:false\n                },\n                scaleLabel: {\n                      display: false,\n                      labelString: 'USD/CNH',\n                      fontSize: 20 \n                  }\n            }],\n            xAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n            }\n            },],            \n        },\n        layout: {\n          padding: {\n              left: 0,\n              right: 50,\n              top: 0,\n              bottom: 0\n          }\n      }   \n};\n\n\nconst barChartData = {\n  labels: ['China - Monthly CPI', 'US - Monthly CPI', 'China - Quarterly GDP',\n            'US - Aaa Corporate Bonds', 'US - S&P 500'],\n  datasets: [\n    {\n      backgroundColor: [\"#ffa41b\", '#005082','#ff5733','#708160','#00a8cc'],\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderWidth: 2,\n      data: [0.65, 0.50, 0.47, 0.39, 0.37]\n    }\n  ],\n};\n\nconst barChartOptions = {\n\n  legend: {\n            display: false,\n          },\n\n  scales: {\n            xAxes: [{\n              ticks: {\n                min: 0,\n                max: 1,\n                callback: function(value) {\n                    return value\n                }\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Correlation Coefficient (Absolute Value)\"\n              }\n            },],\n            yAxes: [{\n              barPercentage: 0.3,\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n            }\n            },],\n          },\n};\n\n\nexport default function Country_data() {  \n    this.getList()\n    return (\n      <Card>\n            <Layout>\n            <Layout.Section oneHalf>\n                <Bar \n                  height=\"170vh\"\n                  data={lineChartData}\n                  options={lineChartOptions}\n                />\n                <Doughnut\n                    height=\"100vh\"\n                    data={doughnutChartData}\n                    options={doughnutChartOptions}\n                />\n  \n            </Layout.Section>\n            <Layout.Section oneHalf>\n                <HorizontalBar \n                    height=\"170vh\"\n                    data={barChartData}\n                    options={barChartOptions}\n                  />\n                <Doughnut\n                    height=\"100vh\"\n                    data={doughnutChartData}\n                    options={doughnutChartOptions}\n                />\n            </Layout.Section>\n          </Layout>\n      </Card>\n    );\n  }\n\n*/"]},"metadata":{},"sourceType":"script"}