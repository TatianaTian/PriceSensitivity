{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Tabs } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\nimport Main_data from \"../components/Main_data\";\n\nconst change_format2 = require('../functions/change_format2');\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", () => {\n      fetch('http://localhost:5000/api/tabs').then(res => res.json()).then(list2 => this.setState({\n        list2\n      }));\n    });\n\n    _defineProperty(this, \"getCountryData\", () => {\n      fetch('http://localhost:5000/api/country_data').then(res => res.json()).then(country_data => this.setState({\n        country_data\n      }));\n      console.log(\"3\");\n    });\n\n    this.state = {\n      list: [[], [], []],\n      selected: 0,\n      //list2 : [[[],[],[[],[],[]],[[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]]]],[[],[],[[],[],[]],[[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]]]],[[],[],[[],[],[]],[[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]]]]]\n      list2: [[], []]\n    };\n  }\n\n  componentDidMount() {\n    this.getList(); //this.getCountryData();\n\n    console.log(\"here\"); //console.log(\"list is \", this.state.list)\n    //change_format2(this.state.list)\n  }\n\n  render() {\n    const {\n      list,\n      selected,\n      list2\n    } = this.state;\n    change_format2(list);\n    /*\n    if (list2===null){\n      console.log(\"loading...\")\n    }{\n      console.log(\"list2 is \")\n    }*/\n\n    try {\n      console.log(\"list2 is \", list2[0][3]);\n    } catch (err) {\n      console.log(\"loading...\");\n    } //console.log(\"list 2 is \", list2[0][0][0][1][0][1][0])\n    //console.log(\"list 1 is \", list2[0][3][3])\n    //console.log(\"list 2 is \", list2[1][3][3])\n    //console.log(\"list 3 is \", list2[2][3][5])\n    //console.log(\"list 4 is \", list2[2][0][0][1][0][1][0])\n    //console.log(\"list 5 is \", list2[1][0][0][1][0][1][0])\n    //console.log(\"lis1 is \", list[0])\n    //console.log(\"list is \", list[1])\n    //console.log(\"selected is \", selected)\n\n\n    var i = 0;\n\n    if (selected > 0) {\n      i = selected - 1;\n    }\n    /*\n    const date = list[1][i][0]\n    const price = list[1][i][1]\n    const exchange_rate = list[1][i][2]\n    store.set('date', date)\n    store.set('price', price)\n    store.set('exchange_rate', exchange_rate)\n     const level = list[2]\n    store.set('level', level)\n    //console.log('level is ', level)\n    */\n    // var tab = list[0]\n\n\n    const tab = list2[0];\n    return __jsx(Tabs, {\n      tabs: tab,\n      selected: selected,\n      onSelect: selected => this.setState({\n        selected\n      }),\n      fitted: true\n    }, selected === 0 ? __jsx(Main_data, null) : __jsx(Country_data, null));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/detect_transactions.js"],"names":["gql","Query","Tabs","store","Redirect","Context","Country_data","Main_data","change_format2","require","ResourceListWithProducts","React","Component","constructor","props","fetch","then","res","json","list2","setState","country_data","console","log","state","list","selected","componentDidMount","getList","render","err","i","tab"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAAC,6BAAD,CAA9B;;AAGA,MAAMC,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AAErDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,qCAmBR,MAAM;AACdC,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,CAFf;AAGD,KAvBiB;;AAAA,4CA0BD,MAAM;AACrBJ,MAAAA,KAAK,CAAC,wCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMK,YAAY,IAAI,KAAKD,QAAL,CAAc;AAAEC,QAAAA;AAAF,OAAd,CAFtB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KA/BiB;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CADI;AAEXC,MAAAA,QAAQ,EAAE,CAFC;AAGX;AACAP,MAAAA,KAAK,EAAC,CAAC,EAAD,EAAI,EAAJ;AAJK,KAAb;AAMD;;AAGDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GADkB,CAElB;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAHkB,CAIlB;AACA;AACD;;AAiBDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAACJ,MAAAA,IAAD;AAAOC,MAAAA,QAAP;AAAiBP,MAAAA;AAAjB,QAA0B,KAAKK,KAArC;AAEAhB,IAAAA,cAAc,CAACiB,IAAD,CAAd;AACA;;;;;;;AAMA,QAAI;AACFH,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,CAAzB;AACD,KAFD,CAGA,OAAMW,GAAN,EAAW;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAfM,CAgBP;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;;;AAEA,QAAIQ,CAAC,GAAG,CAAR;;AACA,QAAIL,QAAQ,GAAG,CAAf,EAAiB;AACfK,MAAAA,CAAC,GAAGL,QAAQ,GAAG,CAAf;AACD;AAGD;;;;;;;;;;;AAYD;;;AAGC,UAAMM,GAAG,GAAIb,KAAK,CAAC,CAAD,CAAlB;AAGA,WAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEa,GAAZ;AAAiB,MAAA,QAAQ,EAAEN,QAA3B;AAAqC,MAAA,QAAQ,EAAGA,QAAD,IAAc,KAAKN,QAAL,CAAc;AAACM,QAAAA;AAAD,OAAd,CAA7D;AAAwF,MAAA,MAAM,EAAE;AAAhG,OACGA,QAAQ,KAAG,CAAX,GAEC,MAAC,SAAD,OAFD,GAIC,MAAC,YAAD,OALJ,CAFF;AAYD;;AAtGoD;;gBAAjDhB,wB,iBAWiBL,O;;AAgGtB,eAAeK,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {Tabs} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\nimport Main_data from \"../components/Main_data\";\n\nconst change_format2 = require('../functions/change_format2')\n\n\nclass ResourceListWithProducts extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      list : [[],[],[]],\n      selected: 0,  \n      //list2 : [[[],[],[[],[],[]],[[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]]]],[[],[],[[],[],[]],[[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]]]],[[],[],[[],[],[]],[[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]],[[],[[[],[]],[[],[]],[[],[]]]]]]]\n      list2:[[],[]]\n    }\n  }\n  static contextType = Context;\n\n  componentDidMount() {\n    this.getList();\n    //this.getCountryData();\n    console.log(\"here\")\n    //console.log(\"list is \", this.state.list)\n    //change_format2(this.state.list)\n  }\n\n  getList = () => {\n    fetch('http://localhost:5000/api/tabs')\n    .then(res => res.json())\n    .then(list2 => this.setState({ list2 }))\n  }\n\n  \n  getCountryData = () => {\n    fetch('http://localhost:5000/api/country_data')\n    .then(res => res.json())\n    .then(country_data => this.setState({ country_data }))\n    console.log(\"3\")\n  }\n\n  \n  render() {\n    const {list, selected, list2} = this.state;\n\n    change_format2(list)\n    /*\n    if (list2===null){\n      console.log(\"loading...\")\n    }{\n      console.log(\"list2 is \")\n    }*/\n    try {\n      console.log(\"list2 is \", list2[0][3])\n    }\n    catch(err) {\n      console.log(\"loading...\")\n    }\n    //console.log(\"list 2 is \", list2[0][0][0][1][0][1][0])\n    //console.log(\"list 1 is \", list2[0][3][3])\n    //console.log(\"list 2 is \", list2[1][3][3])\n    //console.log(\"list 3 is \", list2[2][3][5])\n    //console.log(\"list 4 is \", list2[2][0][0][1][0][1][0])\n    //console.log(\"list 5 is \", list2[1][0][0][1][0][1][0])\n\n    \n\n    //console.log(\"lis1 is \", list[0])\n\n    //console.log(\"list is \", list[1])\n    //console.log(\"selected is \", selected)\n\n    var i = 0\n    if (selected > 0){\n      i = selected - 1\n    }\n\n\n    /*\n    const date = list[1][i][0]\n    const price = list[1][i][1]\n    const exchange_rate = list[1][i][2]\n    store.set('date', date)\n    store.set('price', price)\n    store.set('exchange_rate', exchange_rate)\n\n    const level = list[2]\n    store.set('level', level)\n    //console.log('level is ', level)\n*/\n   // var tab = list[0]\n  \n\n    const tab =  list2[0]\n \n    \n    return (\n\n      <Tabs tabs={tab} selected={selected} onSelect={(selected) => this.setState({selected})} fitted={true} >\n        {selected===0? (\n          \n          <Main_data/>\n      ):(\n          <Country_data/>\n      )}\n\n      </Tabs>\n    );\n  }\n\n\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}