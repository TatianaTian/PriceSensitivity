{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport '../style/style.css';\nimport { AppProvider, Page, Card, DataTable, Button, ResourcePicker } from '@shopify/polaris';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport { FaLock } from 'react-icons/fa';\nimport store from 'store-js';\nimport Modal from '../components/Modal_Currency';\nimport React, { useState, useCallback, OptionList, setSelected } from 'react';\n\nvar request_bid_ask = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js');\n\nimport { HorizontalBar, Line, Doughnut } from 'react-chartjs-2';\nvar rows = [['GBP', 1.3, 1.2, 100, '15']];\nvar lineChartData = {\n  labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n  datasets: [{\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372,,,,],\n    spanGaps: false\n  }, {\n    label: \"forecast\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    // The main line color\n    borderDash: [5, 10],\n    // try [5, 15] for instance\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"white\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"white\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: true\n    data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372, 7.1304, 7.1330, 7.1513, 7.1431],\n    spanGaps: true\n  }]\n};\nvar lineChartOptions = {\n  maintainAspectRatio: false,\n  tooltips: {\n    enabled: false\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: false\n      },\n      scaleLabel: {\n        display: false,\n        labelString: 'USD/CNH',\n        fontSize: 20\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0)\"\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 50,\n      top: 0,\n      bottom: 0\n    }\n  }\n}; // Function\n\nvar dashboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(dashboard, _React$Component);\n\n  var _super = _createSuper(dashboard);\n\n  // Initialize the state\n  function dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, dashboard);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function () {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/getList').then(function (res) {\n        return res.json();\n      }).then(function (list) {\n        return _this.setState({\n          list: list\n        });\n      });\n      console.log(\"3\");\n    });\n\n    _this.state = {\n      list: [],\n      open_currency: false,\n      rows: [],\n      active: true,\n      selected: []\n    };\n    console.log(\"1\");\n    return _this;\n  } // Fetch the list on first mount\n\n\n  _createClass(dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n      console.log(\"2\");\n    } // Retrieves the list of items from the Express app\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          list = _this$state.list,\n          open_currency = _this$state.open_currency;\n      return __jsx(\"div\", {\n        className: \"main_background_image\"\n      }, __jsx(\"h1\", null, \"List of Items\"), list.length ? __jsx(\"div\", null, list.map(function (item) {\n        return __jsx(\"div\", null, item);\n      })) : __jsx(\"div\", null, __jsx(\"h2\", null, \"No List Items Found\")), __jsx(\"div\", null, __jsx(Line, {\n        height: \"320vh\",\n        data: lineChartData,\n        options: lineChartOptions\n      })), __jsx(Page, {\n        title: \"Gauranteed Exchange Rate\"\n      }, __jsx(Card, null, __jsx(DataTable, {\n        columnContentTypes: ['text', 'numeric', 'numeric', 'numeric', 'numeric'],\n        headings: [\"Buyer's currency\", 'Gauranteed Exchange Rate', 'Real-time Exchange Rate', 'Gauranteed Amount', 'Extra Revenue'],\n        rows: rows,\n        totals: ['', '', '', '', '$34.78']\n      }))), __jsx(Modal, null));\n    }\n  }]);\n\n  return dashboard;\n}(React.Component);\n\nexport default dashboard;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/dashboard.js"],"names":["AppProvider","Page","Card","DataTable","Button","ResourcePicker","translations","FaLock","store","Modal","React","useState","useCallback","OptionList","setSelected","request_bid_ask","require","HorizontalBar","Line","Doughnut","rows","lineChartData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","spanGaps","lineChartOptions","maintainAspectRatio","tooltips","enabled","legend","display","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","fontSize","xAxes","gridLines","color","layout","padding","left","right","top","bottom","dashboard","props","fetch","then","res","json","list","setState","console","log","state","open_currency","active","selected","getList","length","map","item","Component"],"mappings":"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","sourcesContent":["import '../style/style.css'\nimport { AppProvider, Page, Card, DataTable, Button, ResourcePicker } from '@shopify/polaris';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport {FaLock } from 'react-icons/fa';\nimport store from 'store-js';\nimport Modal from '../components/Modal_Currency'\nimport React, {useState, useCallback, OptionList, setSelected} from 'react';\nlet request_bid_ask = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js')\nimport {HorizontalBar, Line, Doughnut} from 'react-chartjs-2';\n\n\n\nconst rows = [['GBP', 1.3, 1.2, 100, '15']]\n\nvar lineChartData = {\n    labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n    datasets: [{\n      label: \"real\",\n      fill: false,\n      lineTension: 0,\n      backgroundColor: \"rgb(1, 2, 58)\",\n      borderColor: \"rgb(1, 2, 58)\",\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: \"rgb(1, 2, 58)\",\n      pointBackgroundColor: \"rgb(1, 2, 58)\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10,\n      // notice the gap in the data and the spanGaps: false\n      data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372, , ,,],\n      spanGaps: false,\n      },\n        {\n        label: \"forecast\",\n        fill: false,\n        lineTension: 0,\n        backgroundColor: \"rgb(1, 2, 58)\",\n        borderColor: \"rgb(1, 2, 58)\", // The main line color\n        \n        borderDash: [5, 10], // try [5, 15] for instance\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: \"rgb(1, 2, 58)\",\n        pointBackgroundColor: \"white\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"white\",\n        pointHoverBorderColor: \"rgb(1, 2, 58)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 4,\n        pointHitRadius: 10,\n        // notice the gap in the data and the spanGaps: true\n        data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372, 7.1304, 7.1330, 7.1513, 7.1431],\n        spanGaps: true,\n      }, \n  \n    ]\n  };\n  \n  var lineChartOptions = {\n    maintainAspectRatio: false,\n    tooltips:{\n      enabled:false,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n              yAxes: [{\n                  ticks: {\n                      beginAtZero:false\n                  },\n                  scaleLabel: {\n                       display: false,\n                       labelString: 'USD/CNH',\n                       fontSize: 20 \n                    }\n              }],\n              xAxes: [{\n                gridLines: {\n                  color: \"rgba(0, 0, 0, 0)\",\n              }\n              },],            \n          },\n          layout: {\n            padding: {\n                left: 0,\n                right: 50,\n                top: 0,\n                bottom: 0\n            }\n        }   \n  };\n\n\n// Function\n\nclass dashboard extends React.Component {\n    // Initialize the state\n    constructor(props){\n      super(props);\n      this.state = {\n        list: [],\n        open_currency: false,\n        rows:[],\n        active: true,\n        selected: []\n      }\n      console.log(\"1\")\n    }\n    // Fetch the list on first mount\n    componentDidMount() {\n      this.getList();\n      console.log(\"2\")\n    }\n  \n    // Retrieves the list of items from the Express app\n    getList = () => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/getList')\n      .then(res => res.json())\n      .then(list => this.setState({ list }))\n      console.log(\"3\")\n    }  \n\n\n  render() {\n    const { list, open_currency } = this.state;\n    \n    return (\n      <div className=\"main_background_image\">\n      <h1>List of Items</h1>\n      {/* Check to see if any items are found*/}\n      {list.length ? (\n        <div>\n          {/* Render the list of items */}\n          {list.map((item) => {\n            return(\n              <div>\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <h2>No List Items Found</h2>\n        </div>\n      )\n    }\n        <div>\n            <Line \n            height=\"320vh\"\n            data={lineChartData}\n            options={lineChartOptions}\n            />\n        </div>    \n\n      <Page title=\"Gauranteed Exchange Rate\">\n            <Card>\n              <DataTable\n                columnContentTypes={[\n                  'text',\n                  'numeric',\n                  'numeric',\n                  'numeric',\n                  'numeric',\n                ]}\n                headings={[\n                  \"Buyer's currency\",\n                  'Gauranteed Exchange Rate',\n                  'Real-time Exchange Rate',\n                  'Gauranteed Amount',\n                  'Extra Revenue',\n                ]}\n                rows={rows}\n                totals={['', '', '', '', '$34.78']}\n              />\n            </Card>\n          </Page>\n\n          <Modal/>\n          \n    </div>\n\n    \n    );\n\n\n\n\n  }\n\n\n}\n\n\n\n export default dashboard;"]},"metadata":{},"sourceType":"module"}