{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\nimport { Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle } from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\";\nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\";\n\nvar AnnotatedLayout = /*#__PURE__*/function (_React$Component) {\n  _inherits(AnnotatedLayout, _React$Component);\n\n  var _super = _createSuper(AnnotatedLayout);\n\n  function AnnotatedLayout() {\n    var _this;\n\n    _classCallCheck(this, AnnotatedLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'EUR',\n      amount: '10',\n      list: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleQuoteSubmit2\", function () {\n      var currency_save = _this.state.currency; // handleQuoteSubmit(currency_save)\n      // Retrieves the list of items from the Express app\n\n      console.log(_this.state.list);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTradeSubmit2\", function () {\n      var currency_save = _this.state.currency;\n      var amount_save = _this.state.amount;\n      handleTradeSubmit(currency_save, amount_save);\n    });\n\n    return _this;\n  }\n\n  _createClass(AnnotatedLayout, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currency = _this$state.currency,\n          amount = _this$state.amount,\n          list = _this$state.list;\n      return __jsx(Layout.AnnotatedSection, {\n        title: \"Check exchange rates\",\n        description: \"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      }, __jsx(Card, {\n        sectioned: true\n      }, __jsx(Form, {\n        onSubmit: this.handleQuoteSubmit2\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: currency,\n        onChange: this.handleChange('currency'),\n        label: \"Currency\",\n        type: \"currency\"\n      }), __jsx(TextField, {\n        value: amount,\n        onChange: this.handleChange('amount'),\n        label: \"Amount\",\n        type: \"amount\"\n      }), __jsx(\"p\", null, \"The quote is \"), __jsx(Stack, {\n        distribution: \"trailing\"\n      }, __jsx(Button, {\n        submit: true\n      }, \"Check\")))), __jsx(Form, {\n        onSubmit: this.handleTradeSubmit2\n      }, __jsx(FormLayout, null, __jsx(Stack, {\n        distribution: \"trailing\"\n      }, __jsx(Button, {\n        submit: true\n      }, \"Trade\"))))));\n    }\n  }]);\n\n  return AnnotatedLayout;\n}(React.Component);\n\nexport default AnnotatedLayout;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/backend/client/pages/index.js"],"names":["Button","Card","Form","FormLayout","Layout","Page","SettingToggle","Stack","TextField","TextStyle","handleQuoteSubmit","handleTradeSubmit","AnnotatedLayout","currency","amount","list","field","value","setState","currency_save","state","console","log","amount_save","handleQuoteSubmit2","handleChange","handleTradeSubmit2","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsDC,aAAtD,EAAqEC,KAArE,EAA4EC,SAA5E,EAAuFC,SAAvF,QAAuG,kBAAvG;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;;IAEMC,e;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,IAAI,EAAE;AAHA,K;;mEAqDO,UAACC,KAAD,EAAW;AACxB,aAAO,UAACC,KAAD;AAAA,eAAW,MAAKC,QAAL,qBAAgBF,KAAhB,EAAwBC,KAAxB,EAAX;AAAA,OAAP;AACD,K;;yEACoB,YAAM;AACzB,UAAIE,aAAa,GAAG,MAAKC,KAAL,CAAWP,QAA/B,CADyB,CAE1B;AAED;;AAEEQ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKF,KAAL,CAAWL,IAAvB;AAED,K;;yEACoB,YAAM;AACzB,UAAII,aAAa,GAAG,MAAKC,KAAL,CAAWP,QAA/B;AACA,UAAIU,WAAW,GAAG,MAAKH,KAAL,CAAWN,MAA7B;AACAH,MAAAA,iBAAiB,CAACQ,aAAD,EAAeI,WAAf,CAAjB;AACD,K;;;;;;;6BA/DQ;AAAA,wBAE2B,KAAKH,KAFhC;AAAA,UAEAP,QAFA,eAEAA,QAFA;AAAA,UAEUC,MAFV,eAEUA,MAFV;AAAA,UAEkBC,IAFlB,eAEkBA,IAFlB;AAIP,aACE,MAAC,MAAD,CAAQ,gBAAR;AACA,QAAA,KAAK,EAAC,sBADN;AAEA,QAAA,WAAW,EAAC;AAFZ,SAIE,MAAC,IAAD;AAAM,QAAA,SAAS;AAAf,SACA,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKS;AAArB,SACI,MAAC,UAAD,QACE,MAAC,SAAD;AACE,QAAA,KAAK,EAAEX,QADT;AAEE,QAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkB,UAAlB,CAFZ;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,IAAI,EAAC;AAJP,QADF,EAOE,MAAC,SAAD;AACE,QAAA,KAAK,EAAEX,MADT;AAEE,QAAA,QAAQ,EAAE,KAAKW,YAAL,CAAkB,QAAlB,CAFZ;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,IAAI,EAAC;AAJP,QAPF,EAaE,iCAbF,EAcE,MAAC,KAAD;AAAO,QAAA,YAAY,EAAC;AAApB,SACE,MAAC,MAAD;AAAQ,QAAA,MAAM;AAAd,iBADF,CAdF,CADJ,CADA,EAwBE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC;AAArB,SACE,MAAC,UAAD,QACE,MAAC,KAAD;AAAO,QAAA,YAAY,EAAC;AAApB,SACE,MAAC,MAAD;AAAQ,QAAA,MAAM;AAAd,iBADF,CADF,CADF,CAxBF,CAJF,CADF;AA0CD;;;;EArD2BC,KAAK,CAACC,S;;AA0EpC,eAAehB,eAAf","sourcesContent":["/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\n\n\nimport {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;"]},"metadata":{},"sourceType":"module"}