{"ast":null,"code":"\"use strict\";\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getPearsonCorrelation = require('./calc_correlation');\n\nconst change_format2 = (allList, selected) => {\n  let myMap = new Map(); //console.log(\"all list is \", alllist)\n\n  const list = allList[1]; // try{\n\n  console.log(\"list in format is \", list); // i is currency iterator\n\n  for (var i = 0; i < list.length; i++) {\n    console.log(\"i is \", i);\n    const currency = list[i][0];\n    const detail = list[i][3];\n    const current_level = list[i][2];\n    console.log(\"currency is \", currency); // j is products/all iterator\n\n    let map2 = new Map();\n\n    for (var j = 0; j < detail.length; j++) {\n      console.log(\"j is \", j);\n      var date_list = [];\n      var revenue_list = [];\n      var fx_list = [];\n      const product_id = list[i][3][j][0];\n\n      for (var k = 0; k < list[i][3][j][1].length; k++) {\n        date_list.push(list[i][3][j][1][k][0]); //date_list.push('*')\n\n        revenue_list.push(parseFloat(list[i][3][j][1][k][1][0])); //revenue_list.push('*')\n\n        fx_list.push(parseFloat(list[i][3][j][1][k][1][1])); //fx_list.push('*')\n      }\n\n      map2.set(product_id, [date_list, revenue_list, fx_list, current_level]);\n    }\n\n    myMap.set(currency, map2);\n    /*\n                    if(list[i][3][j][0]=='all'){\n    \n                        // k is the date iterator\n                        for (var k=0; k<list[i][3][j][1].length; k++){\n                            \n                            date_list.push(list[i][3][j][1][k][0])\n                            //date_list.push('*')\n                            revenue_list.push(parseFloat(list[i][3][j][1][k][1][0]))\n                            //revenue_list.push('*')\n                            fx_list.push(parseFloat(list[i][3][j][1][k][1][1]))\n                            //fx_list.push('*')\n                        }\n                    }\n                    //console.log(\"arrived here, currency is \", currency)\n                    myMap.set(currency, [date_list, revenue_list, fx_list, current_level])\n                    //console.log(\"myMap is \", myMap)\n                }*/\n    //myMap.set(list[i][0],\n  }\n\n  console.log(\"myMap is \", myMap); //localStorage.setItem('map', myMap);\n  //localStorage.setItem('tabs', allList[0]);\n\n  /*\n  const tabs = allList[0]\n  try{\n      if (selected !== 0){\n          const selected_currency = tabs[selected]['id']\n          console.log(\"selected currency is \", selected_currency)\n   \n          const selected_data = myMap.get(selected_currency)\n  \n          console.log(\"selected data is \", selected_data)\n           localStorage.setItem('date', selected_data[0]);\n          localStorage.setItem('price', selected_data[1]);\n          localStorage.setItem('exchange_rate', selected_data[2]);\n          localStorage.setItem('current_level', selected_data[3]);\n          localStorage.setItem('correlation', getPearsonCorrelation(selected_data[1],selected_data[2]));\n           console.log(\"done storing\")\n           console.log(\"localStorage.getItem('date') is\",localStorage.getItem('date'))\n          console.log(\"localStorage.getItem('price') is\",localStorage.getItem('price'))\n          console.log(\"localStorage.getItem('exchange_rate') is\",localStorage.getItem('exchange_rate'))\n          \n      }\n   } catch(err){\n      console.log(\"no id\")\n  }*/\n\n  return myMap;\n};\n\nmodule.exports = change_format2;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/change_format2.js"],"names":["getPearsonCorrelation","require","change_format2","allList","selected","myMap","Map","list","console","log","i","length","currency","detail","current_level","map2","j","date_list","revenue_list","fx_list","product_id","k","push","parseFloat","set","module","exports"],"mappings":";;AAAA;;;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,oBAAD,CAArC;;AAEA,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC1C,MAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ,CAD0C,CAE1C;;AAEA,QAAMC,IAAI,GAAGJ,OAAO,CAAC,CAAD,CAApB,CAJ0C,CAK3C;;AACKK,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC,EANsC,CAOtC;;AACA,OAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC7BF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,CAArB;AACA,UAAME,QAAQ,GAAGL,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAjB;AACA,UAAMG,MAAM,GAAGN,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAf;AACA,UAAMI,aAAa,GAAGP,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAtB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,QAA5B,EAL6B,CAO7B;;AACA,QAAIG,IAAI,GAAG,IAAIT,GAAJ,EAAX;;AACA,SAAK,IAAIU,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,MAAM,CAACF,MAAvB,EAA+BK,CAAC,EAAhC,EAAmC;AAC/BR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBO,CAArB;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,EAAd;AAGA,YAAMC,UAAU,GAAGb,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWM,CAAX,EAAc,CAAd,CAAnB;;AACA,WAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACd,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWM,CAAX,EAAc,CAAd,EAAiBL,MAAjC,EAAyCU,CAAC,EAA1C,EAA6C;AAEzCJ,QAAAA,SAAS,CAACK,IAAV,CAAef,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWM,CAAX,EAAc,CAAd,EAAiBK,CAAjB,EAAoB,CAApB,CAAf,EAFyC,CAGzC;;AACAH,QAAAA,YAAY,CAACI,IAAb,CAAkBC,UAAU,CAAChB,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWM,CAAX,EAAc,CAAd,EAAiBK,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAD,CAA5B,EAJyC,CAKzC;;AACAF,QAAAA,OAAO,CAACG,IAAR,CAAaC,UAAU,CAAChB,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWM,CAAX,EAAc,CAAd,EAAiBK,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAD,CAAvB,EANyC,CAOzC;AACH;;AACDN,MAAAA,IAAI,CAACS,GAAL,CAASJ,UAAT,EAAqB,CAACH,SAAD,EAAYC,YAAZ,EAA0BC,OAA1B,EAAmCL,aAAnC,CAArB;AACH;;AACDT,IAAAA,KAAK,CAACmB,GAAN,CAAUZ,QAAV,EAAoBG,IAApB;AAKZ;;;;;;;;;;;;;;;;;;AAmBY;AACH;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB,EA9DsC,CA+DtC;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AA8BJ,SAAOA,KAAP;AACH,CAjGD;;AAmGAoB,MAAM,CAACC,OAAP,GAAiBxB,cAAjB","sourcesContent":["import store from 'store-js';\n\nconst getPearsonCorrelation = require('./calc_correlation')\n\nconst change_format2 = (allList, selected) => {\n    let myMap = new Map();\n    //console.log(\"all list is \", alllist)\n    \n    const list = allList[1]\n   // try{\n        console.log(\"list in format is \", list)\n        // i is currency iterator\n        for (var i=0; i<list.length; i++){\n            console.log(\"i is \", i)\n            const currency = list[i][0]\n            const detail = list[i][3]\n            const current_level = list[i][2]\n            console.log(\"currency is \", currency)\n\n            // j is products/all iterator\n            let map2 = new Map();\n            for (var j=0; j<detail.length; j++){\n                console.log(\"j is \", j)\n                var date_list = []\n                var revenue_list = []\n                var fx_list = []\n\n\n                const product_id = list[i][3][j][0]\n                for (var k=0; k<list[i][3][j][1].length; k++){\n                        \n                    date_list.push(list[i][3][j][1][k][0])\n                    //date_list.push('*')\n                    revenue_list.push(parseFloat(list[i][3][j][1][k][1][0]))\n                    //revenue_list.push('*')\n                    fx_list.push(parseFloat(list[i][3][j][1][k][1][1]))\n                    //fx_list.push('*')\n                }\n                map2.set(product_id, [date_list, revenue_list, fx_list, current_level])\n            }\n            myMap.set(currency, map2)\n\n\n\n\n/*\n                if(list[i][3][j][0]=='all'){\n\n                    // k is the date iterator\n                    for (var k=0; k<list[i][3][j][1].length; k++){\n                        \n                        date_list.push(list[i][3][j][1][k][0])\n                        //date_list.push('*')\n                        revenue_list.push(parseFloat(list[i][3][j][1][k][1][0]))\n                        //revenue_list.push('*')\n                        fx_list.push(parseFloat(list[i][3][j][1][k][1][1]))\n                        //fx_list.push('*')\n                    }\n                }\n                //console.log(\"arrived here, currency is \", currency)\n                myMap.set(currency, [date_list, revenue_list, fx_list, current_level])\n                //console.log(\"myMap is \", myMap)\n            }*/\n            \n            //myMap.set(list[i][0],\n        }\n        console.log(\"myMap is \", myMap)\n        //localStorage.setItem('map', myMap);\n        //localStorage.setItem('tabs', allList[0]);\n\n        /*\n        const tabs = allList[0]\n        try{\n            if (selected !== 0){\n                const selected_currency = tabs[selected]['id']\n                console.log(\"selected currency is \", selected_currency)\n    \n    \n                const selected_data = myMap.get(selected_currency)\n        \n                console.log(\"selected data is \", selected_data)\n\n                localStorage.setItem('date', selected_data[0]);\n                localStorage.setItem('price', selected_data[1]);\n                localStorage.setItem('exchange_rate', selected_data[2]);\n                localStorage.setItem('current_level', selected_data[3]);\n                localStorage.setItem('correlation', getPearsonCorrelation(selected_data[1],selected_data[2]));\n\n                console.log(\"done storing\")\n\n                console.log(\"localStorage.getItem('date') is\",localStorage.getItem('date'))\n                console.log(\"localStorage.getItem('price') is\",localStorage.getItem('price'))\n                console.log(\"localStorage.getItem('exchange_rate') is\",localStorage.getItem('exchange_rate'))\n                \n            }\n\n        } catch(err){\n            console.log(\"no id\")\n        }*/\n    \n    return myMap\n}\n\nmodule.exports = change_format2; "]},"metadata":{},"sourceType":"script"}