{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\nimport { Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle } from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\";\nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\";\n\nclass AnnotatedLayout extends React.Component {\n  // Initialize the state\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", () => {\n      fetch('/api/getList').then(res => res.json()).then(list => this.setState({\n        list\n      }));\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"handleQuoteSubmit2\", () => {\n      var currency_save = this.state.currency; // handleQuoteSubmit(currency_save)\n      // Retrieves the list of items from the Express app\n\n      console.log(this.state.list);\n    });\n\n    _defineProperty(this, \"handleTradeSubmit2\", () => {\n      var currency_save = this.state.currency;\n      var amount_save = this.state.amount;\n      handleTradeSubmit(currency_save, amount_save);\n    });\n\n    this.state = {\n      list: []\n    };\n  } // Fetch the list on first mount\n\n\n  componentDidMount() {\n    this.getList();\n  } // Retrieves the list of items from the Express app\n\n\n  render() {\n    const {\n      list\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"App\"\n    }, __jsx(\"h1\", null, \"List of Items22\"), list.length ? __jsx(\"div\", null, list.map(item => {\n      return __jsx(\"div\", null, item);\n    })) : __jsx(\"div\", null, __jsx(\"h2\", null, \"No List Items Found\")));\n  }\n\n}\n\nexport default AnnotatedLayout;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/backend/client/pages/index.js"],"names":["Button","Card","Form","FormLayout","Layout","Page","SettingToggle","Stack","TextField","TextStyle","handleQuoteSubmit","handleTradeSubmit","AnnotatedLayout","React","Component","constructor","props","fetch","then","res","json","list","setState","field","value","currency_save","state","currency","console","log","amount_save","amount","componentDidMount","getList","render","length","map","item"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsDC,aAAtD,EAAqEC,KAArE,EAA4EC,SAA5E,EAAuFC,SAAvF,QAAuG,kBAAvG;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;;AAEA,MAAMC,eAAN,SAA8BC,KAAK,CAACC,SAApC,CAA8C;AAC5C;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,qCAcR,MAAM;AACdC,MAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,CAFd;AAGD,KAlBiB;;AAAA,0CAgDFE,KAAD,IAAW;AACxB,aAAQC,KAAD,IAAW,KAAKF,QAAL,CAAc;AAAC,SAACC,KAAD,GAASC;AAAV,OAAd,CAAlB;AACD,KAlDiB;;AAAA,gDAmDG,MAAM;AACzB,UAAIC,aAAa,GAAG,KAAKC,KAAL,CAAWC,QAA/B,CADyB,CAE1B;AAED;;AAEEC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWL,IAAvB;AAED,KA3DiB;;AAAA,gDA4DG,MAAM;AACzB,UAAII,aAAa,GAAG,KAAKC,KAAL,CAAWC,QAA/B;AACA,UAAIG,WAAW,GAAG,KAAKJ,KAAL,CAAWK,MAA7B;AACApB,MAAAA,iBAAiB,CAACc,aAAD,EAAeK,WAAf,CAAjB;AACD,KAhEiB;;AAEhB,SAAKJ,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD,GAP2C,CAU5C;;;AACAW,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACD,GAb2C,CAe5C;;;AAOAC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEb,MAAAA;AAAF,QAAW,KAAKK,KAAtB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACA,oCADA,EAGCL,IAAI,CAACc,MAAL,GACC,mBAEGd,IAAI,CAACe,GAAL,CAAUC,IAAD,IAAU;AAClB,aACE,mBACGA,IADH,CADF;AAKD,KANA,CAFH,CADD,GAYC,mBACE,wCADF,CAfF,CADF;AAuBD;;AAjD2C;;AAsE9C,eAAezB,eAAf","sourcesContent":["/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\n\n\nimport {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  // Initialize the state\n  constructor(props){\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n\n\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.getList();\n  }\n\n  // Retrieves the list of items from the Express app\n  getList = () => {\n    fetch('/api/getList')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n  }\n\n  render() {\n   \n    const { list } = this.state;\n    \n    return (\n      <div className=\"App\">\n      <h1>List of Items22</h1>\n      {/* Check to see if any items are found*/}\n      {list.length ? (\n        <div>\n          {/* Render the list of items */}\n          {list.map((item) => {\n            return(\n              <div>\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <h2>No List Items Found</h2>\n        </div>\n      )\n    }\n    </div>\n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;"]},"metadata":{},"sourceType":"module"}