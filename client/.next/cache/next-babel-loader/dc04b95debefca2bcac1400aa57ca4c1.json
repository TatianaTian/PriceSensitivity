{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\nimport img2 from '../images/earth.svg';\nvar img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg'; //const img2 = require('../images/earth.svg')\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelection\", function (resources) {\n      var idsFromResources = resources.selection.map(function (product) {\n        return product.id;\n      });\n\n      _this.setState({\n        open: false\n      }); //console.log(idsFromResources);\n\n\n      store.set('ids', idsFromResources);\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var emptyState = !store.get('ids');\n      return __jsx(Page, null, __jsx(ResourcePicker, {\n        resourceType: \"Product\",\n        showVariants: false,\n        open: this.state.open,\n        onSelection: function onSelection(resources) {\n          return _this2.handleSelection(resources);\n        },\n        onCancel: function onCancel() {\n          return _this2.setState({\n            open: false\n          });\n        }\n      }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n        heading: \"Find Price Sensitivity \",\n        action: {\n          content: 'Start analyze',\n          onAction: function onAction() {\n            return _this2.setState({\n              open: true\n            });\n          }\n        },\n        image: img2\n      }, __jsx(\"p\", null, \"See how your international sales respond to price changes caused by exchange rates. Pinpoint price-sensitive markets, send coupons accordingly\"))) : //<p>This is resource list with products</p>\n      __jsx(ResourceListWithProducts, null));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/index.js"],"names":["EmptyState","Layout","Page","ResourcePicker","TitleBar","store","ResourceListWithProducts","img2","img","Index","open","resources","idsFromResources","selection","map","product","id","setState","set","emptyState","get","state","handleSelection","content","onAction","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,2BAAzC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAGA,IAAMC,GAAG,GAAG,mEAAZ,C,CACA;;IAEMC,K;;;;;;;;;;;;;;;;4DACI;AAAEC,MAAAA,IAAI,EAAE;AAAR,K;;sEAqCU,UAACC,SAAD,EAAe;AAC/B,UAAMC,gBAAgB,GAAGD,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAwB,UAACC,OAAD;AAAA,eAAaA,OAAO,CAACC,EAArB;AAAA,OAAxB,CAAzB;;AACA,YAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd,EAF+B,CAG/B;;;AACAL,MAAAA,KAAK,CAACa,GAAN,CAAU,KAAV,EAAiBN,gBAAjB;AACD,K;;;;;;;6BAzCQ;AAAA;;AACP,UAAMO,UAAU,GAAG,CAACd,KAAK,CAACe,GAAN,CAAU,KAAV,CAApB;AACA,aACE,MAAC,IAAD,QAEE,MAAC,cAAD;AACE,QAAA,YAAY,EAAC,SADf;AAEE,QAAA,YAAY,EAAE,KAFhB;AAGE,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWX,IAHnB;AAIE,QAAA,WAAW,EAAE,qBAACC,SAAD;AAAA,iBAAe,MAAI,CAACW,eAAL,CAAqBX,SAArB,CAAf;AAAA,SAJf;AAKE,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACM,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAAd,CAAN;AAAA;AALZ,QAFF,EASGS,UAAU,GACP,MAAC,MAAD,QACA,MAAC,UAAD;AACI,QAAA,OAAO,EAAC,yBADZ;AAEI,QAAA,MAAM,EAAE;AACRI,UAAAA,OAAO,EAAE,eADD;AAERC,UAAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACP,QAAL,CAAc;AAAEP,cAAAA,IAAI,EAAE;AAAR,aAAd,CAAN;AAAA;AAFF,SAFZ;AAMI,QAAA,KAAK,EAAEH;AANX,SAQI,kKARJ,CADA,CADO,GAkBP;AACA,YAAC,wBAAD,OA5BN,CADF;AAiCD;;;;EArCiBkB,KAAK,CAACC,S;;AA8C1B,eAAejB,KAAf","sourcesContent":["/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\n\n\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\nimport img2 from '../images/earth.svg';\n\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n//const img2 = require('../images/earth.svg')\n\nclass Index extends React.Component {\n  state = { open: false };\n  render() {\n    const emptyState = !store.get('ids');\n    return (\n      <Page>\n        \n        <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n        {emptyState ? (\n            <Layout>\n            <EmptyState\n                heading=\"Find Price Sensitivity \"\n                action={{\n                content: 'Start analyze',\n                onAction: () => this.setState({ open: true }),\n                }}\n                image={img2}\n            >\n                <p>See how your international sales respond to price changes caused by exchange rates. Pinpoint price-sensitive\n                markets, send coupons accordingly \n                </p>\n            \n            </EmptyState>\n            </Layout>\n            \n        ) : (\n            //<p>This is resource list with products</p>\n            <ResourceListWithProducts />\n        )}\n      </Page >\n    );\n  }\n  handleSelection = (resources) => {\n    const idsFromResources = resources.selection.map((product) => product.id);\n    this.setState({ open: false });\n    //console.log(idsFromResources);\n    store.set('ids', idsFromResources);\n  };\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}