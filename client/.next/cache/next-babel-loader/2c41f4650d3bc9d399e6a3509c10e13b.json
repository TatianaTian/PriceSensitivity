{"ast":null,"code":"var linear_regression = require('./linear_regression');\n\nvar price_elasticity = require('./price_elasticity');\n\nvar price_sensitive_market = function price_sensitive_market(tabs, maps) {\n  //let myMap = new Map();\n  //try{\n  var elasticity_list = [];\n  console.log(\"tabs.length is \", tabs);\n\n  var _loop = function _loop() {\n    var selected_currency = tabs[i]['id'];\n    console.log(\"selected_currency is \", selected_currency);\n    var selected_data_all_products = maps.get(selected_currency);\n    var selected_data = selected_data_all_products.get('all');\n    var product_price = 100;\n    product_price_list = selected_data[2].map(function (element) {\n      return Math.round(element * product_price * 100) / 100;\n    });\n    var slope = linear_regression(selected_data[1], product_price_list)[3];\n    console.log(\"slope is \", slope);\n    var elasticity = price_elasticity(selected_data[1], product_price_list, Math.abs(slope));\n    console.log(\"elasticity is \", elasticity);\n\n    if (myMap.has(elasticity)) {\n      value = myMap.get(elasticity);\n      value.push(selected_currency);\n      myMap.set(elasticity, value);\n    } else {\n      myMap.set(elasticity, [selected_currency]);\n    }\n\n    elasticity_list.push(elasticity);\n  };\n\n  for (var i = 1; i < tabs.length; i++) {\n    var product_price_list;\n    var value;\n\n    _loop();\n  }\n\n  elasticity_list.sort(function (a, b) {\n    return b - a;\n  });\n  console.log(\"elasticity_list is \", elasticity_list);\n  var currency_rank = [];\n\n  for (var j = 1; j < tabs.length; j++) {\n    var currency = elasticity_list[j];\n\n    if (!currency_rank.includes(currency[0])) {\n      currency_rank.push(currency);\n    }\n  }\n\n  console.log(\"currency_rank is \", currency_rank); //localStorage.setItem('currency_elasticity_rank', currency_rank);\n\n  return currency_rank; //} catch (error){\n  // console.log(\"error in price sensitive market\")\n  //}\n};\n\nmodule.exports = price_sensitive_market;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/price_sensitive_market.js"],"names":["linear_regression","require","price_elasticity","price_sensitive_market","tabs","maps","elasticity_list","console","log","selected_currency","i","selected_data_all_products","get","selected_data","product_price","product_price_list","map","element","Math","round","slope","elasticity","abs","myMap","has","value","push","set","length","sort","a","b","currency_rank","j","currency","includes","module","exports"],"mappings":"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","sourcesContent":["const linear_regression = require('./linear_regression')\nconst price_elasticity = require('./price_elasticity')\n\nconst price_sensitive_market = (tabs, maps) => {\n    //let myMap = new Map();\n    //try{\n    var elasticity_list = []\n    console.log(\"tabs.length is \", tabs)\n\n\n    for (var i=1;i<tabs.length;i++){\n        const selected_currency = tabs[i]['id']\n        console.log(\"selected_currency is \", selected_currency)\n\n        const selected_data_all_products = maps.get(selected_currency)\n        const selected_data = selected_data_all_products.get('all')\n        const product_price = 100\n        var product_price_list = selected_data[2].map(function(element) {\n            return Math.round(element*product_price*100)/100;\n        });\n\n        const slope = linear_regression(selected_data[1],product_price_list)[3]\n\n        console.log(\"slope is \", slope)\n\n        const elasticity = price_elasticity(selected_data[1], product_price_list, Math.abs(slope))\n\n        console.log(\"elasticity is \", elasticity)\n        \n        if (myMap.has(elasticity)){\n            var value = myMap.get(elasticity)\n            value.push(selected_currency)\n            myMap.set(elasticity, value)\n        }else{\n            myMap.set(elasticity, [selected_currency])\n        }\n        elasticity_list.push(elasticity)\n    }\n\n    elasticity_list.sort(function(a, b){return b-a});\n\n    console.log(\"elasticity_list is \", elasticity_list)\n\n    var currency_rank = []\n\n    for (var j=1;j<tabs.length;j++){\n        var currency = elasticity_list[j]\n        if (!currency_rank.includes(currency[0])){\n            currency_rank.push(currency)\n        }\n    }\n\n    console.log(\"currency_rank is \", currency_rank)\n\n    //localStorage.setItem('currency_elasticity_rank', currency_rank);\n    return currency_rank\n //} catch (error){\n   // console.log(\"error in price sensitive market\")\n    //}\n}\n\nmodule.exports = price_sensitive_market; "]},"metadata":{},"sourceType":"script"}