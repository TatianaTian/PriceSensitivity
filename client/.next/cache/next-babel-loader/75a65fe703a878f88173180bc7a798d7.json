{"ast":null,"code":"const mongoose = require('mongoose');\n\nmongoose.Promise = global.Promise;\nconst url = 'mongodb+srv://tatiana:wmyzyqyouANDme824@cluster0-cigjb.mongodb.net/test?retryWrites=true&w=majority';\nmongoose.connect(url, {\n  useNewUrlParser: true\n});\nvar db = mongoose.connection; //mongoose.connection.once('open', () => console.log(`Connected to mongo at ${url}`));\n\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  console.log(\"Connection Successful!\"); // define Schema\n\n  var BookSchema = mongoose.Schema({\n    name: String,\n    price: Number,\n    quantity: Number\n  }); // compile schema to model\n\n  var Book = mongoose.model('Book', BookSchema, 'bookstore'); // a document instance\n\n  var book1 = new Book({\n    name: 'Introduction to Mongoose',\n    price: 10,\n    quantity: 25\n  }); // save model to database\n\n  book1.save(function (err, book) {\n    if (err) return console.error(err);\n    console.log(book.name + \" saved to bookstore collection.\");\n  });\n});","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_app/trade/trades/mongotest2.js"],"names":["mongoose","require","Promise","global","url","connect","useNewUrlParser","db","connection","on","console","error","bind","once","log","BookSchema","Schema","name","String","price","Number","quantity","Book","model","book1","save","err","book"],"mappings":"AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAD,QAAQ,CAACE,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AAEA,MAAME,GAAG,GAAG,qGAAZ;AAGAJ,QAAQ,CAACK,OAAT,CAAiBD,GAAjB,EAAsB;AAAEE,EAAAA,eAAe,EAAE;AAAnB,CAAtB;AACA,IAAIC,EAAE,GAAGP,QAAQ,CAACQ,UAAlB,C,CACA;;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AAEAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAW;AACvBH,EAAAA,OAAO,CAACI,GAAR,CAAY,wBAAZ,EADuB,CAGvB;;AACA,MAAIC,UAAU,GAAGf,QAAQ,CAACgB,MAAT,CAAgB;AAC/BC,IAAAA,IAAI,EAAEC,MADyB;AAE/BC,IAAAA,KAAK,EAAEC,MAFwB;AAG/BC,IAAAA,QAAQ,EAAED;AAHqB,GAAhB,CAAjB,CAJuB,CAUvB;;AACA,MAAIE,IAAI,GAAGtB,QAAQ,CAACuB,KAAT,CAAe,MAAf,EAAuBR,UAAvB,EAAmC,WAAnC,CAAX,CAXuB,CAavB;;AACA,MAAIS,KAAK,GAAG,IAAIF,IAAJ,CAAS;AAAEL,IAAAA,IAAI,EAAE,0BAAR;AAAoCE,IAAAA,KAAK,EAAE,EAA3C;AAA+CE,IAAAA,QAAQ,EAAE;AAAzD,GAAT,CAAZ,CAduB,CAgBvB;;AACAG,EAAAA,KAAK,CAACC,IAAN,CAAW,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC9B,QAAID,GAAJ,EAAS,OAAOhB,OAAO,CAACC,KAAR,CAAce,GAAd,CAAP;AACThB,IAAAA,OAAO,CAACI,GAAR,CAAYa,IAAI,CAACV,IAAL,GAAY,iCAAxB;AACD,GAHD;AAKH,CAtBD","sourcesContent":["\nconst mongoose = require('mongoose');\nmongoose.Promise = global.Promise;\n\nconst url = 'mongodb+srv://tatiana:wmyzyqyouANDme824@cluster0-cigjb.mongodb.net/test?retryWrites=true&w=majority';\n\n\nmongoose.connect(url, { useNewUrlParser: true });\nvar db = mongoose.connection;\n//mongoose.connection.once('open', () => console.log(`Connected to mongo at ${url}`));\ndb.on('error', console.error.bind(console, 'connection error:'));\n\ndb.once('open', function() {\n    console.log(\"Connection Successful!\");\n    \n    // define Schema\n    var BookSchema = mongoose.Schema({\n      name: String,\n      price: Number,\n      quantity: Number\n    });\n \n    // compile schema to model\n    var Book = mongoose.model('Book', BookSchema, 'bookstore');\n \n    // a document instance\n    var book1 = new Book({ name: 'Introduction to Mongoose', price: 10, quantity: 25 });\n \n    // save model to database\n    book1.save(function (err, book) {\n      if (err) return console.error(err);\n      console.log(book.name + \" saved to bookstore collection.\");\n    });\n    \n});\n\n"]},"metadata":{},"sourceType":"script"}