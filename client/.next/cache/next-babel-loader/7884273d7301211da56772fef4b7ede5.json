{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Tabs } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\nimport Main_data from \"../components/Main_data\";\n\nvar change_format2 = require('../functions/change_format2');\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts(props) {\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function () {\n      fetch('http://localhost:5000/api/tabs').then(function (res) {\n        return res.json();\n      }).then(function (list2) {\n        return _this.setState({\n          list2: list2\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCountryData\", function () {\n      fetch('http://localhost:5000/api/country_data').then(function (res) {\n        return res.json();\n      }).then(function (country_data) {\n        return _this.setState({\n          country_data: country_data\n        });\n      });\n      console.log(\"3\");\n    });\n\n    _this.state = {\n      list: [[], [], []],\n      selected: 0,\n      list2: [[], []]\n    };\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList(); //this.getCountryData();\n\n      console.log(\"here\"); //console.log(\"list is \", this.state.list)\n      //change_format2(this.state.list)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          list = _this$state.list,\n          selected = _this$state.selected,\n          list2 = _this$state.list2;\n      change_format2(list);\n      /*\n      if (list2===null){\n        console.log(\"loading...\")\n      }{\n        console.log(\"list2 is \")\n      }*/\n\n      var tab = list2[0];\n\n      try {\n        console.log(\"list2 is \", list2[1][2][3][0]);\n        change_format2(list2, selected);\n        /*\n        const currency = tab[select]\n        const [date, revenue, fx] = myMap.get(currency)\n           console.log(\"date is \", date)\n        console.log(\"price is \", revenue)\n        console.log(\"exchange_rate is \", fx)\n          store.set('date', date)\n        store.set('price', revenue)\n        store.set('exchange_rate', fx)*/\n      } catch (err) {\n        console.log(\"loading...\");\n      } //console.log(\"lis1 is \", list[0])\n      //console.log(\"list is \", list[1])\n      //console.log(\"selected is \", selected)\n\n\n      var i = 0;\n\n      if (selected > 0) {\n        i = selected - 1;\n      }\n      /*\n      const date = list[1][i][0]\n      const price = list[1][i][1]\n      const exchange_rate = list[1][i][2]\n      store.set('date', date)\n      store.set('price', price)\n      store.set('exchange_rate', exchange_rate)\n       const level = list[2]\n      store.set('level', level)\n      //console.log('level is ', level)\n      */\n      // var tab = list[0]\n\n\n      return __jsx(Tabs, {\n        tabs: tab,\n        selected: selected,\n        onSelect: function onSelect(selected) {\n          return _this2.setState({\n            selected: selected\n          });\n        },\n        fitted: true\n      }, selected === 0 ? __jsx(Main_data, null) : __jsx(Country_data, null));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/detect_transactions.js"],"names":["gql","Query","Tabs","store","Redirect","Context","Country_data","Main_data","change_format2","require","ResourceListWithProducts","props","fetch","then","res","json","list2","setState","country_data","console","log","state","list","selected","getList","tab","err","i","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {Tabs} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\nimport Main_data from \"../components/Main_data\";\n\nconst change_format2 = require('../functions/change_format2')\n\n\n\nclass ResourceListWithProducts extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      list : [[],[],[]],\n      selected: 0,  \n      list2:[[],[]]\n    }\n  }\n  static contextType = Context;\n\n  componentDidMount() {\n    this.getList();\n    //this.getCountryData();\n    console.log(\"here\")\n    //console.log(\"list is \", this.state.list)\n    //change_format2(this.state.list)\n  }\n\n  getList = () => {\n    fetch('http://localhost:5000/api/tabs')\n    .then(res => res.json())\n    .then(list2 => this.setState({ list2 }))\n  }\n\n  \n  getCountryData = () => {\n    fetch('http://localhost:5000/api/country_data')\n    .then(res => res.json())\n    .then(country_data => this.setState({ country_data }))\n    console.log(\"3\")\n  }\n\n  \n  render() {\n    const {list, selected, list2} = this.state;\n\n    change_format2(list)\n    /*\n    if (list2===null){\n      console.log(\"loading...\")\n    }{\n      console.log(\"list2 is \")\n    }*/\n    const tab =  list2[0]\n\n    try {\n      \n      console.log(\"list2 is \", list2[1][2][3][0])\n      change_format2(list2, selected)\n      /*\n      const currency = tab[select]\n      const [date, revenue, fx] = myMap.get(currency)\n \n\n      console.log(\"date is \", date)\n      console.log(\"price is \", revenue)\n      console.log(\"exchange_rate is \", fx)\n\n\n      store.set('date', date)\n      store.set('price', revenue)\n      store.set('exchange_rate', fx)*/\n    }\n    catch(err) {\n      console.log(\"loading...\")\n    }\n\n\n    \n\n    //console.log(\"lis1 is \", list[0])\n\n    //console.log(\"list is \", list[1])\n    //console.log(\"selected is \", selected)\n\n    var i = 0\n    if (selected > 0){\n      i = selected - 1\n    }\n\n\n    /*\n    const date = list[1][i][0]\n    const price = list[1][i][1]\n    const exchange_rate = list[1][i][2]\n    store.set('date', date)\n    store.set('price', price)\n    store.set('exchange_rate', exchange_rate)\n\n    const level = list[2]\n    store.set('level', level)\n    //console.log('level is ', level)\n*/\n   // var tab = list[0]\n  \n  \n    \n  \n\n    \n    return (\n\n      <Tabs tabs={tab} selected={selected} onSelect={(selected) => this.setState({selected})} fitted={true} >\n        {selected===0? (\n          \n          <Main_data/>\n      ):(\n          <Country_data/>\n      )}\n\n      </Tabs>\n    );\n  }\n\n\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}