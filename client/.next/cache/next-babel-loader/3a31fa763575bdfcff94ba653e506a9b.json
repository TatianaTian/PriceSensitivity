{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\nimport { Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle } from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\";\nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\";\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nvar AnnotatedLayout = /*#__PURE__*/function (_React$Component) {\n  _inherits(AnnotatedLayout, _React$Component);\n\n  var _super = _createSuper(AnnotatedLayout);\n\n  // Initialize the state\n  function AnnotatedLayout(props) {\n    var _this;\n\n    _classCallCheck(this, AnnotatedLayout);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function () {\n      fetch('/api/getList').then(function (res) {\n        return res.json();\n      }).then(function (list) {\n        return _this.setState({\n          list: list\n        });\n      });\n    });\n\n    _this.state = {\n      list: []\n    };\n    return _this;\n  } // Fetch the list on first mount\n\n\n  _createClass(AnnotatedLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    } // Retrieves the list of items from the Express app\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var list = this.state.list;\n      return __jsx(BrowserRouter, null, __jsx(\"div\", {\n        className: \"App\"\n      }, __jsx(\"h1\", null, \"List of Items22\"), list.length ? __jsx(\"div\", null, list.map(function (item) {\n        return __jsx(\"div\", null, item);\n      })) : __jsx(\"div\", null, __jsx(\"h2\", null, \"No List Items Found\"))));\n    }\n  }]);\n\n  return AnnotatedLayout;\n}(React.Component);\n\nexport default AnnotatedLayout;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/backend/client/pages/index.js"],"names":["Button","Card","Form","FormLayout","Layout","Page","SettingToggle","Stack","TextField","TextStyle","handleQuoteSubmit","handleTradeSubmit","BrowserRouter","Route","AnnotatedLayout","props","fetch","then","res","json","list","setState","state","getList","length","map","item","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsDC,aAAtD,EAAqEC,KAArE,EAA4EC,SAA5E,EAAuFC,SAAvF,QAAuG,kBAAvG;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;;IAEMC,e;;;;;AACJ;AACA,2BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,8DAaR,YAAM;AACdC,MAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,eAAI,MAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAJA;AAAF,SAAd,CAAJ;AAAA,OAFV;AAGD,KAjBiB;;AAEhB,UAAKE,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE;AADK,KAAb;AAFgB;AAKjB,G,CAED;;;;;wCACoB;AAClB,WAAKG,OAAL;AACD,K,CAED;;;;6BAOS;AAAA,UAECH,IAFD,GAEU,KAAKE,KAFf,CAECF,IAFD;AAIP,aACE,MAAC,aAAD,QACA;AAAK,QAAA,SAAS,EAAC;AAAf,SACA,oCADA,EAGCA,IAAI,CAACI,MAAL,GACC,mBAEGJ,IAAI,CAACK,GAAL,CAAS,UAACC,IAAD,EAAU;AAClB,eACE,mBACGA,IADH,CADF;AAKD,OANA,CAFH,CADD,GAYC,mBACE,wCADF,CAfF,CADA,CADF;AAyBD;;;;EAlD2BC,KAAK,CAACC,S;;AAuDpC,eAAed,eAAf","sourcesContent":["/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\n\n\nimport {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"   \nimport { BrowserRouter, Route } from 'react-router-dom'; \n\nclass AnnotatedLayout extends React.Component {\n  // Initialize the state\n  constructor(props){\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.getList();\n  }\n\n  // Retrieves the list of items from the Express app\n  getList = () => {\n    fetch('/api/getList')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n  }\n\n  render() {\n   \n    const { list } = this.state;\n    \n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n      <h1>List of Items22</h1>\n      {/* Check to see if any items are found*/}\n      {list.length ? (\n        <div>\n          {/* Render the list of items */}\n          {list.map((item) => {\n            return(\n              <div>\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <h2>No List Items Found</h2>\n        </div>\n      )\n    }\n    </div>\n    </BrowserRouter>\n    )\n  }\n\n  \n}\n\nexport default AnnotatedLayout;"]},"metadata":{},"sourceType":"module"}