{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail, Tabs } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts(props) {\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function () {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/tabs').then(function (res) {\n        return res.json();\n      }).then(function (list) {\n        return _this.setState({\n          list: list\n        });\n      });\n      console.log(\"3\");\n    });\n\n    _this.handleOnSelect = _this.handleOnSelect.bind(_assertThisInitialized(_this));\n    _this.state = {\n      list: [],\n      selected: 0\n    };\n    console.log(\"1\");\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n      console.log(\"2\");\n    }\n  }, {\n    key: \"render\",\n\n    /*\n    getCountryData = (country_code) => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/tabs')\n      .then(res => res.json())\n      .then(list => this.setState({ list }))\n      console.log(\"3\")\n    }*/\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          list = _this$state.list,\n          selected = _this$state.selected;\n      console.log(\"List is \", list);\n      var app = this.context;\n      var tabs = list; //console.log('ids are ',store.get('ids') )\n\n      return __jsx(Tabs, {\n        tabs: tabs,\n        selected: selected,\n        onSelect: function onSelect(selected) {\n          return _this2.setState({\n            selected: selected\n          });\n        },\n        fitted: true\n      }, __jsx(\"p\", null, \"in tab \", selected), __jsx(Country_data, null));\n    }\n  }, {\n    key: \"handleOnSelect\",\n    value: function handleOnSelect(selected) {\n      this.setState({\n        selected: selected\n      });\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/detect_transactions.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","Tabs","store","Redirect","Context","Country_data","ResourceListWithProducts","props","fetch","then","res","json","list","setState","console","log","handleOnSelect","bind","state","selected","getList","app","context","tabs","React","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,IANF,QAOO,kBAPP;AAQA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;IAGMC,wB;;;;;AAEJ,oCAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,8DAgBR,YAAM;AACd;AACA;AACAC,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,eAAI,MAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAJA;AAAF,SAAd,CAAJ;AAAA,OAFV;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KAvBiB;;AAEhB,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AACA,UAAKC,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE,EADK;AAEXO,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAPgB;AAQjB;;;;wCAGmB;AAClB,WAAKK,OAAL;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;;;AAWD;;;;;;;;;6BAWS;AAAA;;AAAA,wBACoB,KAAKG,KADzB;AAAA,UACCN,IADD,eACCA,IADD;AAAA,UACOO,QADP,eACOA,QADP;AAEPL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,IAAxB;AACA,UAAMS,GAAG,GAAG,KAAKC,OAAjB;AACA,UAAMC,IAAI,GAAGX,IAAb,CAJO,CAKP;;AACA,aACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEW,IAAZ;AAAkB,QAAA,QAAQ,EAAEJ,QAA5B;AAAsC,QAAA,QAAQ,EAAE,kBAACA,QAAD;AAAA,iBAAc,MAAI,CAACN,QAAL,CAAc;AAACM,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAd;AAAA,SAAhD;AAAyF,QAAA,MAAM,EAAE;AAAjG,SAEA,4BAAWA,QAAX,CAFA,EAGA,MAAC,YAAD,OAHA,CADF;AAQD;;;mCACcA,Q,EAAU;AACvB,WAAKN,QAAL,CAAc;AAACM,QAAAA,QAAQ,EAARA;AAAD,OAAd;AACD;;;;EAvDoCK,KAAK,CAACC,S;;gBAAvCnB,wB,iBAWiBF,O;;AAgDtB,eAAeE,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail, \n  Tabs\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\n\n\nclass ResourceListWithProducts extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.state = {\n      list: [],\n      selected: 0 \n    }\n    console.log(\"1\")\n  }\n  static contextType = Context;\n\n  componentDidMount() {\n    this.getList();\n    console.log(\"2\")\n  }\n\n  getList = () => {\n    //fetch('/api/getList')\n    //fetch('https://ebb450c1.ngrok.io')\n    fetch('http://localhost:5000/api/tabs')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n    console.log(\"3\")\n  }\n\n  /*\n  getCountryData = (country_code) => {\n    //fetch('/api/getList')\n    //fetch('https://ebb450c1.ngrok.io')\n    fetch('http://localhost:5000/api/tabs')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n    console.log(\"3\")\n  }*/\n\n  \n  render() {\n    const { list, selected } = this.state;\n    console.log(\"List is \", list)\n    const app = this.context;\n    const tabs = list\n    //console.log('ids are ',store.get('ids') )\n    return (\n      <Tabs tabs={tabs} selected={selected} onSelect={(selected) => this.setState({selected})} fitted={true}>\n\n      <p>in tab {selected}</p>\n      <Country_data/>\n\n      </Tabs>\n    );\n  }\n  handleOnSelect(selected) {\n    this.setState({selected});\n  }\n\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}