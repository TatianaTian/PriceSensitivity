{"ast":null,"code":"const linear_regression = require('./linear_regression');\n\nconst price_elasticity = require('./price_elasticity');\n\nconst price_sensitive_market = (tabs, maps) => {\n  //let myMap = new Map();\n  //try{\n  var elasticity_list = [];\n  console.log(\"tabs.length is \", tabs);\n\n  for (var i = 1; i < 3; i++) {\n    const selected_currency = tabs[i]['id'];\n    console.log(\"selected_currency is \", selected_currency);\n    const selected_data_all_products = maps.get(selected_currency);\n    const selected_data = selected_data_all_products.get('all');\n    var product_price_list = selected_data[2].map(function (element) {\n      return Math.round(element * product_price * 100) / 100;\n    });\n    const slope = linear_regression(selected_data[1], product_price_list)[3];\n    console.log(\"slope is \", slope);\n    const elasticity = price_elasticity(selected_data[1], product_price_list, Math.abs(slope));\n    console.log(\"elasticity is \", elasticity);\n\n    if (myMap.has(elasticity)) {\n      var value = myMap.get(elasticity);\n      value.push(selected_currency);\n      myMap.set(elasticity, value);\n    } else {\n      myMap.set(elasticity, [selected_currency]);\n    }\n\n    elasticity_list.push(elasticity);\n  }\n\n  elasticity_list.sort(function (a, b) {\n    return b - a;\n  });\n  console.log(\"elasticity_list is \", elasticity_list);\n  var currency_rank = [];\n\n  for (var j = 1; j < tabs.length; j++) {\n    var currency = elasticity_list[j];\n\n    if (!currency_rank.includes(currency[0])) {\n      currency_rank.push(currency);\n    }\n  }\n\n  console.log(\"currency_rank is \", currency_rank); //localStorage.setItem('currency_elasticity_rank', currency_rank);\n\n  return currency_rank; //} catch (error){\n  // console.log(\"error in price sensitive market\")\n  //}\n};\n\nmodule.exports = price_sensitive_market;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/price_sensitive_market.js"],"names":["linear_regression","require","price_elasticity","price_sensitive_market","tabs","maps","elasticity_list","console","log","i","selected_currency","selected_data_all_products","get","selected_data","product_price_list","map","element","Math","round","product_price","slope","elasticity","abs","myMap","has","value","push","set","sort","a","b","currency_rank","j","length","currency","includes","module","exports"],"mappings":"AAAA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;;AAEA,MAAME,sBAAsB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC3C;AACA;AACA,MAAIC,eAAe,GAAG,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,IAA/B;;AAGA,OAAK,IAAIK,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;AACjB,UAAMC,iBAAiB,GAAGN,IAAI,CAACK,CAAD,CAAJ,CAAQ,IAAR,CAA1B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCE,iBAArC;AAEA,UAAMC,0BAA0B,GAAGN,IAAI,CAACO,GAAL,CAASF,iBAAT,CAAnC;AACA,UAAMG,aAAa,GAAGF,0BAA0B,CAACC,GAA3B,CAA+B,KAA/B,CAAtB;AACA,QAAIE,kBAAkB,GAAGD,aAAa,CAAC,CAAD,CAAb,CAAiBE,GAAjB,CAAqB,UAASC,OAAT,EAAkB;AAC5D,aAAOC,IAAI,CAACC,KAAL,CAAWF,OAAO,GAACG,aAAR,GAAsB,GAAjC,IAAsC,GAA7C;AACH,KAFwB,CAAzB;AAIA,UAAMC,KAAK,GAAGpB,iBAAiB,CAACa,aAAa,CAAC,CAAD,CAAd,EAAkBC,kBAAlB,CAAjB,CAAuD,CAAvD,CAAd;AAEAP,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBY,KAAzB;AAEA,UAAMC,UAAU,GAAGnB,gBAAgB,CAACW,aAAa,CAAC,CAAD,CAAd,EAAmBC,kBAAnB,EAAuCG,IAAI,CAACK,GAAL,CAASF,KAAT,CAAvC,CAAnC;AAEAb,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Ba,UAA9B;;AAEA,QAAIE,KAAK,CAACC,GAAN,CAAUH,UAAV,CAAJ,EAA0B;AACtB,UAAII,KAAK,GAAGF,KAAK,CAACX,GAAN,CAAUS,UAAV,CAAZ;AACAI,MAAAA,KAAK,CAACC,IAAN,CAAWhB,iBAAX;AACAa,MAAAA,KAAK,CAACI,GAAN,CAAUN,UAAV,EAAsBI,KAAtB;AACH,KAJD,MAIK;AACDF,MAAAA,KAAK,CAACI,GAAN,CAAUN,UAAV,EAAsB,CAACX,iBAAD,CAAtB;AACH;;AACDJ,IAAAA,eAAe,CAACoB,IAAhB,CAAqBL,UAArB;AACH;;AAEDf,EAAAA,eAAe,CAACsB,IAAhB,CAAqB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAAC,WAAOA,CAAC,GAACD,CAAT;AAAW,GAA/C;AAEAtB,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,eAAnC;AAEA,MAAIyB,aAAa,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC5B,IAAI,CAAC6B,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3B,QAAIE,QAAQ,GAAG5B,eAAe,CAAC0B,CAAD,CAA9B;;AACA,QAAI,CAACD,aAAa,CAACI,QAAd,CAAuBD,QAAQ,CAAC,CAAD,CAA/B,CAAL,EAAyC;AACrCH,MAAAA,aAAa,CAACL,IAAd,CAAmBQ,QAAnB;AACH;AACJ;;AAED3B,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCuB,aAAjC,EAhD2C,CAkD3C;;AACA,SAAOA,aAAP,CAnD2C,CAoD9C;AACE;AACC;AACH,CAvDD;;AAyDAK,MAAM,CAACC,OAAP,GAAiBlC,sBAAjB","sourcesContent":["const linear_regression = require('./linear_regression')\nconst price_elasticity = require('./price_elasticity')\n\nconst price_sensitive_market = (tabs, maps) => {\n    //let myMap = new Map();\n    //try{\n    var elasticity_list = []\n    console.log(\"tabs.length is \", tabs)\n\n\n    for (var i=1;i<3;i++){\n        const selected_currency = tabs[i]['id']\n        console.log(\"selected_currency is \", selected_currency)\n\n        const selected_data_all_products = maps.get(selected_currency)\n        const selected_data = selected_data_all_products.get('all')\n        var product_price_list = selected_data[2].map(function(element) {\n            return Math.round(element*product_price*100)/100;\n        });\n\n        const slope = linear_regression(selected_data[1],product_price_list)[3]\n\n        console.log(\"slope is \", slope)\n\n        const elasticity = price_elasticity(selected_data[1], product_price_list, Math.abs(slope))\n\n        console.log(\"elasticity is \", elasticity)\n        \n        if (myMap.has(elasticity)){\n            var value = myMap.get(elasticity)\n            value.push(selected_currency)\n            myMap.set(elasticity, value)\n        }else{\n            myMap.set(elasticity, [selected_currency])\n        }\n        elasticity_list.push(elasticity)\n    }\n\n    elasticity_list.sort(function(a, b){return b-a});\n\n    console.log(\"elasticity_list is \", elasticity_list)\n\n    var currency_rank = []\n\n    for (var j=1;j<tabs.length;j++){\n        var currency = elasticity_list[j]\n        if (!currency_rank.includes(currency[0])){\n            currency_rank.push(currency)\n        }\n    }\n\n    console.log(\"currency_rank is \", currency_rank)\n\n    //localStorage.setItem('currency_elasticity_rank', currency_rank);\n    return currency_rank\n //} catch (error){\n   // console.log(\"error in price sensitive market\")\n    //}\n}\n\nmodule.exports = price_sensitive_market; "]},"metadata":{},"sourceType":"script"}