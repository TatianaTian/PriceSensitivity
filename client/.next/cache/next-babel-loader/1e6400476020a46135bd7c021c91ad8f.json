{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nvar change_format2 = function change_format2(allList, selected) {\n  var myMap = new Map(); //console.log(\"all list is \", alllist)\n\n  var list = allList[1];\n\n  try {\n    console.log(\"list in format is \", list);\n\n    for (i = 0; i < list.length; i++) {\n      console.log(\"i is \", i);\n      var currency = list[i][0];\n      var detail = list[i][3];\n      console.log(\"currency is \", currency);\n\n      for (j = 0; j < detail.length; j++) {\n        var date_list = [];\n        var revenue_list = [];\n        var fx_list = [];\n\n        if (list[i][3][j][0] == 'all') {\n          //console.log('llist[i][3][j] is ', list[i][3][j])\n          for (k = 0; k < list[i][3][j][1].length; k++) {\n            date_list.push(list[i][3][j][1][k][0]);\n            revenue_list.push(list[i][3][j][1][k][1][0]);\n            fx_list.push(list[i][3][j][1][k][1][1]);\n          }\n        } //console.log(\"arrived here, currency is \", currency)\n\n\n        myMap.set(currency, [date_list, revenue_list, fx_list]);\n      } //myMap.set(list[i][0],\n\n    }\n\n    console.log(\"myMap is \", myMap);\n    var tabs = allList[0];\n    var selected_currency = tabs[selected];\n    var selected_data = myMap.get(selected_currency);\n    console.log(\"date is \", selected_data[0]);\n    console.log(\"price is \", selected_data[1]);\n    console.log(\"exchange_rate is \", selected_data[2]);\n\n    _storeJs[\"default\"].set('date', selected_data[0]);\n\n    _storeJs[\"default\"].set('price', selected_data[1]);\n\n    _storeJs[\"default\"].set('exchange_rate', selected_data[2]);\n  } catch (err) {\n    console.log(\"error\");\n  }\n\n  return null;\n};\n\nmodule.exports = change_format2;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/change_format2.js"],"names":["change_format2","allList","selected","myMap","Map","list","console","log","i","length","currency","detail","j","date_list","revenue_list","fx_list","k","push","set","tabs","selected_currency","selected_data","get","store","err","module","exports"],"mappings":"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","sourcesContent":["import store from 'store-js';\n\nconst change_format2 = (allList, selected) => {\n    let myMap = new Map();\n    //console.log(\"all list is \", alllist)\n    \n    const list = allList[1]\n    try{\n        console.log(\"list in format is \", list)\n        for (i=0; i<list.length; i++){\n            console.log(\"i is \", i)\n            const currency = list[i][0]\n            const detail = list[i][3]\n            console.log(\"currency is \", currency)\n\n            for (j=0; j<detail.length; j++){\n                var date_list = []\n                var revenue_list = []\n                var fx_list = []\n                if(list[i][3][j][0]=='all'){\n                    //console.log('llist[i][3][j] is ', list[i][3][j])\n                    for (k=0; k<list[i][3][j][1].length; k++){\n                        \n                        date_list.push(list[i][3][j][1][k][0])\n                        revenue_list.push(list[i][3][j][1][k][1][0])\n                        fx_list.push(list[i][3][j][1][k][1][1])\n                    }\n                }\n                //console.log(\"arrived here, currency is \", currency)\n                myMap.set(currency, [date_list, revenue_list, fx_list])\n            }\n            \n            //myMap.set(list[i][0],\n        }\n        console.log(\"myMap is \", myMap)\n        const tabs = allList[0]\n        const selected_currency = tabs[selected]\n        const selected_data = myMap.get(selected_currency)\n\n        console.log(\"date is \", selected_data[0])\n        console.log(\"price is \", selected_data[1])\n        console.log(\"exchange_rate is \", selected_data[2])\n\n        store.set('date', selected_data[0])\n        store.set('price', selected_data[1])\n        store.set('exchange_rate', selected_data[2])\n}\ncatch(err) {\n    console.log(\"error\")\n}\n    \n    return null\n}\n\nmodule.exports = change_format2; "]},"metadata":{},"sourceType":"script"}