{"ast":null,"code":"var jsregression = require('js-regression');\n\nvar regression = function regression(sales, exchange_rate) {\n  var data = reformat_data(sales, exchange_rate);\n  var regression = new jsregression.LinearRegression();\n  var model = regression.fit(data); // === Print the trained model === //\n\n  console.log(data);\n  console.log(model);\n  console.log(regression.transform([3]));\n  return [regression_fx, regression_sales, regression_predicted_sales];\n};\n\nfunction reformat_data(sales, exchange_rate) {\n  var data = [];\n\n  for (i = 0; i < exchange_rate.length(); i++) {\n    data.push([exchange_rate[i], sales[i]]);\n  }\n}","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/linear_regression.js"],"names":["jsregression","require","regression","sales","exchange_rate","data","reformat_data","LinearRegression","model","fit","console","log","transform","regression_fx","regression_sales","regression_predicted_sales","i","length","push"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAMC,UAAU,GAAG,oBAACC,KAAD,EAAQC,aAAR,EAAwB;AACvC,MAAIC,IAAI,GAAGC,aAAa,CAACH,KAAD,EAAQC,aAAR,CAAxB;AACA,MAAIF,UAAU,GAAG,IAAIF,YAAY,CAACO,gBAAjB,EAAjB;AACA,MAAIC,KAAK,GAAGN,UAAU,CAACO,GAAX,CAAeJ,IAAf,CAAZ,CAHuC,CAKvC;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAU,CAACU,SAAX,CAAqB,CAAC,CAAD,CAArB,CAAZ;AAEA,SAAO,CAACC,aAAD,EAAgBC,gBAAhB,EAAkCC,0BAAlC,CAAP;AACH,CAXD;;AAaA,SAAST,aAAT,CAAuBH,KAAvB,EAA8BC,aAA9B,EAA4C;AACxC,MAAMC,IAAI,GAAG,EAAb;;AACA,OAAKW,CAAC,GAAC,CAAP,EAASA,CAAC,GAACZ,aAAa,CAACa,MAAd,EAAX,EAAkCD,CAAC,EAAnC,EAAsC;AAClCX,IAAAA,IAAI,CAACa,IAAL,CAAU,CAACd,aAAa,CAACY,CAAD,CAAd,EAAkBb,KAAK,CAACa,CAAD,CAAvB,CAAV;AACH;AACJ","sourcesContent":["var jsregression = require('js-regression');\n\nconst regression = (sales, exchange_rate)=>{\n    var data = reformat_data(sales, exchange_rate)\n    var regression = new jsregression.LinearRegression();\n    var model = regression.fit(data);\n    \n    // === Print the trained model === //\n    console.log(data);\n    console.log(model);\n    console.log(regression.transform([3]));\n\n    return [regression_fx, regression_sales, regression_predicted_sales]\n}\n\nfunction reformat_data(sales, exchange_rate){\n    const data = []\n    for (i=0;i<exchange_rate.length();i++){\n        data.push([exchange_rate[i],sales[i]])\n    }\n}\n \n\n\n"]},"metadata":{},"sourceType":"script"}