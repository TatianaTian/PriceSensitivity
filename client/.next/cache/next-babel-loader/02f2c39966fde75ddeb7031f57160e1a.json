{"ast":null,"code":"\"use strict\";\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nvar _polaris = require(\"@shopify/polaris\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getPearsonCorrelation = require('./calc_correlation');\n\nconst linear_regression = require('./linear_regression');\n\nconst fetch_from_map = (select, tabs, maps, product_id_title_map, dropdown_select, product_id_price_map) => {\n  try {\n    if (select !== 0) {\n      // fetch data for graphs\n      const selected_currency = tabs[select]['id'];\n      console.log(\"selected currency is \", selected_currency);\n      console.log(\"dropdown_select is \", selected_currency);\n      const selected_data_all_products = maps.get(selected_currency);\n      const selected_data = selected_data_all_products.get(dropdown_select);\n      const product_price = product_id_price_map.get(dropdown_select);\n      const [regression_fx, regression_sales, regression_predicted_sales, slope] = linear_regression(selected_data[1], selected_data[2]);\n      console.log(\"regression_fx is \", regression_fx);\n      console.log(\"regression_sales is \", regression_sales);\n      console.log(\"regression_predicted_sales is \", regression_predicted_sales);\n      console.log(\"slope is \", slope);\n      console.log(\"selected data is \", selected_data);\n      localStorage.setItem('date', selected_data[0]);\n      localStorage.setItem('price', selected_data[1]);\n      localStorage.setItem('exchange_rate', selected_data[2]);\n      localStorage.setItem('current_level', selected_data[3]);\n      localStorage.setItem('correlation', getPearsonCorrelation(selected_data[1], selected_data[2]));\n      localStorage.setItem('regression_fx', regression_fx);\n      localStorage.setItem('regression_sales', regression_sales);\n      localStorage.setItem('regression_predicted_sales', regression_predicted_sales);\n      localStorage.setItem('slope', slope);\n      console.log(\"done storing\");\n      /*\n      console.log(\"localStorage.getItem('date') is\",localStorage.getItem('date'))\n      console.log(\"localStorage.getItem('price') is\",localStorage.getItem('price'))\n      console.log(\"localStorage.getItem('exchange_rate') is\",localStorage.getItem('exchange_rate'))*/\n      // find the product price\n      // filter options\n\n      console.log(\"selected_data_all_products is\", selected_data_all_products);\n      console.log('product_id_title_map is ', product_id_title_map);\n      var num_dates = 0;\n      var options = [];\n\n      for (let [key, value] of selected_data_all_products) {\n        num_dates = value[0].length;\n\n        if (num_dates > 1) {\n          var price_set = new Set(value[1]);\n          var fx_set = new Set(value[2]);\n\n          if (price_set.size > 1 && fx_set.size > 1) {\n            console.log('use key to get name ', product_id_title_map.get(key));\n            options.push({\n              label: product_id_title_map.get(key),\n              value: key\n            });\n          }\n        }\n\n        console.log(key + ' = ' + value);\n      }\n    }\n  } catch (err) {\n    console.log(\"no id\");\n  }\n\n  return options;\n};\n\nmodule.exports = fetch_from_map;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/fetch_from_map.js"],"names":["getPearsonCorrelation","require","linear_regression","fetch_from_map","select","tabs","maps","product_id_title_map","dropdown_select","product_id_price_map","selected_currency","console","log","selected_data_all_products","get","selected_data","product_price","regression_fx","regression_sales","regression_predicted_sales","slope","localStorage","setItem","num_dates","options","key","value","length","price_set","Set","fx_set","size","push","label","err","module","exports"],"mappings":"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","sourcesContent":["import store from 'store-js';\nimport { KeypressListener } from '@shopify/polaris';\n\nconst getPearsonCorrelation = require('./calc_correlation')\nconst linear_regression = require('./linear_regression')\n\nconst fetch_from_map = (select, tabs, maps, product_id_title_map, dropdown_select, product_id_price_map) => {\n\n\n    try{\n        \n        if (select !== 0){\n            // fetch data for graphs\n            const selected_currency = tabs[select]['id']\n            console.log(\"selected currency is \", selected_currency)\n            console.log(\"dropdown_select is \", selected_currency)\n\n\n            const selected_data_all_products = maps.get(selected_currency)\n            const selected_data = selected_data_all_products.get(dropdown_select)\n            const product_price = product_id_price_map.get(dropdown_select)\n\n\n            const [regression_fx, regression_sales, regression_predicted_sales, slope] = linear_regression(selected_data[1],selected_data[2])\n                \n            console.log(\"regression_fx is \", regression_fx);\n            console.log(\"regression_sales is \", regression_sales);\n            console.log(\"regression_predicted_sales is \", regression_predicted_sales);\n            console.log(\"slope is \", slope);\n    \n            console.log(\"selected data is \", selected_data)\n\n            localStorage.setItem('date', selected_data[0]);\n            localStorage.setItem('price', selected_data[1]);\n            localStorage.setItem('exchange_rate', selected_data[2]);\n            localStorage.setItem('current_level', selected_data[3]);\n            localStorage.setItem('correlation', getPearsonCorrelation(selected_data[1],selected_data[2]));\n            localStorage.setItem('regression_fx', regression_fx);\n            localStorage.setItem('regression_sales', regression_sales);\n            localStorage.setItem('regression_predicted_sales', regression_predicted_sales);\n            localStorage.setItem('slope', slope);\n\n            console.log(\"done storing\")\n            /*\n            console.log(\"localStorage.getItem('date') is\",localStorage.getItem('date'))\n            console.log(\"localStorage.getItem('price') is\",localStorage.getItem('price'))\n            console.log(\"localStorage.getItem('exchange_rate') is\",localStorage.getItem('exchange_rate'))*/\n\n            // find the product price\n\n\n\n\n\n\n\n            // filter options\n            console.log(\"selected_data_all_products is\",selected_data_all_products)\n            console.log('product_id_title_map is ', product_id_title_map)\n            var num_dates = 0\n            var options = []\n            for (let [key, value] of selected_data_all_products) {\n                num_dates = value[0].length\n                if (num_dates>1){\n                    var price_set = new Set(value[1]);\n                    var fx_set = new Set(value[2]);\n                    if (price_set.size>1 && fx_set.size>1){\n                        console.log('use key to get name ', product_id_title_map.get(key))\n                        options.push(\n                            {\n                                label:product_id_title_map.get(key), value: key\n                            }\n                        )\n                    }\n\n                 \n                }\n\n                console.log(key + ' = ' + value)\n              }\n\n\n        }\n\n        \n\n\n\n    } catch(err){\n        console.log(\"no id\")\n    }\n    \n    return options\n}\n\nmodule.exports = fetch_from_map; \n\n"]},"metadata":{},"sourceType":"script"}