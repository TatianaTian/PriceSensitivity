{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nclass ResourceListWithProducts extends React.Component {\n  // Initialize the state\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", () => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('https://localhost:5000/api/getList').then(res => res.json()).then(list => this.setState({\n        list\n      }));\n      console.log(\"3\");\n    });\n\n    this.state = {\n      list: []\n    };\n    console.log(\"1\");\n  } // Fetch the list on first mount\n\n\n  componentDidMount() {\n    this.getList();\n    console.log(\"2\");\n  } // Retrieves the list of items from the Express app\n\n\n  render() {\n    const {\n      list\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"List of Items22\"), list.length ? __jsx(\"div\", null, list.map(item => {\n      return __jsx(\"div\", null, item);\n    })) : __jsx(\"div\", null, __jsx(\"h2\", null, \"No List Items Found\")));\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/backend/client/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","ResourceListWithProducts","React","Component","constructor","props","fetch","then","res","json","list","setState","console","log","state","componentDidMount","getList","render","length","map","item"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;AAIA,MAAMC,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AACnD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,qCAcR,MAAM;AACd;AACA;AACAC,MAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,CAFd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KArBiB;;AAEhB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE;AADK,KAAb;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,GARkD,CASnD;;;AACAE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,GAbkD,CAenD;;;AAUFI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAW,KAAKI,KAAtB;AACA,WACE,mBACA,oCADA,EAGCJ,IAAI,CAACQ,MAAL,GACC,mBAEGR,IAAI,CAACS,GAAL,CAAUC,IAAD,IAAU;AAClB,aACE,mBACGA,IADH,CADF;AAKD,KANA,CAFH,CADD,GAYC,mBACE,wCADF,CAfF,CADF;AAuBD;;AAlDoD;;AAqDtD,eAAenB,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail, \n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n\n\nclass ResourceListWithProducts extends React.Component {\n    // Initialize the state\n    constructor(props){\n      super(props);\n      this.state = {\n        list: []\n      }\n      console.log(\"1\")\n    }\n    // Fetch the list on first mount\n    componentDidMount() {\n      this.getList();\n      console.log(\"2\")\n    }\n  \n    // Retrieves the list of items from the Express app\n    getList = () => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('https://localhost:5000/api/getList')\n      .then(res => res.json())\n      .then(list => this.setState({ list }))\n      console.log(\"3\")\n    }  \n\n  render() {\n    const { list } = this.state;\n    return (\n      <div>\n      <h1>List of Items22</h1>\n      {/* Check to see if any items are found*/}\n      {list.length ? (\n        <div>\n          {/* Render the list of items */}\n          {list.map((item) => {\n            return(\n              <div>\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <h2>No List Items Found</h2>\n        </div>\n      )\n    }\n    </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}