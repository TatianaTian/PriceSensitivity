{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Tabs } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\nimport Main_data from \"../components/Main_data\";\n\nconst change_format2 = require('../functions/change_format2');\n\nconst select_to_country = require('../functions/select_to_country');\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", () => {\n      fetch('http://localhost:5000/api/tabs').then(res => res.json()).then(list2 => this.setState({\n        list2\n      })).then(data => {\n        const myMap = change_format2(list2[1]);\n        store.set('map', myMap);\n      });\n    });\n\n    _defineProperty(this, \"getCountryData\", () => {\n      fetch('http://localhost:5000/api/country_data').then(res => res.json()).then(country_data => this.setState({\n        country_data\n      }));\n      console.log(\"3\");\n    });\n\n    this.state = {\n      list: [[], [], []],\n      selected: 0,\n      list2: [[], []]\n    };\n  }\n\n  componentDidMount() {\n    this.getList(); //this.getCountryData();\n\n    console.log(\"here\"); //console.log(\"list is \", this.state.list)\n    //change_format2(this.state.list)\n  }\n\n  render() {\n    const {\n      list,\n      selected,\n      list2\n    } = this.state;\n    change_format2(list);\n    /*\n    if (list2===null){\n      console.log(\"loading...\")\n    }{\n      console.log(\"list2 is \")\n    }*/\n\n    const tab = list2[0];\n\n    try {\n      console.log(\"list2 is \", list2[1][2][3][0]);\n      const myMap = change_format2(list2[1]);\n      const currency = tab[select];\n      const [date, revenue, fx] = myMap.get(currency);\n      store.set('date', date);\n      store.set('price', revenue);\n      store.set('exchange_rate', fx);\n      console.log(\"date is \", date);\n      console.log(\"price is \", revenue);\n      console.log(\"exchange_rate is \", fx);\n    } catch (err) {\n      console.log(\"loading...\");\n    } //console.log(\"list 2 is \", list2[0][0][0][1][0][1][0])\n    //console.log(\"list 1 is \", list2[0][3][3])\n    //console.log(\"list 2 is \", list2[1][3][3])\n    //console.log(\"list 3 is \", list2[2][3][5])\n    //console.log(\"list 4 is \", list2[2][0][0][1][0][1][0])\n    //console.log(\"list 5 is \", list2[1][0][0][1][0][1][0])\n    //console.log(\"lis1 is \", list[0])\n    //console.log(\"list is \", list[1])\n    //console.log(\"selected is \", selected)\n\n\n    var i = 0;\n\n    if (selected > 0) {\n      i = selected - 1;\n    }\n    /*\n    const date = list[1][i][0]\n    const price = list[1][i][1]\n    const exchange_rate = list[1][i][2]\n    store.set('date', date)\n    store.set('price', price)\n    store.set('exchange_rate', exchange_rate)\n     const level = list[2]\n    store.set('level', level)\n    //console.log('level is ', level)\n    */\n    // var tab = list[0]\n\n\n    return __jsx(Tabs, {\n      tabs: tab,\n      selected: selected,\n      onSelect: selected => this.setState({\n        selected\n      }),\n      fitted: true\n    }, selected === 0 ? __jsx(Main_data, null) : __jsx(Country_data, null));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/detect_transactions.js"],"names":["gql","Query","Tabs","store","Redirect","Context","Country_data","Main_data","change_format2","require","select_to_country","ResourceListWithProducts","React","Component","constructor","props","fetch","then","res","json","list2","setState","data","myMap","set","country_data","console","log","state","list","selected","componentDidMount","getList","render","tab","currency","select","date","revenue","fx","get","err","i"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {Tabs} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport Country_data from \"../components/Country_data\";\nimport Main_data from \"../components/Main_data\";\n\nconst change_format2 = require('../functions/change_format2')\nconst select_to_country = require('../functions/select_to_country')\n\n\nclass ResourceListWithProducts extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      list : [[],[],[]],\n      selected: 0,  \n      list2:[[],[]]\n    }\n  }\n  static contextType = Context;\n\n  componentDidMount() {\n    this.getList();\n    //this.getCountryData();\n    console.log(\"here\")\n    //console.log(\"list is \", this.state.list)\n    //change_format2(this.state.list)\n  }\n\n  getList = () => {\n    fetch('http://localhost:5000/api/tabs')\n    .then(res => res.json())\n    .then(list2 => this.setState({ list2 }))\n    .then(data => {\n      const myMap = change_format2(list2[1])\n      store.set('map', myMap)\n    })\n  }\n\n  \n  getCountryData = () => {\n    fetch('http://localhost:5000/api/country_data')\n    .then(res => res.json())\n    .then(country_data => this.setState({ country_data }))\n    console.log(\"3\")\n  }\n\n  \n  render() {\n    const {list, selected, list2} = this.state;\n\n    change_format2(list)\n    /*\n    if (list2===null){\n      console.log(\"loading...\")\n    }{\n      console.log(\"list2 is \")\n    }*/\n    const tab =  list2[0]\n\n    try {\n      console.log(\"list2 is \", list2[1][2][3][0])\n      const myMap = change_format2(list2[1])\n      const currency = tab[select]\n      const [date, revenue, fx] = myMap.get(currency)\n      store.set('date', date)\n      store.set('price', revenue)\n      store.set('exchange_rate', fx)\n\n      console.log(\"date is \", date)\n      console.log(\"price is \", revenue)\n      console.log(\"exchange_rate is \", fx)\n    }\n    catch(err) {\n      console.log(\"loading...\")\n    }\n    //console.log(\"list 2 is \", list2[0][0][0][1][0][1][0])\n    //console.log(\"list 1 is \", list2[0][3][3])\n    //console.log(\"list 2 is \", list2[1][3][3])\n    //console.log(\"list 3 is \", list2[2][3][5])\n    //console.log(\"list 4 is \", list2[2][0][0][1][0][1][0])\n    //console.log(\"list 5 is \", list2[1][0][0][1][0][1][0])\n\n    \n\n    //console.log(\"lis1 is \", list[0])\n\n    //console.log(\"list is \", list[1])\n    //console.log(\"selected is \", selected)\n\n    var i = 0\n    if (selected > 0){\n      i = selected - 1\n    }\n\n\n    /*\n    const date = list[1][i][0]\n    const price = list[1][i][1]\n    const exchange_rate = list[1][i][2]\n    store.set('date', date)\n    store.set('price', price)\n    store.set('exchange_rate', exchange_rate)\n\n    const level = list[2]\n    store.set('level', level)\n    //console.log('level is ', level)\n*/\n   // var tab = list[0]\n  \n  \n    \n  \n\n    \n    return (\n\n      <Tabs tabs={tab} selected={selected} onSelect={(selected) => this.setState({selected})} fitted={true} >\n        {selected===0? (\n          \n          <Main_data/>\n      ):(\n          <Country_data/>\n      )}\n\n      </Tabs>\n    );\n  }\n\n\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}