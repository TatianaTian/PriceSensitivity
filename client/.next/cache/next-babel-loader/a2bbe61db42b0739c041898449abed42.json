{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"List of Items22\"), list.length ? __jsx(\"div\", null, list.map(item => {\n      return __jsx(\"div\", null, item);\n    })) : __jsx(\"div\", null, __jsx(\"h2\", null, \"No List Items Found\")));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/backend/client/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","now","toDateString","list","length","map","item"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAGA,MAAMC,kBAAkB,GAAGV,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA6BA,MAAMW,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AAErDC,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,KAAKC,OAAjB;;AACA,UAAMC,iBAAiB,GAAG,MAAM;AAC9B,YAAMC,QAAQ,GAAGV,QAAQ,CAACW,MAAT,CAAgBJ,GAAhB,CAAjB;AACAG,MAAAA,QAAQ,CAACE,QAAT,CACEZ,QAAQ,CAACa,MAAT,CAAgBC,GADlB,EAEE,gBAFF;AAID,KAND;;AAQA,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACA,WACE,mBACA,oCADA,EAGCC,IAAI,CAACC,MAAL,GACC,mBAEGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AAClB,aACE,mBACGA,IADH,CADF;AAKD,KANA,CAFH,CADD,GAYC,mBACE,wCADF,CAfF,CADF;AAuBD;;AApCoD;;gBAAjDnB,wB,iBACiBF,O;;AAsCtB,eAAeE,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail, \n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  static contextType = Context;\n  render() {\n    const app = this.context;\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(\n        Redirect.Action.APP,\n        '/edit-products',\n      );\n    };\n\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <div>\n      <h1>List of Items22</h1>\n      {/* Check to see if any items are found*/}\n      {list.length ? (\n        <div>\n          {/* Render the list of items */}\n          {list.map((item) => {\n            return(\n              <div>\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <h2>No List Items Found</h2>\n        </div>\n      )\n    }\n    </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}