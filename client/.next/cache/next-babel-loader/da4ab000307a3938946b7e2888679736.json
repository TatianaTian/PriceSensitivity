{"ast":null,"code":"/* \ninput: currency pair, amount_seller_currency, amount_buyer_currency, locked rate\noutput: direction, quantity, limit order@\n\n1. decide direction and quantity\n    a. GBP, EUR, AUD, NZD to USD: USD at right\n        i. buyer at left, seller at right\n        ii. seller at left, buyer ar right\n    b. CAD, CHF, CNH, CZK, DKK, HKD, HUF, JPY, MXN, NOK, PLN, SAR, SEK, SGD, THB, TRY, ZAR: USD at left\n    c. non-USD currency pair\n2. request the latest price for that direction and quantity\n3. check the locked rate vs the latest price (if locked rate is better than the latest price, tell users to refresh the new locked rate)\n4. place order with direction, quantity, limit order @ locked rate\n5. after receiving confirm message, send back to shopify\n*/\nfunction positionIndicator(currency_pair_buyer, currency_pair_seller) {\n  // decide direction and quantity\n  var currency_pair = \"\";\n  var tradeDirection = \"\";\n  var primary_currency = [\"GBP\", \"EUR\", \"AUD\", \"NZD\", \"USD\"];\n\n  if (primary_currency.includes(currency_pair_buyer) && primary_currency.includes(currency_pair_buyer)) {\n    if (currency_pair_seller == \"USD\") {\n      tradeDirection = \"sell\";\n      currency_pair = currency_pair_buyer.concat(\"/\", currency_pair_seller);\n    } else if (currency_pair_buyer == \"USD\") {\n      tradeDirection = \"buy\";\n      currency_pair = currency_pair_seller.concat(\"/\", currency_pair_buyer);\n    }\n  } // request the latest price for that direction and quantity\n\n\n  return [tradeDirection, currency_pair];\n}\n\nfunction positionTrader(currency_pair_buyer, currency_pair_seller, amount_buyer_currency, locked_rate) {\n  // decide direction and quantity\n  var tradeDirection = \"\";\n  var tradeQuantity = 0;\n  var primary_currency = [\"GBP\", \"EUR\", \"AUD\", \"NZD\", \"USD\"];\n\n  if (primary_currency.includes(currency_pair_buyer) && primary_currency.includes(currency_pair_buyer)) {\n    if (currency_pair_seller == \"USD\") {\n      tradeDirection = \"sell\";\n      amount_seller_currency = amount_buyer_currency * locked_rate;\n      tradeQuantity = amount_seller_currency;\n      currency_pair = currency_pair_buyer.concat(\"/\", currency_pair_seller);\n    } else if (currency_pair_buyer == \"USD\") {\n      tradeDirection = \"buy\";\n      tradeQuantity = amount_buyer_currency;\n      currency_pair = currency_pair_seller.concat(\"/\", currency_pair_buyer);\n    }\n  } // request the latest price for that direction and quantity\n\n\n  return [tradeDirection, tradeQuantity, currency_pair];\n}\n\nfunction closePosition(currency_pair_buyer, currency_pair_seller, amount_buyer_currency, locked_rate) {\n  // decide direction and quantity\n  var tradeDirection = \"\";\n  var tradeQuantity = 0;\n  var primary_currency = [\"GBP\", \"EUR\", \"AUD\", \"NZD\", \"USD\"];\n\n  if (primary_currency.includes(currency_pair_buyer) && primary_currency.includes(currency_pair_buyer)) {\n    if (currency_pair_seller == \"USD\") {\n      tradeDirection = \"buy\";\n      tradeQuantity = amount_buyer_currency * locked_rate;\n      currency_pair = currency_pair_buyer.concat(\"/\", currency_pair_seller);\n    } else if (currency_pair_buyer == \"USD\") {\n      tradeDirection = \"sell\";\n      tradeQuantity = amount_buyer_currency;\n      currency_pair = currency_pair_seller.concat(\"/\", currency_pair_buyer);\n    }\n  } // request the latest price for that direction and quantity\n\n\n  return [tradeDirection, tradeQuantity, currency_pair];\n}\n\nexports.positionIndicator = positionIndicator;\nexports.positionTrader = positionTrader;\nexports.closePosition = closePosition;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_app/trade/trades/src/positionGenerator.js"],"names":["positionIndicator","currency_pair_buyer","currency_pair_seller","currency_pair","tradeDirection","primary_currency","includes","concat","positionTrader","amount_buyer_currency","locked_rate","tradeQuantity","amount_seller_currency","closePosition","exports"],"mappings":"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","sourcesContent":["/* \ninput: currency pair, amount_seller_currency, amount_buyer_currency, locked rate\noutput: direction, quantity, limit order@\n\n1. decide direction and quantity\n    a. GBP, EUR, AUD, NZD to USD: USD at right\n        i. buyer at left, seller at right\n        ii. seller at left, buyer ar right\n    b. CAD, CHF, CNH, CZK, DKK, HKD, HUF, JPY, MXN, NOK, PLN, SAR, SEK, SGD, THB, TRY, ZAR: USD at left\n    c. non-USD currency pair\n2. request the latest price for that direction and quantity\n3. check the locked rate vs the latest price (if locked rate is better than the latest price, tell users to refresh the new locked rate)\n4. place order with direction, quantity, limit order @ locked rate\n5. after receiving confirm message, send back to shopify\n*/\n\nfunction positionIndicator(currency_pair_buyer, currency_pair_seller) {\n    // decide direction and quantity\n    var currency_pair = \"\";\n    var tradeDirection = \"\";\n    var primary_currency = [\"GBP\", \"EUR\", \"AUD\", \"NZD\", \"USD\"];\n    if (primary_currency.includes(currency_pair_buyer) && primary_currency.includes(currency_pair_buyer)){\n        if (currency_pair_seller == \"USD\"){\n            tradeDirection = \"sell\";\n            currency_pair = currency_pair_buyer.concat(\"/\",currency_pair_seller)\n        }\n        else if (currency_pair_buyer == \"USD\"){\n            tradeDirection = \"buy\";\n            currency_pair = currency_pair_seller.concat(\"/\",currency_pair_buyer)\n        }\n    }\n    // request the latest price for that direction and quantity\n    return [tradeDirection, currency_pair];  \n  }\n\n\n\nfunction positionTrader(currency_pair_buyer, currency_pair_seller, amount_buyer_currency, locked_rate) {\n    // decide direction and quantity\n    var tradeDirection = \"\";\n    var tradeQuantity = 0;\n    var primary_currency = [\"GBP\", \"EUR\", \"AUD\", \"NZD\", \"USD\"];\n    if (primary_currency.includes(currency_pair_buyer) && primary_currency.includes(currency_pair_buyer)){\n        if (currency_pair_seller == \"USD\"){\n            tradeDirection = \"sell\";\n            amount_seller_currency = amount_buyer_currency * locked_rate;\n            tradeQuantity = amount_seller_currency;\n            currency_pair = currency_pair_buyer.concat(\"/\",currency_pair_seller);\n        }\n        else if (currency_pair_buyer == \"USD\"){\n            tradeDirection = \"buy\";\n            tradeQuantity = amount_buyer_currency;\n            currency_pair = currency_pair_seller.concat(\"/\",currency_pair_buyer);\n        }\n    }\n\n    // request the latest price for that direction and quantity\n    \n    return [tradeDirection, tradeQuantity, currency_pair];  \n  }\n\n  \n  function closePosition(currency_pair_buyer, currency_pair_seller, amount_buyer_currency, locked_rate) {\n    // decide direction and quantity\n    var tradeDirection = \"\";\n    var tradeQuantity = 0;\n    var primary_currency = [\"GBP\", \"EUR\", \"AUD\", \"NZD\", \"USD\"];\n    if (primary_currency.includes(currency_pair_buyer) && primary_currency.includes(currency_pair_buyer)){\n        if (currency_pair_seller == \"USD\"){\n            tradeDirection = \"buy\";\n            tradeQuantity = amount_buyer_currency * locked_rate;\n            currency_pair = currency_pair_buyer.concat(\"/\",currency_pair_seller);\n        }\n        else if (currency_pair_buyer == \"USD\"){\n            tradeDirection = \"sell\";\n            tradeQuantity = amount_buyer_currency;\n            currency_pair = currency_pair_seller.concat(\"/\",currency_pair_buyer);\n        }\n    }\n    // request the latest price for that direction and quantity\n    \n    return [tradeDirection, tradeQuantity, currency_pair];  \n  }\n\nexports.positionIndicator = positionIndicator;\nexports.positionTrader = positionTrader;\nexports.closePosition = closePosition;\n\n\n"]},"metadata":{},"sourceType":"script"}