{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nvar getPearsonCorrelation = require('./calc_correlation');\n\nvar change_format2 = function change_format2(allList, selected) {\n  var myMap = new Map(); //console.log(\"all list is \", alllist)\n\n  var list = allList[1]; // try{\n\n  console.log(\"list in format is \", list); // i is currency iterator\n\n  for (var i = 0; i < list.length; i++) {\n    console.log(\"i is \", i);\n    var currency = list[i][0];\n    var detail = list[i][3];\n    console.log(\"currency is \", currency); // j is products/all iterator\n\n    var revenue_list = [];\n    var fx_list = [];\n    var correlation = 0;\n\n    for (var j = 0; j < detail.length; j++) {\n      console.log(\"j is \", j);\n\n      if (list[i][3][j][0] === 'all') {\n        revenue_list.push(parseFloat(list[i][3][j][1][k][1][0])); //revenue_list.push('*')\n\n        fx_list.push(parseFloat(list[i][3][j][1][k][1][1]));\n        correlation = getPearsonCorrelation(revenue_list, fx_list);\n      }\n    }\n\n    myMap.set(currency, correlation);\n  }\n\n  console.log(\"myMap is \", myMap);\n  var product_id_title = allList[2];\n  var product_id_title_map = new Map(); //console.log('product_id_title is ', product_id_title)\n\n  try {\n    for (var k = 0; k < product_id_title.length; k++) {\n      product_id_title_map.set(product_id_title[k][0], product_id_title[k][1]);\n    }\n  } catch (error) {\n    console.log(\"error id title\");\n  }\n\n  return [myMap, product_id_title_map];\n};\n\nmodule.exports = change_format2;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/change_format2.js"],"names":["getPearsonCorrelation","require","change_format2","allList","selected","myMap","Map","list","console","log","i","length","currency","detail","revenue_list","fx_list","correlation","j","push","parseFloat","k","set","product_id_title","product_id_title_map","error","module","exports"],"mappings":";;;;AAAA;;AAEA,IAAMA,qBAAqB,GAAGC,OAAO,CAAC,oBAAD,CAArC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAC1C,MAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ,CAD0C,CAE1C;;AAEA,MAAMC,IAAI,GAAGJ,OAAO,CAAC,CAAD,CAApB,CAJ0C,CAK3C;;AACCK,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC,EAN0C,CAO1C;;AACA,OAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC7BF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,CAArB;AACA,QAAME,QAAQ,GAAGL,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAjB;AACA,QAAMG,MAAM,GAAGN,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAf;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,QAA5B,EAL6B,CAO7B;;AAEA,QAAIE,YAAY,GAAG,EAAnB;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,WAAW,GAAG,CAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,MAAM,CAACF,MAAvB,EAA+BM,CAAC,EAAhC,EAAmC;AAC/BT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,CAArB;;AACA,UAAIV,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWO,CAAX,EAAc,CAAd,MAAqB,KAAzB,EAA+B;AAC3BH,QAAAA,YAAY,CAACI,IAAb,CAAkBC,UAAU,CAACZ,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWO,CAAX,EAAc,CAAd,EAAiBG,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAD,CAA5B,EAD2B,CAE3B;;AACAL,QAAAA,OAAO,CAACG,IAAR,CAAaC,UAAU,CAACZ,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWO,CAAX,EAAc,CAAd,EAAiBG,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAD,CAAvB;AACAJ,QAAAA,WAAW,GAAGhB,qBAAqB,CAACc,YAAD,EAAcC,OAAd,CAAnC;AACH;AACJ;;AACDV,IAAAA,KAAK,CAACgB,GAAN,CAAUT,QAAV,EAAoBI,WAApB;AAEH;;AACDR,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB;AAEA,MAAMiB,gBAAgB,GAAGnB,OAAO,CAAC,CAAD,CAAhC;AACA,MAAIoB,oBAAoB,GAAG,IAAIjB,GAAJ,EAA3B,CApC0C,CAsC1C;;AAEA,MAAG;AACC,SAAK,IAAIc,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACE,gBAAgB,CAACX,MAAjC,EAAyCS,CAAC,EAA1C,EAA6C;AACzCG,MAAAA,oBAAoB,CAACF,GAArB,CAAyBC,gBAAgB,CAACF,CAAD,CAAhB,CAAoB,CAApB,CAAzB,EAAgDE,gBAAgB,CAACF,CAAD,CAAhB,CAAoB,CAApB,CAAhD;AACH;AACJ,GAJD,CAIE,OAAMI,KAAN,EAAY;AACVhB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;;AAGD,SAAO,CAACJ,KAAD,EAAQkB,oBAAR,CAAP;AACH,CAlDD;;AAoDAE,MAAM,CAACC,OAAP,GAAiBxB,cAAjB","sourcesContent":["import store from 'store-js';\n\nconst getPearsonCorrelation = require('./calc_correlation')\n\nconst change_format2 = (allList, selected) => {\n    let myMap = new Map();\n    //console.log(\"all list is \", alllist)\n    \n    const list = allList[1]\n   // try{\n    console.log(\"list in format is \", list)\n    // i is currency iterator\n    for (var i=0; i<list.length; i++){\n        console.log(\"i is \", i)\n        const currency = list[i][0]\n        const detail = list[i][3]\n      \n        console.log(\"currency is \", currency)\n\n        // j is products/all iterator\n     \n        var revenue_list = []\n        var fx_list = []\n        var correlation = 0\n\n        for (var j=0; j<detail.length; j++){\n            console.log(\"j is \", j)\n            if (list[i][3][j][0] === 'all'){\n                revenue_list.push(parseFloat(list[i][3][j][1][k][1][0]))\n                //revenue_list.push('*')\n                fx_list.push(parseFloat(list[i][3][j][1][k][1][1]))\n                correlation = getPearsonCorrelation(revenue_list,fx_list)\n            }\n        }\n        myMap.set(currency, correlation)\n\n    }\n    console.log(\"myMap is \", myMap)\n\n    const product_id_title = allList[2]\n    let product_id_title_map = new Map();\n\n    //console.log('product_id_title is ', product_id_title)\n    \n    try{\n        for (var k=0; k<product_id_title.length; k++){\n            product_id_title_map.set(product_id_title[k][0],product_id_title[k][1])\n        }\n    } catch(error){\n        console.log(\"error id title\")\n    }\n\n\n    return [myMap, product_id_title_map]\n}\n\nmodule.exports = change_format2; "]},"metadata":{},"sourceType":"script"}