{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n      var twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n      console.log('ids are ', store.get('ids'));\n      return (//<Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n        __jsx(Query, {\n          query: GET_PRODUCTS_BY_ID,\n          variables: {\n            ids: [\"gid://shopify/Product/4811254005819\"]\n          }\n        }, function (_ref) {\n          var data = _ref.data,\n              loading = _ref.loading,\n              error = _ref.error;\n          if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n          if (error) return __jsx(\"div\", null, error.message);\n          console.log(data);\n          return __jsx(Card, null, __jsx(ResourceList, {\n            showHeader: true //resourceName={{ singular: 'Product', plural: 'Products' }}\n            ,\n            items: data.nodes,\n            renderItem: function renderItem(item) {\n              /*const media = (\n                <Thumbnail\n                  source={\n                    item.images.edges[0]\n                      ? item.images.edges[0].node.originalSrc\n                      : ''\n                  }\n                  alt={\n                    item.images.edges[0]\n                      ? item.images.edges[0].node.altText\n                      : ''\n                  }\n                />\n              );*/\n              var price = item.variants.edges[0].node.price;\n              var quote = 1.2;\n              return __jsx(ResourceList.Item, {\n                //id={item.id}\n                //media={media}\n                //accessibilityLabel={`View details for ${item.title}`}\n                onClick: function onClick() {\n                  store.set('item', item); //redirectToProduct();\n                }\n              }, __jsx(\"p\", null, \"here is the product \"), __jsx(Stack, null, __jsx(Stack.Item, {\n                fill: true\n              }, __jsx(\"h3\", null, __jsx(TextStyle, {\n                variation: \"strong\"\n              }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price), __jsx(\"p\", null, quote)), __jsx(Stack.Item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n            }\n          }));\n        })\n      );\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/detect_transactions.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","app","context","twoWeeksFromNow","Date","now","toDateString","console","log","get","ids","data","loading","error","message","nodes","item","price","variants","edges","node","quote","set","title","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAGA,IAAMC,kBAAkB,GAAGV,GAAH,mBAAxB;;IA8BMW,wB;;;;;;;;;;;;;6BAEK;AACP,UAAMC,GAAG,GAAG,KAAKC,OAAjB;AACA,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBZ,KAAK,CAACa,GAAN,CAAU,KAAV,CAAvB;AACA,aACE;AACA,cAAC,KAAD;AAAO,UAAA,KAAK,EAAEV,kBAAd;AAAkC,UAAA,SAAS,EAAE;AAAEW,YAAAA,GAAG,EAAC,CAAC,qCAAD;AAAN;AAA7C,WAGG,gBAA8B;AAAA,cAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,cAArBC,OAAqB,QAArBA,OAAqB;AAAA,cAAZC,KAAY,QAAZA,KAAY;AAC7B,cAAID,OAAJ,EAAa,OAAO,mCAAP;AACb,cAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACC,OAAZ,CAAP;AACXP,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,iBACE,MAAC,IAAD,QACE,MAAC,YAAD;AACE,YAAA,UAAU,MADZ,CAEC;AAFD;AAGE,YAAA,KAAK,EAAEA,IAAI,CAACI,KAHd;AAIE,YAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAClB;;;;;;;;;;;;;;AAcA,kBAAMC,KAAK,GAAGD,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BH,KAA1C;AACA,kBAAMI,KAAK,GAAG,GAAd;AACA,qBACE,MAAC,YAAD,CAAc,IAAd;AACE;AACA;AACA;AACA,gBAAA,OAAO,EAAE,mBAAM;AACbzB,kBAAAA,KAAK,CAAC0B,GAAN,CAAU,MAAV,EAAkBN,IAAlB,EADa,CAEb;AACD;AAPH,iBASE,wCATF,EAUE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,gBAAA,IAAI;AAAhB,iBACE,kBACE,MAAC,SAAD;AAAW,gBAAA,SAAS,EAAC;AAArB,iBACCA,IAAI,CAACO,KADN,CADF,CADF,CADF,EAQE,MAAC,KAAD,CAAO,IAAP,QACE,sBAAKN,KAAL,CADF,EAEE,iBAAII,KAAJ,CAFF,CARF,EAYE,MAAC,KAAD,CAAO,IAAP,QACE,gCAAelB,eAAf,MADF,CAZF,CAVF,CADF;AA6BD;AAlDH,YADF,CADF;AAwDD,SA/DH;AAFF;AAoED;;;;EA1EoCqB,KAAK,CAACC,S;;gBAAvCzB,wB,iBACiBF,O;;AA4EtB,eAAeE,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail, \n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n\nclass ResourceListWithProducts extends React.Component {\n  static contextType = Context;\n  render() {\n    const app = this.context;\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    console.log('ids are ',store.get('ids') )\n    return (\n      //<Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids:[\"gid://shopify/Product/4811254005819\"] }}>\n      \n      \n        {({ data, loading, error }) => {\n          if (loading) return <div>Loadingâ€¦</div>;\n          if (error) return <div>{error.message}</div>;\n          console.log(data);\n          return (\n            <Card>\n              <ResourceList\n                showHeader\n               //resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.nodes}\n                renderItem={item => {\n                  /*const media = (\n                    <Thumbnail\n                      source={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.originalSrc\n                          : ''\n                      }\n                      alt={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.altText\n                          : ''\n                      }\n                    />\n                  );*/\n                  const price = item.variants.edges[0].node.price;\n                  const quote = 1.2;\n                  return (\n                    <ResourceList.Item\n                      //id={item.id}\n                      //media={media}\n                      //accessibilityLabel={`View details for ${item.title}`}\n                      onClick={() => {\n                        store.set('item', item);\n                        //redirectToProduct();\n                      }}\n                    >\n                      <p>here is the product </p>\n                      <Stack>\n                        <Stack.Item fill>\n                          <h3>\n                            <TextStyle variation=\"strong\">\n                            {item.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>${price}</p>\n                          <p>{quote}</p>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>Expires on {twoWeeksFromNow} </p>\n                        </Stack.Item>\n                      </Stack>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </Card>\n          );\n        }}\n      </Query>    \n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}