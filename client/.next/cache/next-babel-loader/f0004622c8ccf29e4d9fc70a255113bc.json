{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../style/style.css';\nimport { AppProvider, Page, Card, DataTable, Button, ResourcePicker } from '@shopify/polaris';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport { FaLock } from 'react-icons/fa';\nimport store from 'store-js';\nimport Modal from '../components/Modal_Currency';\nimport React, { useState, useCallback, OptionList, setSelected } from 'react';\n\nlet request_bid_ask = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js');\n\nimport { HorizontalBar, Line, Doughnut, Bar } from 'react-chartjs-2';\nconst rows = [['GBP', 1.3, 1.2, 100, '15']];\nvar lineChartData = {\n  labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n  datasets: [{\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372,,,,],\n    spanGaps: false\n  }, {\n    label: \"forecast\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    // The main line color\n    borderDash: [5, 10],\n    // try [5, 15] for instance\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"white\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"white\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: true\n    data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372, 7.1304, 7.1330, 7.1513, 7.1431],\n    spanGaps: true\n  }]\n};\nvar lineChartOptions = {\n  maintainAspectRatio: false,\n  tooltips: {\n    enabled: false\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: false\n      },\n      scaleLabel: {\n        display: false,\n        labelString: 'USD/CNH',\n        fontSize: 20\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0)\"\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 50,\n      top: 0,\n      bottom: 0\n    }\n  }\n};\nvar data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Sales',\n    type: 'line',\n    data: [51, 65, 40, 49, 60, 37, 40],\n    fill: false,\n    borderColor: '#EC932F',\n    backgroundColor: '#EC932F',\n    pointBorderColor: '#EC932F',\n    pointBackgroundColor: '#EC932F',\n    pointHoverBackgroundColor: '#EC932F',\n    pointHoverBorderColor: '#EC932F',\n    yAxisID: 'y-axis-2'\n  }, {\n    type: 'bar',\n    label: 'Visitor',\n    data: [200, 185, 590, 621, 250, 400, 95],\n    fill: false,\n    backgroundColor: '#71B37C',\n    borderColor: '#71B37C',\n    hoverBackgroundColor: '#71B37C',\n    hoverBorderColor: '#71B37C',\n    yAxisID: 'y-axis-1'\n  }]\n};\nvar options = {\n  responsive: true,\n  tooltips: {\n    mode: 'label'\n  },\n  elements: {\n    line: {\n      fill: false\n    }\n  },\n  scales: {\n    xAxes: [{\n      display: true,\n      gridLines: {\n        display: false\n      },\n      labels: {\n        show: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear',\n      display: true,\n      position: 'left',\n      id: 'y-axis-1',\n      gridLines: {\n        display: false\n      },\n      labels: {\n        show: true\n      }\n    }, {\n      type: 'linear',\n      display: true,\n      position: 'right',\n      id: 'y-axis-2',\n      gridLines: {\n        display: false\n      },\n      labels: {\n        show: true\n      }\n    }]\n  }\n};\nvar plugins = [{\n  afterDraw: (chartInstance, easing) => {\n    const ctx = chartInstance.chart.ctx;\n    ctx.fillText(\"This text drawn by a plugin\", 100, 100);\n  }\n}]; // Function\n\nclass dashboard extends React.Component {\n  // Initialize the state\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", () => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/getList').then(res => res.json()).then(list => this.setState({\n        list\n      }));\n      console.log(\"3\");\n    });\n\n    this.state = {\n      list: [],\n      open_currency: false,\n      rows: [],\n      active: true,\n      selected: []\n    };\n    console.log(\"1\");\n  } // Fetch the list on first mount\n\n\n  componentDidMount() {\n    this.getList();\n    console.log(\"2\");\n  } // Retrieves the list of items from the Express app\n\n\n  render() {\n    const {\n      list,\n      open_currency\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"main_background_image\"\n    }, __jsx(\"h1\", null, \"List of Items\"), list.length ? __jsx(\"div\", null, list.map(item => {\n      return __jsx(\"div\", null, item);\n    })) : __jsx(\"div\", null, __jsx(\"h2\", null, \"No List Items Found\")), __jsx(\"div\", null, __jsx(Line, {\n      height: \"320vh\",\n      data: lineChartData,\n      options: lineChartOptions\n    })), __jsx(\"div\", null, __jsx(Bar, {\n      data: data,\n      options: options,\n      plugins: plugins\n    })), __jsx(Page, {\n      title: \"Gauranteed Exchange Rate\"\n    }, __jsx(Card, null, __jsx(DataTable, {\n      columnContentTypes: ['text', 'numeric', 'numeric', 'numeric', 'numeric'],\n      headings: [\"Buyer's currency\", 'Gauranteed Exchange Rate', 'Real-time Exchange Rate', 'Gauranteed Amount', 'Extra Revenue'],\n      rows: rows,\n      totals: ['', '', '', '', '$34.78']\n    }))), __jsx(Modal, null));\n  }\n\n}\n\nexport default dashboard;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/dashboard.js"],"names":["AppProvider","Page","Card","DataTable","Button","ResourcePicker","translations","FaLock","store","Modal","React","useState","useCallback","OptionList","setSelected","request_bid_ask","require","HorizontalBar","Line","Doughnut","Bar","rows","lineChartData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","spanGaps","lineChartOptions","maintainAspectRatio","tooltips","enabled","legend","display","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","fontSize","xAxes","gridLines","color","layout","padding","left","right","top","bottom","type","yAxisID","hoverBackgroundColor","hoverBorderColor","options","responsive","mode","elements","line","show","position","id","plugins","afterDraw","chartInstance","easing","ctx","chart","fillText","dashboard","Component","constructor","props","fetch","then","res","json","list","setState","console","log","state","open_currency","active","selected","componentDidMount","getList","render","length","map","item"],"mappings":"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","sourcesContent":["import '../style/style.css'\nimport { AppProvider, Page, Card, DataTable, Button, ResourcePicker } from '@shopify/polaris';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport {FaLock } from 'react-icons/fa';\nimport store from 'store-js';\nimport Modal from '../components/Modal_Currency'\nimport React, {useState, useCallback, OptionList, setSelected} from 'react';\nlet request_bid_ask = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js')\nimport {HorizontalBar, Line, Doughnut, Bar} from 'react-chartjs-2';\n\n\n\nconst rows = [['GBP', 1.3, 1.2, 100, '15']]\n\n\n\nvar lineChartData = {\n    labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n    datasets: [{\n      label: \"real\",\n      fill: false,\n      lineTension: 0,\n      backgroundColor: \"rgb(1, 2, 58)\",\n      borderColor: \"rgb(1, 2, 58)\",\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: \"rgb(1, 2, 58)\",\n      pointBackgroundColor: \"rgb(1, 2, 58)\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10,\n      // notice the gap in the data and the spanGaps: false\n      data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372, , ,,],\n      spanGaps: false,\n      },\n        {\n        label: \"forecast\",\n        fill: false,\n        lineTension: 0,\n        backgroundColor: \"rgb(1, 2, 58)\",\n        borderColor: \"rgb(1, 2, 58)\", // The main line color\n        \n        borderDash: [5, 10], // try [5, 15] for instance\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: \"rgb(1, 2, 58)\",\n        pointBackgroundColor: \"white\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"white\",\n        pointHoverBorderColor: \"rgb(1, 2, 58)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 4,\n        pointHitRadius: 10,\n        // notice the gap in the data and the spanGaps: true\n        data: [7.0781, 7.1005, 7.0906, 7.0879, 7.1372, 7.1304, 7.1330, 7.1513, 7.1431],\n        spanGaps: true,\n      }, \n  \n    ]\n  };\n  \n  var lineChartOptions = {\n    maintainAspectRatio: false,\n    tooltips:{\n      enabled:false,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n              yAxes: [{\n                  ticks: {\n                      beginAtZero:false\n                  },\n                  scaleLabel: {\n                       display: false,\n                       labelString: 'USD/CNH',\n                       fontSize: 20 \n                    }\n              }],\n              xAxes: [{\n                gridLines: {\n                  color: \"rgba(0, 0, 0, 0)\",\n              }\n              },],            \n          },\n          layout: {\n            padding: {\n                left: 0,\n                right: 50,\n                top: 0,\n                bottom: 0\n            }\n        }   \n  };\n\n\n\n  var data = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [{\n        label: 'Sales',\n        type:'line',\n        data: [51, 65, 40, 49, 60, 37, 40],\n        fill: false,\n        borderColor: '#EC932F',\n        backgroundColor: '#EC932F',\n        pointBorderColor: '#EC932F',\n        pointBackgroundColor: '#EC932F',\n        pointHoverBackgroundColor: '#EC932F',\n        pointHoverBorderColor: '#EC932F',\n        yAxisID: 'y-axis-2'\n      },{\n        type: 'bar',\n        label: 'Visitor',\n        data: [200, 185, 590, 621, 250, 400, 95],\n        fill: false,\n        backgroundColor: '#71B37C',\n        borderColor: '#71B37C',\n        hoverBackgroundColor: '#71B37C',\n        hoverBorderColor: '#71B37C',\n        yAxisID: 'y-axis-1'\n      }]\n  };\n  \n  var options = {\n    responsive: true,\n    tooltips: {\n      mode: 'label'\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          display: true,\n          gridLines: {\n            display: false\n          },\n          labels: {\n            show: true\n          }\n        }\n      ],\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-1',\n          gridLines: {\n            display: false\n          },\n          labels: {\n            show: true\n          }\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-2',\n          gridLines: {\n            display: false\n          },\n          labels: {\n            show: true\n          }\n        }\n      ]\n    }\n  };\n\n  var plugins = [{\n    afterDraw: (chartInstance, easing) => {\n        const ctx = chartInstance.chart.ctx;\n        ctx.fillText(\"This text drawn by a plugin\", 100, 100);\n    }\n}];\n\n// Function\n\nclass dashboard extends React.Component {\n    // Initialize the state\n    constructor(props){\n      super(props);\n      this.state = {\n        list: [],\n        open_currency: false,\n        rows:[],\n        active: true,\n        selected: []\n      }\n      console.log(\"1\")\n    }\n    // Fetch the list on first mount\n    componentDidMount() {\n      this.getList();\n      console.log(\"2\")\n    }\n  \n    // Retrieves the list of items from the Express app\n    getList = () => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/getList')\n      .then(res => res.json())\n      .then(list => this.setState({ list }))\n      console.log(\"3\")\n    }  \n\n\n  render() {\n    const { list, open_currency } = this.state;\n    \n    return (\n      <div className=\"main_background_image\">\n      <h1>List of Items</h1>\n      {/* Check to see if any items are found*/}\n      {list.length ? (\n        <div>\n          {/* Render the list of items */}\n          {list.map((item) => {\n            return(\n              <div>\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div>\n          <h2>No List Items Found</h2>\n        </div>\n      )\n    }\n        <div>\n            <Line \n            height=\"320vh\"\n            data={lineChartData}\n            options={lineChartOptions}\n            />\n        </div>    \n        <div>\n        <Bar\n          data={data}\n          options={options}\n          plugins={plugins}\n        />\n        </div>\n      <Page title=\"Gauranteed Exchange Rate\">\n            <Card>\n              <DataTable\n                columnContentTypes={[\n                  'text',\n                  'numeric',\n                  'numeric',\n                  'numeric',\n                  'numeric',\n                ]}\n                headings={[\n                  \"Buyer's currency\",\n                  'Gauranteed Exchange Rate',\n                  'Real-time Exchange Rate',\n                  'Gauranteed Amount',\n                  'Extra Revenue',\n                ]}\n                rows={rows}\n                totals={['', '', '', '', '$34.78']}\n              />\n            </Card>\n          </Page>\n\n          <Modal/>\n          \n    </div>\n\n    \n    );\n\n\n\n\n  }\n\n\n}\n\n\n\n export default dashboard;"]},"metadata":{},"sourceType":"module"}