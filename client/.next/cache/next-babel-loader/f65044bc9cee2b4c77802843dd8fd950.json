{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nvar change_format2 = function change_format2(allList, selected) {\n  var myMap = new Map(); //console.log(\"all list is \", alllist)\n\n  var list = allList[1]; // try{\n\n  console.log(\"list in format is \", list);\n\n  for (var i = 0; i < list.length; i++) {\n    console.log(\"i is \", i);\n    var currency = list[i][0];\n    var detail = list[i][3];\n    var current_level = list[i][2];\n    console.log(\"currency is \", currency);\n\n    for (var j = 0; j < detail.length; j++) {\n      console.log(\"j is \", j);\n      var date_list = [];\n      var revenue_list = [];\n      var fx_list = [];\n\n      if (list[i][3][j][0] == 'all') {\n        //console.log('llist[i][3][j] is ', list[i][3][j])\n        for (k = 0; k < list[i][3][j][1].length; k++) {\n          date_list.push(list[i][3][j][1][k][0]);\n          revenue_list.push(list[i][3][j][1][k][1][0]);\n          fx_list.push(list[i][3][j][1][k][1][1]);\n        }\n      }\n\n      console.log(\"arrived here, currency is \", currency);\n      myMap.set(currency, [date_list, revenue_list, fx_list, current_level]);\n    } //myMap.set(list[i][0],\n\n  }\n\n  console.log(\"myMap is \", myMap);\n  var tabs = allList[0];\n  var selected_currency = tabs[selected];\n  var selected_data = myMap.get(selected_currency);\n  console.log(\"selected data is \", selected_data);\n  /*\n  console.log(\"date is \", selected_data[0])\n  console.log(\"price is \", selected_data[1])\n  console.log(\"exchange_rate is \", selected_data[2])\n   store.set('date', selected_data[0])\n  store.set('price', selected_data[1])\n  store.set('exchange_rate', selected_data[2])*/\n\n  /*}\n  catch(err) {\n      console.log(\"error\")\n  }*/\n\n  return null;\n};\n\nmodule.exports = change_format2;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/functions/change_format2.js"],"names":["change_format2","allList","selected","myMap","Map","list","console","log","i","length","currency","detail","current_level","j","date_list","revenue_list","fx_list","k","push","set","tabs","selected_currency","selected_data","get","module","exports"],"mappings":";;;;AAAA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAC1C,MAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ,CAD0C,CAE1C;;AAEA,MAAMC,IAAI,GAAGJ,OAAO,CAAC,CAAD,CAApB,CAJ0C,CAK3C;;AACKK,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC;;AACA,OAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC7BF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,CAArB;AACA,QAAME,QAAQ,GAAGL,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAjB;AACA,QAAMG,MAAM,GAAGN,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAf;AACA,QAAMI,aAAa,GAAGP,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,CAAtB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,QAA5B;;AAEA,SAAK,IAAIG,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,MAAM,CAACF,MAAvB,EAA+BI,CAAC,EAAhC,EAAmC;AAC/BP,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,CAArB;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAGX,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWK,CAAX,EAAc,CAAd,KAAkB,KAArB,EAA2B;AACvB;AACA,aAAKI,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACZ,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWK,CAAX,EAAc,CAAd,EAAiBJ,MAA7B,EAAqCQ,CAAC,EAAtC,EAAyC;AAErCH,UAAAA,SAAS,CAACI,IAAV,CAAeb,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWK,CAAX,EAAc,CAAd,EAAiBI,CAAjB,EAAoB,CAApB,CAAf;AACAF,UAAAA,YAAY,CAACG,IAAb,CAAkBb,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWK,CAAX,EAAc,CAAd,EAAiBI,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAlB;AACAD,UAAAA,OAAO,CAACE,IAAR,CAAab,IAAI,CAACG,CAAD,CAAJ,CAAQ,CAAR,EAAWK,CAAX,EAAc,CAAd,EAAiBI,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAb;AACH;AACJ;;AACDX,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CG,QAA1C;AACAP,MAAAA,KAAK,CAACgB,GAAN,CAAUT,QAAV,EAAoB,CAACI,SAAD,EAAYC,YAAZ,EAA0BC,OAA1B,EAAmCJ,aAAnC,CAApB;AACH,KAvB4B,CAyB7B;;AACH;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB;AACA,MAAMiB,IAAI,GAAGnB,OAAO,CAAC,CAAD,CAApB;AACA,MAAMoB,iBAAiB,GAAGD,IAAI,CAAClB,QAAD,CAA9B;AACA,MAAMoB,aAAa,GAAGnB,KAAK,CAACoB,GAAN,CAAUF,iBAAV,CAAtB;AAEAf,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCe,aAAjC;AAEA;;;;;;;;AAQR;;;;;AAKI,SAAO,IAAP;AACH,CAvDD;;AAyDAE,MAAM,CAACC,OAAP,GAAiBzB,cAAjB","sourcesContent":["import store from 'store-js';\n\nconst change_format2 = (allList, selected) => {\n    let myMap = new Map();\n    //console.log(\"all list is \", alllist)\n    \n    const list = allList[1]\n   // try{\n        console.log(\"list in format is \", list)\n        for (var i=0; i<list.length; i++){\n            console.log(\"i is \", i)\n            const currency = list[i][0]\n            const detail = list[i][3]\n            const current_level = list[i][2]\n            console.log(\"currency is \", currency)\n\n            for (var j=0; j<detail.length; j++){\n                console.log(\"j is \", j)\n                var date_list = []\n                var revenue_list = []\n                var fx_list = []\n                if(list[i][3][j][0]=='all'){\n                    //console.log('llist[i][3][j] is ', list[i][3][j])\n                    for (k=0; k<list[i][3][j][1].length; k++){\n                        \n                        date_list.push(list[i][3][j][1][k][0])\n                        revenue_list.push(list[i][3][j][1][k][1][0])\n                        fx_list.push(list[i][3][j][1][k][1][1])\n                    }\n                }\n                console.log(\"arrived here, currency is \", currency)\n                myMap.set(currency, [date_list, revenue_list, fx_list, current_level])\n            }\n            \n            //myMap.set(list[i][0],\n        }\n        console.log(\"myMap is \", myMap)\n        const tabs = allList[0]\n        const selected_currency = tabs[selected]\n        const selected_data = myMap.get(selected_currency)\n\n        console.log(\"selected data is \", selected_data)\n\n        /*\n        console.log(\"date is \", selected_data[0])\n        console.log(\"price is \", selected_data[1])\n        console.log(\"exchange_rate is \", selected_data[2])\n\n        store.set('date', selected_data[0])\n        store.set('price', selected_data[1])\n        store.set('exchange_rate', selected_data[2])*/\n/*}\ncatch(err) {\n    console.log(\"error\")\n}*/\n    \n    return null\n}\n\nmodule.exports = change_format2; "]},"metadata":{},"sourceType":"script"}