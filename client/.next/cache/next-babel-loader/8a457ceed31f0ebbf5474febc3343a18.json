{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../style/style.css';\nimport { AppProvider, Page, Card, DataTable, Button, ResourcePicker, Layout } from '@shopify/polaris';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport { FaLock } from 'react-icons/fa';\nimport store from 'store-js';\nimport Tab from '../components/Currency_Tabs';\nimport React, { useState, useCallback, OptionList, setSelected } from 'react';\n\nlet request_bid_ask = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js');\n\nimport { HorizontalBar, Line, Doughnut, Bar } from 'react-chartjs-2';\nconst rows = [['GBP', 1.3, 1.2, 100, '15']];\nvar lineChartData = {\n  labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n  datasets: [{\n    type: \"bar\",\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [1, 2, 3, 4, 3, 2, 4, 3, 1],\n    spanGaps: false\n  }, {\n    type: \"line\",\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [7, 7.1005, 7.0906, 7.0879, 7.1372, 7.1542, 7.1257, 7.1673, 7.1562],\n    spanGaps: false\n  }]\n};\nvar lineChartOptions = {\n  maintainAspectRatio: false,\n  tooltips: {\n    enabled: true\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: false\n      },\n      scaleLabel: {\n        display: false,\n        labelString: 'USD/CNH',\n        fontSize: 20\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0)\"\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 50,\n      top: 0,\n      bottom: 0\n    }\n  }\n};\nconst barChartData = {\n  labels: ['China - Monthly CPI', 'US - Monthly CPI', 'China - Quarterly GDP', 'US - Aaa Corporate Bonds', 'US - S&P 500'],\n  datasets: [{\n    backgroundColor: [\"#ffa41b\", '#005082', '#ff5733', '#708160', '#00a8cc'],\n    borderColor: 'rgba(0, 0, 0, 0)',\n    borderWidth: 2,\n    data: [0.65, 0.50, 0.47, 0.39, 0.37]\n  }]\n};\nconst barChartOptions = {\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [{\n      ticks: {\n        min: 0,\n        max: 1,\n        callback: function (value) {\n          return value;\n        }\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Correlation Coefficient (Absolute Value)\"\n      }\n    }],\n    yAxes: [{\n      barPercentage: 0.3,\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0)\"\n      }\n    }]\n  }\n};\nconst doughnutChartData = {\n  labels: ['USD/CNH will trend lower', 'USD/CNH will trend higher'],\n  datasets: [{\n    backgroundColor: [\"#FF6D2D\", \"#45853C\"],\n    borderColor: 'rgba(0, 0, 0, 0)',\n    borderWidth: 2,\n    data: [28, 72]\n  }]\n};\nconst doughnutChartOptions = {\n  maintainAspectRatio: false,\n  cutoutPercentage: 70,\n  tooltips: {\n    enabled: false\n  },\n  legend: {\n    display: false\n  },\n  pieceLabel: {\n    render: 'value' + '%',\n    fontColor: \"white\"\n  }\n}; // Function\n\nclass dashboard extends React.Component {\n  // Initialize the state\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", () => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/getList').then(res => res.json()).then(list => this.setState({\n        list\n      }));\n      console.log(\"3\");\n    });\n\n    this.state = {\n      list: [],\n      open_currency: false,\n      rows: [],\n      active: true,\n      selected: []\n    };\n    console.log(\"1\");\n  } // Fetch the list on first mount\n\n\n  componentDidMount() {\n    this.getList();\n    console.log(\"2\");\n  } // Retrieves the list of items from the Express app\n\n\n  render() {\n    const {\n      list,\n      open_currency\n    } = this.state;\n    return __jsx(Layout, null, __jsx(Tab, null), __jsx(Layout.Section, {\n      oneHalf: true\n    }, __jsx(Card, null, __jsx(Doughnut, {\n      height: \"200vh\",\n      data: doughnutChartData,\n      options: doughnutChartOptions\n    })), __jsx(Card, null, __jsx(Doughnut, {\n      height: \"200vh\",\n      data: doughnutChartData,\n      options: doughnutChartOptions\n    }))), __jsx(Layout.Section, {\n      oneHalf: true\n    }, __jsx(Card, null, __jsx(\"p\", null, \"Products whose sales sensitive to foreign prices\"), __jsx(HorizontalBar, {\n      height: \"170vh\",\n      data: barChartData,\n      options: barChartOptions\n    }))), __jsx(Layout.Section, null, __jsx(Card, null, __jsx(\"p\", null, \"Sales and product foreign prices\"), __jsx(Bar, {\n      height: \"300vh\",\n      data: lineChartData,\n      options: lineChartOptions\n    }))));\n  }\n\n}\n\nexport default dashboard;","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/pages/dashboard.js"],"names":["AppProvider","Page","Card","DataTable","Button","ResourcePicker","Layout","translations","FaLock","store","Tab","React","useState","useCallback","OptionList","setSelected","request_bid_ask","require","HorizontalBar","Line","Doughnut","Bar","rows","lineChartData","labels","datasets","type","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","spanGaps","lineChartOptions","maintainAspectRatio","tooltips","enabled","legend","display","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","fontSize","xAxes","gridLines","color","layout","padding","left","right","top","bottom","barChartData","borderWidth","barChartOptions","min","max","callback","value","barPercentage","doughnutChartData","doughnutChartOptions","cutoutPercentage","pieceLabel","render","fontColor","dashboard","Component","constructor","props","fetch","then","res","json","list","setState","console","log","state","open_currency","active","selected","componentDidMount","getList"],"mappings":"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","sourcesContent":["import '../style/style.css'\nimport { AppProvider, Page, Card, DataTable, Button, ResourcePicker, Layout } from '@shopify/polaris';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport {FaLock } from 'react-icons/fa';\nimport store from 'store-js';\nimport Tab from '../components/Currency_Tabs'\nimport React, {useState, useCallback, OptionList, setSelected} from 'react';\nlet request_bid_ask = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js')\nimport {HorizontalBar, Line, Doughnut, Bar} from 'react-chartjs-2';\n\n\n\nconst rows = [['GBP', 1.3, 1.2, 100, '15']]\n\n\n\nvar lineChartData = {\n    labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n    datasets: [{\n      type: \"bar\",\n      label: \"real\",\n      fill: false,\n      lineTension: 0,\n      backgroundColor: \"rgb(1, 2, 58)\",\n      borderColor: \"rgb(1, 2, 58)\",\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: \"rgb(1, 2, 58)\",\n      pointBackgroundColor: \"rgb(1, 2, 58)\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10,\n      // notice the gap in the data and the spanGaps: false\n      data: [1, 2, 3, 4, 3, 2, 4, 3, 1],\n      spanGaps: false,\n      },\n      {\n        type: \"line\",\n        label: \"real\",\n        fill: false,\n        lineTension: 0,\n        backgroundColor: \"rgb(1, 2, 58)\",\n        borderColor: \"rgb(1, 2, 58)\",\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: \"rgb(1, 2, 58)\",\n        pointBackgroundColor: \"rgb(1, 2, 58)\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n        pointHoverBorderColor: \"rgb(1, 2, 58)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 4,\n        pointHitRadius: 10,\n        // notice the gap in the data and the spanGaps: false\n        data: [7, 7.1005, 7.0906, 7.0879, 7.1372, 7.1542, 7.1257, 7.1673, 7.1562],\n        spanGaps: false,\n        }\n  \n    ]\n  };\n  \n  var lineChartOptions = {\n    maintainAspectRatio: false,\n    tooltips:{\n      enabled:true,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n              yAxes: [{\n                  ticks: {\n                      beginAtZero:false\n                  },\n                  scaleLabel: {\n                       display: false,\n                       labelString: 'USD/CNH',\n                       fontSize: 20 \n                    }\n              }],\n              xAxes: [{\n                gridLines: {\n                  color: \"rgba(0, 0, 0, 0)\",\n              }\n              },],            \n          },\n          layout: {\n            padding: {\n                left: 0,\n                right: 50,\n                top: 0,\n                bottom: 0\n            }\n        }   \n  };\n\n\n\n  const barChartData = {\n    labels: ['China - Monthly CPI', 'US - Monthly CPI', 'China - Quarterly GDP',\n             'US - Aaa Corporate Bonds', 'US - S&P 500'],\n    datasets: [\n      {\n        backgroundColor: [\"#ffa41b\", '#005082','#ff5733','#708160','#00a8cc'],\n        borderColor: 'rgba(0, 0, 0, 0)',\n        borderWidth: 2,\n        data: [0.65, 0.50, 0.47, 0.39, 0.37]\n      }\n    ],\n  };\n    \n  const barChartOptions = {\n  \n    legend: {\n              display: false,\n            },\n  \n    scales: {\n              xAxes: [{\n                ticks: {\n                  min: 0,\n                  max: 1,\n                  callback: function(value) {\n                      return value\n                  }\n                },\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Correlation Coefficient (Absolute Value)\"\n                }\n              },],\n              yAxes: [{\n                barPercentage: 0.3,\n                gridLines: {\n                  color: \"rgba(0, 0, 0, 0)\",\n              }\n              },],\n            },\n      \n    };\n\n    const doughnutChartData = {\n        labels: ['USD/CNH will trend lower', 'USD/CNH will trend higher'],\n        datasets: [\n          {\n            backgroundColor: [\"#FF6D2D\",\"#45853C\"],\n            borderColor: 'rgba(0, 0, 0, 0)',\n            borderWidth: 2,\n            data: [28, 72],\n      \n          }\n        ],\n      };\n        \n      const doughnutChartOptions = {\n        maintainAspectRatio: false,\n        cutoutPercentage:70,\n        tooltips:{\n          enabled:false,\n        },\n        legend: {\n                  display: false,\n                },\n        pieceLabel: {\n          render: 'value' + '%',\n          fontColor: \"white\",\n        }\n        };\n\n\n// Function\n\nclass dashboard extends React.Component {\n    // Initialize the state\n    constructor(props){\n      super(props);\n      this.state = {\n        list: [],\n        open_currency: false,\n        rows:[],\n        active: true,\n        selected: []\n      }\n      console.log(\"1\")\n    }\n    // Fetch the list on first mount\n    componentDidMount() {\n      this.getList();\n      console.log(\"2\")\n    }\n  \n    // Retrieves the list of items from the Express app\n    getList = () => {\n      //fetch('/api/getList')\n      //fetch('https://ebb450c1.ngrok.io')\n      fetch('http://localhost:5000/api/getList')\n      .then(res => res.json())\n      .then(list => this.setState({ list }))\n      console.log(\"3\")\n    }  \n\n\n  render() {\n    const { list, open_currency } = this.state;\n    \n    return (\n    <Layout>\n        <Tab/>\n        <Layout.Section oneHalf>\n        <Card>\n            <Doughnut\n                height=\"200vh\"\n                data={doughnutChartData}\n                options={doughnutChartOptions}\n            />\n\n            </Card>\n            <Card>\n            <Doughnut\n                height=\"200vh\"\n                data={doughnutChartData}\n                options={doughnutChartOptions}\n            />\n\n        </Card>\n        </Layout.Section>\n        <Layout.Section oneHalf>\n        <Card>\n            <p>Products whose sales sensitive to foreign prices</p>\n            <HorizontalBar \n                height=\"170vh\"\n                data={barChartData}\n                options={barChartOptions}\n            />\n            </Card>\n\n        </Layout.Section>\n        <Layout.Section>\n        <Card>\n            <p>Sales and product foreign prices</p>\n            <Bar \n            height=\"300vh\"\n            data={lineChartData}\n            options={lineChartOptions}\n            />\n        </Card>\n        </Layout.Section>\n    </Layout>\n\n    \n    );\n\n\n\n\n  }\n\n\n}\n\n\n\n export default dashboard;"]},"metadata":{},"sourceType":"module"}