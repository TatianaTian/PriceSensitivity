{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Button, Modal, Card, OptionList, Form, FormLayout, TextField } from '@shopify/polaris';\nimport { FaLock } from 'react-icons/fa'; //var mongo = require('./database/mongodb')\n\nvar close_trade = require('./trade/trades/src/close_trades');\n\nvar place_trade = require('./trade/trades/src/place_trades');\n\nvar request_bid = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js');\n\nlet store = require('/Users/tatianatian/Desktop/Startup/shopify_app/node_modules/store-js/dist/store.legacy');\n\nexport default function ModalExample() {\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState([]);\n  const {\n    0: active2,\n    1: setActive2\n  } = useState(true);\n  const {\n    0: url,\n    1: setUrl\n  } = useState('');\n  const handleSubmit = useCallback(_event => setUrl(''), []);\n  const handleUrlChange = useCallback(value => setUrl(value), []);\n  const handleChange = useCallback(() => setActive(!active), [active]);\n  const handleChange2 = useCallback(() => setActive2(!active2), [active2]);\n\n  const handleChange3 = () => {\n    setActive2(!active2), [active2];\n    request_bid(\"GBP\"); //store.get('user')\n\n    console.log(\"at handleChange3\");\n    console.log(\"store get user is \", store.get('user'));\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      height: '500px'\n    }\n  }, __jsx(Button, {\n    onClick: handleChange\n  }, __jsx(FaLock, null), \" Add Currency\"), active2 ? __jsx(Modal, {\n    open: active,\n    onClose: handleChange,\n    title: \"Pick Currency\",\n    primaryAction: {\n      content: 'Next Step',\n      onAction: handleChange3\n    },\n    secondaryActions: [{\n      content: 'Cancel',\n      onAction: handleChange\n    }]\n  }, __jsx(Card, null, __jsx(OptionList, {\n    onChange: setSelected,\n    options: [{\n      value: 'AUD',\n      label: 'Australian Dollar'\n    }, {\n      value: 'NZD',\n      label: 'New Zealand Dollar'\n    }, {\n      value: 'JPY',\n      label: 'Japanese Yen'\n    }],\n    selected: selected\n  }), __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(FormLayout, null, __jsx(TextField, {\n    value: url,\n    onChange: handleUrlChange,\n    label: \"Amount in buyer's currency\",\n    type: \"amount\"\n  }), __jsx(Button, {\n    submit: true\n  }, \"Submit\"))))) : __jsx(Modal, {\n    open: active,\n    onClose: handleChange,\n    title: \"Guaranteed Rate\",\n    primaryAction: {\n      content: 'Get the Insurance',\n      onAction: handleChange\n    }\n  }, __jsx(Card, null, __jsx(\"p\", null, \"1 USD = 1.23 GBP\"))));\n}","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/components/Modal_Currency.js"],"names":["React","useCallback","useState","Button","Modal","Card","OptionList","Form","FormLayout","TextField","FaLock","close_trade","require","place_trade","request_bid","store","ModalExample","active","setActive","selected","setSelected","active2","setActive2","url","setUrl","handleSubmit","_event","handleUrlChange","value","handleChange","handleChange2","handleChange3","console","log","get","height","content","onAction","label"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Button, Modal, Card, OptionList, Form, FormLayout, TextField} from '@shopify/polaris';\nimport {FaLock } from 'react-icons/fa';\n//var mongo = require('./database/mongodb')\nvar close_trade = require('./trade/trades/src/close_trades')\nvar place_trade = require('./trade/trades/src/place_trades')\nvar request_bid = require('/Users/tatianatian/Desktop/Startup/shopify_front_back_end/trade/trades/src/request_bid_ask.js')\nlet store = require('/Users/tatianatian/Desktop/Startup/shopify_app/node_modules/store-js/dist/store.legacy')\n\n\nexport default function ModalExample() {\n  const [active, setActive] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [active2, setActive2] = useState(true);\n\n  const [url, setUrl] = useState('');\n  const handleSubmit = useCallback((_event) => setUrl(''), []);\n  const handleUrlChange = useCallback((value) => setUrl(value), []);\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n  const handleChange2 = useCallback(() => setActive2(!active2), [active2]);\n\n  const handleChange3 =()=>{\n    setActive2(!active2), [active2]\n    request_bid(\"GBP\")\n    //store.get('user')\n    console.log(\"at handleChange3\")\n    console.log(\"store get user is \", store.get('user'))\n    \n\n  }\n\n  \n  return (\n    <div style={{height: '500px'}}>\n      <Button onClick={handleChange}><FaLock/> Add Currency</Button>\n\n      {active2 ? (\n      <Modal\n        open={active}\n        onClose={handleChange}\n        title=\"Pick Currency\"\n        primaryAction={{\n          content: 'Next Step',\n          onAction: handleChange3,\n        }}\n        secondaryActions={[\n          {\n            content: 'Cancel',\n            onAction: handleChange,\n          },\n        ]}\n      >    \n           <Card>\n              <OptionList\n                  onChange={setSelected}\n                  options={[\n                  {value: 'AUD', label: 'Australian Dollar'},\n                  {value: 'NZD', label: 'New Zealand Dollar'},\n                  {value: 'JPY', label: 'Japanese Yen'},\n                  ]}\n                  selected={selected}\n              />\n\n              <Form noValidate onSubmit={handleSubmit}>\n                <FormLayout>\n                  <TextField\n                    value={url}\n                    onChange={handleUrlChange}\n                    label=\"Amount in buyer's currency\"\n                    type=\"amount\"\n                  />\n\n                  <Button submit>Submit</Button>\n                </FormLayout>\n              </Form>\n\n\n          </Card>\n      </Modal>  ) : (\n\n        <Modal\n        open={active}\n        onClose={handleChange}\n        title=\"Guaranteed Rate\"\n        primaryAction={{\n          content: 'Get the Insurance',\n          onAction: handleChange,\n        }}\n        >    \n          <Card>\n\n            <p>1 USD = 1.23 GBP</p>\n          </Card>\n        </Modal>\n      \n      )}\n\n    </div>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}