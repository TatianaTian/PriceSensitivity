{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Card, Tabs, Layout } from '@shopify/polaris';\nimport { HorizontalBar, Line, Doughnut, Bar } from 'react-chartjs-2';\nvar doughnutChartData = {\n  labels: ['USD/CNH will trend lower', 'USD/CNH will trend higher'],\n  datasets: [{\n    backgroundColor: [\"#FF6D2D\", \"#45853C\"],\n    borderColor: 'rgba(0, 0, 0, 0)',\n    borderWidth: 2,\n    data: [28, 72]\n  }]\n};\nvar doughnutChartOptions = {\n  maintainAspectRatio: true,\n  cutoutPercentage: 70,\n  tooltips: {\n    enabled: false\n  },\n  legend: {\n    display: false\n  },\n  pieceLabel: {\n    render: 'value' + '%',\n    fontColor: \"white\"\n  }\n};\nvar lineChartData = {\n  labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n  datasets: [{\n    type: \"bar\",\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [1, 2, 3, 4, 3, 2, 4, 3, 1],\n    spanGaps: false\n  }, {\n    type: \"line\",\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [7, 7.1005, 7.0906, 7.0879, 7.1372, 7.1542, 7.1257, 7.1673, 7.1562],\n    spanGaps: false\n  }]\n};\nvar lineChartOptions = {\n  maintainAspectRatio: true,\n  tooltips: {\n    enabled: true\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero: false\n      },\n      scaleLabel: {\n        display: false,\n        labelString: 'USD/CNH',\n        fontSize: 20\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0)\"\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 50,\n      top: 0,\n      bottom: 0\n    }\n  }\n};\nvar barChartData = {\n  labels: ['China - Monthly CPI', 'US - Monthly CPI', 'China - Quarterly GDP', 'US - Aaa Corporate Bonds', 'US - S&P 500'],\n  datasets: [{\n    backgroundColor: [\"#ffa41b\", '#005082', '#ff5733', '#708160', '#00a8cc'],\n    borderColor: 'rgba(0, 0, 0, 0)',\n    borderWidth: 2,\n    data: [0.65, 0.50, 0.47, 0.39, 0.37]\n  }]\n};\nvar barChartOptions = {\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [{\n      ticks: {\n        min: 0,\n        max: 1,\n        callback: function callback(value) {\n          return value;\n        }\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Correlation Coefficient (Absolute Value)\"\n      }\n    }],\n    yAxes: [{\n      barPercentage: 0.3,\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0)\"\n      }\n    }]\n  }\n};\nexport default function Tab() {\n  var _useState = useState(0),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleTabChange = useCallback(function (selectedTabIndex) {\n    return setSelected(selectedTabIndex);\n  }, []);\n  var tabs = [{\n    id: 'all-customers',\n    content: 'All',\n    accessibilityLabel: 'All customers',\n    panelID: 'all-customers-content'\n  }, {\n    id: 'accepts-marketing',\n    content: 'Accepts marketing',\n    panelID: 'accepts-marketing-content'\n  }, {\n    id: 'repeat-customers',\n    content: 'Repeat customers',\n    panelID: 'repeat-customers-content'\n  }, {\n    id: 'prospects',\n    content: 'Prospects',\n    panelID: 'prospects-content'\n  }];\n  return __jsx(Card, null, __jsx(Tabs, {\n    tabs: tabs,\n    selected: selected,\n    onSelect: handleTabChange\n  }, __jsx(Layout, null, __jsx(Layout.Section, {\n    oneThird: true\n  }, __jsx(Doughnut, {\n    height: \"100vh\",\n    data: doughnutChartData,\n    options: doughnutChartOptions\n  })), __jsx(Layout.Section, {\n    oneThird: true\n  }, __jsx(Doughnut, {\n    height: \"100vh\",\n    data: doughnutChartData,\n    options: doughnutChartOptions\n  })), __jsx(Layout.Section, {\n    oneThird: true\n  }, __jsx(HorizontalBar, {\n    height: \"170vh\",\n    data: barChartData,\n    options: barChartOptions\n  })), __jsx(Layout.Section, {\n    oneThird: true\n  }, __jsx(Bar, {\n    height: \"150vh\",\n    data: lineChartData,\n    options: lineChartOptions\n  })))));\n}","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/components/Currency_Tabs.js"],"names":["React","useCallback","useState","Card","Tabs","Layout","HorizontalBar","Line","Doughnut","Bar","doughnutChartData","labels","datasets","backgroundColor","borderColor","borderWidth","data","doughnutChartOptions","maintainAspectRatio","cutoutPercentage","tooltips","enabled","legend","display","pieceLabel","render","fontColor","lineChartData","type","label","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","lineChartOptions","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","fontSize","xAxes","gridLines","color","layout","padding","left","right","top","bottom","barChartData","barChartOptions","min","max","callback","value","barPercentage","Tab","selected","setSelected","handleTabChange","selectedTabIndex","tabs","id","content","accessibilityLabel","panelID"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Card, Tabs, Layout} from '@shopify/polaris';\nimport {HorizontalBar, Line, Doughnut, Bar} from 'react-chartjs-2';\n\n\nconst doughnutChartData = {\n  labels: ['USD/CNH will trend lower', 'USD/CNH will trend higher'],\n  datasets: [\n    {\n      backgroundColor: [\"#FF6D2D\",\"#45853C\"],\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderWidth: 2,\n      data: [28, 72],\n\n    }\n  ],\n};\n  \nconst doughnutChartOptions = {\n  maintainAspectRatio: true,\n  cutoutPercentage:70,\n  tooltips:{\n    enabled:false,\n  },\n  legend: {\n            display: false,\n          },\n  pieceLabel: {\n    render: 'value' + '%',\n    fontColor: \"white\",\n  }\n  };\n\nvar lineChartData = {\n  labels: ['04-19', '04-22', '04-25', '04-28', '05-01', '05-04', '05-07', '05-10', '05-13'],\n  datasets: [{\n    type: \"bar\",\n    label: \"real\",\n    fill: false,\n    lineTension: 0,\n    backgroundColor: \"rgb(1, 2, 58)\",\n    borderColor: \"rgb(1, 2, 58)\",\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: \"rgb(1, 2, 58)\",\n    pointBackgroundColor: \"rgb(1, 2, 58)\",\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderColor: \"rgb(1, 2, 58)\",\n    pointHoverBorderWidth: 2,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    // notice the gap in the data and the spanGaps: false\n    data: [1, 2, 3, 4, 3, 2, 4, 3, 1],\n    spanGaps: false,\n    },\n    {\n      type: \"line\",\n      label: \"real\",\n      fill: false,\n      lineTension: 0,\n      backgroundColor: \"rgb(1, 2, 58)\",\n      borderColor: \"rgb(1, 2, 58)\",\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: \"rgb(1, 2, 58)\",\n      pointBackgroundColor: \"rgb(1, 2, 58)\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderColor: \"rgb(1, 2, 58)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 4,\n      pointHitRadius: 10,\n      // notice the gap in the data and the spanGaps: false\n      data: [7, 7.1005, 7.0906, 7.0879, 7.1372, 7.1542, 7.1257, 7.1673, 7.1562],\n      spanGaps: false,\n      }\n\n  ]\n  };\n\nvar lineChartOptions = {\n  maintainAspectRatio: true,\n  tooltips:{\n    enabled:true,\n  },\n  legend: {\n    display: false,\n  },\n  scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:false\n                },\n                scaleLabel: {\n                      display: false,\n                      labelString: 'USD/CNH',\n                      fontSize: 20 \n                  }\n            }],\n            xAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n            }\n            },],            \n        },\n        layout: {\n          padding: {\n              left: 0,\n              right: 50,\n              top: 0,\n              bottom: 0\n          }\n      }   \n};\n\n\n\nconst barChartData = {\n  labels: ['China - Monthly CPI', 'US - Monthly CPI', 'China - Quarterly GDP',\n            'US - Aaa Corporate Bonds', 'US - S&P 500'],\n  datasets: [\n    {\n      backgroundColor: [\"#ffa41b\", '#005082','#ff5733','#708160','#00a8cc'],\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderWidth: 2,\n      data: [0.65, 0.50, 0.47, 0.39, 0.37]\n    }\n  ],\n};\n\nconst barChartOptions = {\n\n  legend: {\n            display: false,\n          },\n\n  scales: {\n            xAxes: [{\n              ticks: {\n                min: 0,\n                max: 1,\n                callback: function(value) {\n                    return value\n                }\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Correlation Coefficient (Absolute Value)\"\n              }\n            },],\n            yAxes: [{\n              barPercentage: 0.3,\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n            }\n            },],\n          },\n  \n};\n\nexport default function Tab() {\n    const [selected, setSelected] = useState(0);\n  \n    const handleTabChange = useCallback(\n      (selectedTabIndex) => setSelected(selectedTabIndex),\n      [],\n    );\n  \n    const tabs = [\n      {\n        id: 'all-customers',\n        content: 'All',\n        accessibilityLabel: 'All customers',\n        panelID: 'all-customers-content',\n      },\n      {\n        id: 'accepts-marketing',\n        content: 'Accepts marketing',\n        panelID: 'accepts-marketing-content',\n      },\n      {\n        id: 'repeat-customers',\n        content: 'Repeat customers',\n        panelID: 'repeat-customers-content',\n      },\n      {\n        id: 'prospects',\n        content: 'Prospects',\n        panelID: 'prospects-content',\n      },\n    ];\n  \n    return (\n      <Card>\n        <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\n        <Layout>\n          <Layout.Section oneThird>\n            \n              <Doughnut\n                  height=\"100vh\"\n                  data={doughnutChartData}\n                  options={doughnutChartOptions}\n              />\n\n\n\n\n            \n          </Layout.Section>\n          <Layout.Section oneThird>\n          <Doughnut\n                  height=\"100vh\"\n                  data={doughnutChartData}\n                  options={doughnutChartOptions}\n              />\n\n\n\n          </Layout.Section>\n          <Layout.Section oneThird>\n            <HorizontalBar \n                  height=\"170vh\"\n                  data={barChartData}\n                  options={barChartOptions}\n                />\n\n          </Layout.Section>\n          <Layout.Section oneThird>\n          <Bar \n                height=\"150vh\"\n                data={lineChartData}\n                options={lineChartOptions}\n              />\n              </Layout.Section>\n        </Layout>\n        \n        </Tabs>\n      </Card>\n    );\n  }\n\n"]},"metadata":{},"sourceType":"module"}