{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Card, Layout, DisplayText, TextStyle, DataTable } from '@shopify/polaris';\nimport store from 'store-js';\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\nimport price_sensitive_market from \"../functions/price_sensitive_market\";\n\nvar country_code_to_name = require('../functions/country_code_to_name'); //import france_flag from '../images/france_flag';\n\n\nexport default function Main_data(props) {\n  var _useState = useState(\"\"),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var currency_list = price_sensitive_market(props.tabs, props.maps);\n  console.log(\"currency_list is\", currency_list);\n  var rows_price_sensitive = [//['Emerald Silk Gown', '$875.00'],\n    //['Mauve Cashmere Scarf', '$230.00'],\n  ];\n  var rows_price_range = [//['Emerald Silk Gown', '$875.00'],\n    //['Mauve Cashmere Scarf', '$230.00'],\n  ];\n  var countryListMap = props.countryListMap;\n  var percChangeMap = props.perc_change_map;\n  console.log(\"countryListMap is\", countryListMap);\n  console.log(\"percChangeMap is\", percChangeMap); // price elasticity\n\n  for (var i = 0; i < currency_list.length; i++) {\n    var currency = currency_list[i];\n    var country = countryListMap.get(currency);\n    console.log(\"currency is\", currency);\n    console.log(\"country is\", country);\n    var country_string = '';\n\n    for (var j = 0; j < country.length; j++) {\n      if (country_code_to_name(country[j]) != undefined) {\n        country_string += country_code_to_name(country[j]) + ', ';\n      }\n    }\n\n    var country_string = country_string.substring(0, country_string.length - 2);\n    console.log(\"country_string is\", country_string);\n    rows_price_sensitive.push([currency, country_string]);\n    console.log(\"percChangeMap.get(currency_list[i]) is \", percChangeMap.get(currency_list[i]));\n    var perc = Math.round(percChangeMap.get(currency_list[i]) * 10000) / 100 + '%';\n    rows_price_range.push([currency, perc]);\n  }\n\n  var rows_price_change = [['EUR', '12%'], ['CAD', '15%'], ['GBP', '17%']];\n  var rows_price_volatie = [['EUR', 'France, Italy, Germany'], ['CAD', 'Canada'][('GBP', 'UK')]];\n  return __jsx(Layout, null, __jsx(Layout.Section, {\n    oneThird: true\n  }, __jsx(Card, {\n    title: \"Price Range Analyzed\",\n    sectioned: true\n  }, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text'],\n    headings: ['Currency', 'Price Moving % Range'],\n    rows: rows_price_range\n  }))), __jsx(Layout.Section, {\n    oneThird: true\n  }, __jsx(Card, {\n    title: \"Your Most Price Sentitive Markets\",\n    sectioned: true\n  }, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text'],\n    headings: ['Currency', 'Price Sensitive Country'],\n    rows: rows_price_sensitive\n  }))), __jsx(Layout.Section, {\n    oneThird: true\n  }, __jsx(Card, {\n    title: \"Your Most Price Volatile Markets\",\n    sectioned: true\n  }, __jsx(DataTable, {\n    columnContentTypes: ['text', 'text'],\n    headings: ['Currency', 'Price Volatile Country'],\n    rows: rows_price_sensitive\n  }))), __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Price Change Magnitue\",\n    sectioned: true\n  }, __jsx(MapChart, {\n    setTooltipContent: setContent\n  }), __jsx(ReactTooltip, null, content))));\n}\n\nfunction displayBlock(currency) {\n  render({\n    currency: currency\n  });\n}","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/shopify_front_back_end/client/components/Main_data.js"],"names":["React","useState","Card","Layout","DisplayText","TextStyle","DataTable","store","MapChart","ReactTooltip","price_sensitive_market","country_code_to_name","require","Main_data","props","content","setContent","currency_list","tabs","maps","console","log","rows_price_sensitive","rows_price_range","countryListMap","percChangeMap","perc_change_map","i","length","currency","country","get","country_string","j","undefined","substring","push","perc","Math","round","rows_price_change","rows_price_volatie","displayBlock","render"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\nimport {Card, Layout, DisplayText, TextStyle, DataTable} from '@shopify/polaris';\nimport store from 'store-js';\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\nimport price_sensitive_market from \"../functions/price_sensitive_market\";\nconst country_code_to_name = require('../functions/country_code_to_name')\n//import france_flag from '../images/france_flag';\n\n\n\nexport default function Main_data(props) {  \n    const [content, setContent] = useState(\"\");\n    const currency_list = price_sensitive_market(props.tabs, props.maps)\n\n    console.log(\"currency_list is\", currency_list)\n\n    var rows_price_sensitive = [\n      //['Emerald Silk Gown', '$875.00'],\n      //['Mauve Cashmere Scarf', '$230.00'],\n    ];\n\n    var rows_price_range = [\n      //['Emerald Silk Gown', '$875.00'],\n      //['Mauve Cashmere Scarf', '$230.00'],\n    ];\n\n    const countryListMap = props.countryListMap\n    const percChangeMap = props.perc_change_map\n\n    console.log(\"countryListMap is\", countryListMap)\n    console.log(\"percChangeMap is\", percChangeMap)\n\n    // price elasticity\n    for (var i=0; i<currency_list.length; i++){\n      const currency = currency_list[i]\n      const country = countryListMap.get(currency)\n\n      console.log(\"currency is\", currency)\n      console.log(\"country is\", country)\n\n      var country_string =''\n      for (var j=0; j<country.length; j++){\n        if (country_code_to_name(country[j])!= undefined){\n          country_string += country_code_to_name(country[j])+', '\n        }\n      }\n      var country_string = country_string.substring(0, country_string.length-2);\n\n      console.log(\"country_string is\", country_string)\n      rows_price_sensitive.push([currency, country_string])\n      console.log(\"percChangeMap.get(currency_list[i]) is \", percChangeMap.get(currency_list[i]))\n      const perc = Math.round(percChangeMap.get(currency_list[i])*10000)/100 + '%'\n      rows_price_range.push([currency, perc])\n    }\n\n \n\n\n    \n    var rows_price_change = [\n      ['EUR','12%'],\n      ['CAD','15%'],\n      ['GBP','17%']\n    ]\n\n    var rows_price_volatie = [\n      ['EUR','France, Italy, Germany'],\n      ['CAD','Canada']\n      ['GBP','UK']\n    ]\n    \n\n    return (\n    \n          <Layout>\n\n\n              <Layout.Section oneThird>\n            \n              <Card title=\"Price Range Analyzed\" sectioned>\n              <DataTable\n                  columnContentTypes={[\n                    'text',\n                    'text',\n                  ]}\n                  headings={[\n                    'Currency',\n                    'Price Moving % Range',\n                  ]}\n                  rows={rows_price_range}\n                />\n\n                </Card>\n                </Layout.Section>\n                <Layout.Section oneThird>\n              <Card title=\"Your Most Price Sentitive Markets\" sectioned>\n              <DataTable\n                  columnContentTypes={[\n                    'text',\n                    'text',\n                  ]}\n                  headings={[\n                    'Currency',\n                    'Price Sensitive Country',\n                  ]}\n                  rows={rows_price_sensitive}\n                />\n                </Card>\n                </Layout.Section>\n                <Layout.Section oneThird>\n                <Card title=\"Your Most Price Volatile Markets\" sectioned>\n                <DataTable\n                  columnContentTypes={[\n                    'text',\n                    'text',\n                  ]}\n                  headings={[\n                    'Currency',\n                    'Price Volatile Country',\n                  ]}\n                  rows={rows_price_sensitive}\n                />\n                </Card>\n      \n              </Layout.Section>\n              <Layout.Section>\n              <Card title=\"Price Change Magnitue\" sectioned>\n            \n               <MapChart setTooltipContent={setContent} />\n               <ReactTooltip>{content}</ReactTooltip>  \n              </Card>\n             </Layout.Section>\n      \n          </Layout>\n\n\n    );\n\n  }\n\n  function displayBlock(currency) {\n    render(\n      {currency}\n    )\n     \n  }\n"]},"metadata":{},"sourceType":"module"}