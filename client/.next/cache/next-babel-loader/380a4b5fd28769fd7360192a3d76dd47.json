{"ast":null,"code":"var __jsx = React.createElement;\n\n/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\n\n/*\nimport React from 'react';\nimport {BrowserRouter, Switch} from 'react-router-dom';\nimport {Provider as AppBridgeProvider} from '@shopify/app-bridge-react';\n\nimport Routes from './Routes';\n\nexport default function MyApp() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <AppBridgeProvider\n        config={{\n          apiKey: '0f8ce556ea9c2404ba758d4332be0b68',\n          shopOrigin: 'haloy.myshopify.com',\n        }}\n      >\n        <Routes />\n      </AppBridgeProvider>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n*/\n// Initialize the state\n\n/*constructor(props){\n  super(props);\n  this.state = {\n    list: []\n  }\n  console.log(\"1\")\n}\n// Fetch the list on first mount\ncomponentDidMount() {\n  this.getList();\n  console.log(\"2\")\n}\n // Retrieves the list of items from the Express app\ngetList = () => {\n  fetch('/api/getList')\n  .then(res => res.json())\n  .then(list => this.setState({ list }))\n  console.log(\"3\")\n}  */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, ResourcePicker } from '@shopify/app-bridge-react';\n\nfunction MyApp() {\n  const config = {\n    apiKey: '12345',\n    shopOrigin: shopOrigin\n  };\n  return __jsx(Provider, {\n    config: config\n  }, __jsx(ResourcePicker, {\n    resourceType: \"Product\",\n    open: true\n  }));\n}\n\nconst root = document.createElement('div');\ndocument.body.appendChild(root);\nReactDOM.render(__jsx(MyApp, null), root);","map":{"version":3,"sources":["/Users/tatianatian/Desktop/Startup/backend/client/pages/index.js"],"names":["React","ReactDOM","Provider","ResourcePicker","MyApp","config","apiKey","shopOrigin","root","document","createElement","body","appendChild","render"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;;;;;;;;;;;;;;;;;;;;;;;;AAyBE;;AACA;;;;;;;;;;;;;;;;;;;AAqBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,2BAAvC;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,MAAM,GAAG;AAACC,IAAAA,MAAM,EAAE,OAAT;AAAkBC,IAAAA,UAAU,EAAEA;AAA9B,GAAf;AACA,SACE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEF;AAAlB,KACE,MAAC,cAAD;AAAgB,IAAA,YAAY,EAAC,SAA7B;AAAuC,IAAA,IAAI;AAA3C,IADF,CADF;AAKD;;AAED,MAAMG,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb;AACAD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,IAA1B;AACAP,QAAQ,CAACY,MAAT,CAAgB,MAAC,KAAD,OAAhB,EAA2BL,IAA3B","sourcesContent":["/*import {Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle} from '@shopify/polaris';\nimport { handleQuoteSubmit } from \"../trade/trades/src/test.js\"  \nimport { handleTradeSubmit } from \"../trade/trades/src/test.js\"    \n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    currency: 'EUR',\n    amount: '10',\n    list: [],\n  };\n\n  render() {\n   \n    const {currency, amount, list } = this.state; \n    \n    return (\n      <Layout.AnnotatedSection\n      title=\"Check exchange rates\"\n      description=\"Select your currency and amount to insure, we will give you our exchange rate rate instantly.\"\n      >\n        <Card sectioned>\n        <Form onSubmit={this.handleQuoteSubmit2}>\n            <FormLayout>\n              <TextField\n                value={currency}\n                onChange={this.handleChange('currency')}\n                label=\"Currency\"\n                type=\"currency\"\n              />\n              <TextField\n                value={amount}\n                onChange={this.handleChange('amount')}\n                label=\"Amount\"\n                type=\"amount\"\n              />\n              <p>The quote is </p>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Check\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n          <Form onSubmit={this.handleTradeSubmit2}>\n            <FormLayout>\n              <Stack distribution=\"trailing\">\n                <Button submit>\n                  Trade\n                </Button>\n              </Stack>\n            </FormLayout>\n          </Form>\n\n        </Card>\n      </Layout.AnnotatedSection> \n    )\n  }\n  handleChange = (field) => {\n    return (value) => this.setState({[field]: value});\n  };\n  handleQuoteSubmit2 = () => {\n    var currency_save = this.state.currency\n   // handleQuoteSubmit(currency_save)\n\n  // Retrieves the list of items from the Express app\n\n    console.log(this.state.list)\n\n  };\n  handleTradeSubmit2 = () => {\n    var currency_save = this.state.currency\n    var amount_save = this.state.amount\n    handleTradeSubmit(currency_save,amount_save)\n  };\n  \n}\n\nexport default AnnotatedLayout;\n*/\n\n/*\nimport React from 'react';\nimport {BrowserRouter, Switch} from 'react-router-dom';\nimport {Provider as AppBridgeProvider} from '@shopify/app-bridge-react';\n\nimport Routes from './Routes';\n\nexport default function MyApp() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <AppBridgeProvider\n        config={{\n          apiKey: '0f8ce556ea9c2404ba758d4332be0b68',\n          shopOrigin: 'haloy.myshopify.com',\n        }}\n      >\n        <Routes />\n      </AppBridgeProvider>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n*/\n\n  // Initialize the state\n  /*constructor(props){\n    super(props);\n    this.state = {\n      list: []\n    }\n    console.log(\"1\")\n  }\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.getList();\n    console.log(\"2\")\n  }\n\n  // Retrieves the list of items from the Express app\n  getList = () => {\n    fetch('/api/getList')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n    console.log(\"3\")\n  }  */\n\n  import React from 'react';\n  import ReactDOM from 'react-dom';\n  import {Provider, ResourcePicker} from '@shopify/app-bridge-react';\n  \n  function MyApp() {\n    const config = {apiKey: '12345', shopOrigin: shopOrigin};\n    return (\n      <Provider config={config}>\n        <ResourcePicker resourceType=\"Product\" open />\n      </Provider>\n    );\n  }\n  \n  const root = document.createElement('div');\n  document.body.appendChild(root);\n  ReactDOM.render(<MyApp />, root);\n"]},"metadata":{},"sourceType":"module"}