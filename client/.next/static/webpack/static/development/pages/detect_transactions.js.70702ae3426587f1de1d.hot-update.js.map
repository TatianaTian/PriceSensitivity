{"version":3,"file":"static/webpack/static/development/pages/detect_transactions.js.70702ae3426587f1de1d.hot-update.js","sources":["webpack:///./functions/change_format2.js"],"sourcesContent":["import store from 'store-js';\n\nconst getPearsonCorrelation = require('./calc_correlation')\n\nconst change_format2 = (allList) => {\n    let myMap = new Map();\n    let countryListMap = new Map();\n    //console.log(\"all list is \", alllist)\n\n    const store_currency = allList[3]\n    //localStorage.setItem('store_currency', store_currency);\n    /*\n    if(window.localStorage) {\n        // localStorage can be used\n        localStorage.setItem('store_currency', store_currency);\n      } else {\n        // can't be used\n        //localStorage.setItem('store_currency', store_currency);\n        console.log(\"error in localstorage\")\n      }*/\n    \n\n    const list = allList[1]\n   // try{\n    console.log(\"list in format is \", list)\n    // i is currency iterator\n    for (var i=0; i<list.length; i++){\n        //console.log(\"i is \", i)\n        const currency = list[i][0]\n        const detail = list[i][3]\n        const current_level = list[i][2]\n        const country_list = list[i][1]\n\n        countryListMap.set(currency, country_list)\n        //console.log(\"currency is \", currency)\n\n        // j is products/all iterator\n        let map2 = new Map();\n        for (var j=0; j<detail.length; j++){\n            //console.log(\"j is \", j)\n            var date_list = []\n            var revenue_list = []\n            var fx_list = []\n\n\n            const product_id = list[i][3][j][0]\n            for (var k=0; k<list[i][3][j][1].length; k++){\n                    \n                date_list.push(list[i][3][j][1][k][0])\n                //date_list.push('*')\n                revenue_list.push(parseFloat(list[i][3][j][1][k][1][0]))\n                //revenue_list.push('*')\n                fx_list.push(parseFloat(list[i][3][j][1][k][1][1]))\n                //fx_list.push('*')\n            }\n            map2.set(product_id, [date_list, revenue_list, fx_list, current_level, country_list])\n        }\n        myMap.set(currency, map2)\n\n    }\n    //console.log(\"myMap is \", myMap)\n\n    const product_id_title = allList[2]\n    let product_id_title_map = new Map();\n    let product_id_price_map = new Map();\n\n    //console.log('product_id_title is ', product_id_title)\n    \n    try{\n        for (var k=0; k<product_id_title.length; k++){\n            product_id_title_map.set(product_id_title[k][0],product_id_title[k][1])\n            product_id_price_map.set(product_id_title[k][0],product_id_title[k][2])\n        }\n    } catch(error){\n        console.log(\"error id title\")\n    }\n\n    // build today fx map\n    let fx_map = new Map();\n    try{\n        fx_list = allList[4]\n        console.log(\"fx_list length is \", fx_list.length)\n        for (var f=0;f<fx_list.length;f++){\n            fx_map.set(fx_list[f][0], fx_list[f][1])\n        }\n\n    } catch(error){\n        console.log(\"fx_list length error\")\n    }\n    \n\n    console.log(\"fx_map is \", fx_map)\n\n\n    // build perc change map\n    let perc_change_map = new Map();\n    try{\n        const per_change_list = allList[5]\n        console.log(\"per_change_list length is \", per_change_list.length)\n        for (var g=0;g<per_change_list.length;g++){\n            perc_change_map.set(perc_change_map[g][0], perc_change_map[g][1])\n        }\n\n    } catch(error){\n        console.log(\"fx_list length error\")\n    }\n\n\n    \n\n    return [myMap, product_id_title_map, product_id_price_map, store_currency, fx_map, countryListMap, perc_change_map]\n}\n\nmodule.exports = change_format2; "],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;A","sourceRoot":""}